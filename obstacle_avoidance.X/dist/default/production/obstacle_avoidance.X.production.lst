

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Jun 16 03:00:05 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	idataBANK2,global,class=CODE,delta=1
     9                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    61  0000                     
    62                           	psect	idataCOMRAM
    63  005819                     __pidataCOMRAM:
    64                           	opt stack 0
    65                           
    66                           ;initializer for _slave_rw
    67  005819  02                 	db	2
    68                           
    69                           	psect	idataBANK0
    70  005818                     __pidataBANK0:
    71                           	opt stack 0
    72                           
    73                           ;initializer for _slave_lw
    74  005818  04                 	db	4
    75                           
    76                           	psect	idataBANK1
    77  005B33                     __pidataBANK1:
    78                           	opt stack 0
    79                           
    80                           ;initializer for _obstacle_rule_lw
    81  005B33  00                 	db	0
    82  005B34  20                 	db	32
    83  005B35  41                 	db	65
    84  005B36  00                 	db	0
    85  005B37  20                 	db	32
    86  005B38  41                 	db	65
    87  005B39  00                 	db	0
    88  005B3A  20                 	db	32
    89  005B3B  41                 	db	65
    90  005B3C  00                 	db	0
    91  005B3D  20                 	db	32
    92  005B3E  42                 	db	66
    93  005B3F  00                 	db	0
    94  005B40  20                 	db	32
    95  005B41  41                 	db	65
    96  005B42  00                 	db	0
    97  005B43  20                 	db	32
    98  005B44  41                 	db	65
    99  005B45  00                 	db	0
   100  005B46  20                 	db	32
   101  005B47  42                 	db	66
   102  005B48  00                 	db	0
   103  005B49  20                 	db	32
   104  005B4A  41                 	db	65
   105  005B4B  00                 	db	0
   106  005B4C  20                 	db	32
   107  005B4D  41                 	db	65
   108  005B4E  00                 	db	0
   109  005B4F  A0                 	db	160
   110  005B50  41                 	db	65
   111  005B51  00                 	db	0
   112  005B52  20                 	db	32
   113  005B53  41                 	db	65
   114  005B54  00                 	db	0
   115  005B55  20                 	db	32
   116  005B56  41                 	db	65
   117  005B57  00                 	db	0
   118  005B58  20                 	db	32
   119  005B59  42                 	db	66
   120  005B5A  00                 	db	0
   121  005B5B  20                 	db	32
   122  005B5C  42                 	db	66
   123  005B5D  00                 	db	0
   124  005B5E  A0                 	db	160
   125  005B5F  41                 	db	65
   126  005B60  00                 	db	0
   127  005B61  20                 	db	32
   128  005B62  42                 	db	66
   129  005B63  00                 	db	0
   130  005B64  20                 	db	32
   131  005B65  42                 	db	66
   132  005B66  00                 	db	0
   133  005B67  20                 	db	32
   134  005B68  42                 	db	66
   135  005B69  00                 	db	0
   136  005B6A  A0                 	db	160
   137  005B6B  41                 	db	65
   138  005B6C  00                 	db	0
   139  005B6D  20                 	db	32
   140  005B6E  41                 	db	65
   141  005B6F  00                 	db	0
   142  005B70  20                 	db	32
   143  005B71  41                 	db	65
   144  005B72  00                 	db	0
   145  005B73  20                 	db	32
   146  005B74  42                 	db	66
   147  005B75  00                 	db	0
   148  005B76  48                 	db	72
   149  005B77  42                 	db	66
   150  005B78  00                 	db	0
   151  005B79  48                 	db	72
   152  005B7A  42                 	db	66
   153  005B7B  00                 	db	0
   154  005B7C  20                 	db	32
   155  005B7D  42                 	db	66
   156  005B7E  00                 	db	0
   157  005B7F  48                 	db	72
   158  005B80  42                 	db	66
   159  005B81  00                 	db	0
   160  005B82  70                 	db	112
   161  005B83  42                 	db	66
   162                           
   163                           	psect	idataBANK2
   164  005AE2                     __pidataBANK2:
   165                           	opt stack 0
   166                           
   167                           ;initializer for _obstacle_rule_rw
   168  005AE2  00                 	db	0
   169  005AE3  20                 	db	32
   170  005AE4  42                 	db	66
   171  005AE5  00                 	db	0
   172  005AE6  20                 	db	32
   173  005AE7  42                 	db	66
   174  005AE8  00                 	db	0
   175  005AE9  20                 	db	32
   176  005AEA  42                 	db	66
   177  005AEB  00                 	db	0
   178  005AEC  20                 	db	32
   179  005AED  41                 	db	65
   180  005AEE  00                 	db	0
   181  005AEF  20                 	db	32
   182  005AF0  42                 	db	66
   183  005AF1  00                 	db	0
   184  005AF2  20                 	db	32
   185  005AF3  42                 	db	66
   186  005AF4  00                 	db	0
   187  005AF5  20                 	db	32
   188  005AF6  41                 	db	65
   189  005AF7  00                 	db	0
   190  005AF8  20                 	db	32
   191  005AF9  41                 	db	65
   192  005AFA  00                 	db	0
   193  005AFB  20                 	db	32
   194  005AFC  42                 	db	66
   195  005AFD  00                 	db	0
   196  005AFE  F0                 	db	240
   197  005AFF  41                 	db	65
   198  005B00  00                 	db	0
   199  005B01  20                 	db	32
   200  005B02  42                 	db	66
   201  005B03  00                 	db	0
   202  005B04  20                 	db	32
   203  005B05  42                 	db	66
   204  005B06  00                 	db	0
   205  005B07  A0                 	db	160
   206  005B08  41                 	db	65
   207  005B09  00                 	db	0
   208  005B0A  20                 	db	32
   209  005B0B  42                 	db	66
   210  005B0C  00                 	db	0
   211  005B0D  20                 	db	32
   212  005B0E  42                 	db	66
   213  005B0F  00                 	db	0
   214  005B10  20                 	db	32
   215  005B11  41                 	db	65
   216  005B12  00                 	db	0
   217  005B13  A0                 	db	160
   218  005B14  41                 	db	65
   219  005B15  00                 	db	0
   220  005B16  20                 	db	32
   221  005B17  42                 	db	66
   222  005B18  00                 	db	0
   223  005B19  A0                 	db	160
   224  005B1A  41                 	db	65
   225  005B1B  00                 	db	0
   226  005B1C  20                 	db	32
   227  005B1D  42                 	db	66
   228  005B1E  00                 	db	0
   229  005B1F  20                 	db	32
   230  005B20  42                 	db	66
   231  005B21  00                 	db	0
   232  005B22  A0                 	db	160
   233  005B23  41                 	db	65
   234  005B24  00                 	db	0
   235  005B25  48                 	db	72
   236  005B26  42                 	db	66
   237  005B27  00                 	db	0
   238  005B28  48                 	db	72
   239  005B29  42                 	db	66
   240  005B2A  00                 	db	0
   241  005B2B  A0                 	db	160
   242  005B2C  41                 	db	65
   243  005B2D  00                 	db	0
   244  005B2E  48                 	db	72
   245  005B2F  42                 	db	66
   246  005B30  00                 	db	0
   247  005B31  70                 	db	112
   248  005B32  42                 	db	66
   249  0000                     _TMR1	set	4046
   250  0000                     _ADCON0	set	4034
   251  0000                     _ADCON1	set	4033
   252  0000                     _INTCONbits	set	4082
   253  0000                     _PIR1bits	set	3998
   254  0000                     _PORTAbits	set	3968
   255  0000                     _PORTBbits	set	3969
   256  0000                     _PORTCbits	set	3970
   257  0000                     _PORTD	set	3971
   258  0000                     _PORTDbits	set	3971
   259  0000                     _SSPADD	set	4040
   260  0000                     _SSPBUF	set	4041
   261  0000                     _SSPCON1	set	4038
   262  0000                     _SSPCON1bits	set	4038
   263  0000                     _SSPCON2	set	4037
   264  0000                     _SSPCON2bits	set	4037
   265  0000                     _SSPSTAT	set	4039
   266  0000                     _SSPSTATbits	set	4039
   267  0000                     _T0CON	set	4053
   268  0000                     _T0CONbits	set	4053
   269  0000                     _T1CON	set	4045
   270  0000                     _T1CONbits	set	4045
   271  0000                     _T3CON	set	4017
   272  0000                     _TMR0H	set	4055
   273  0000                     _TMR0L	set	4054
   274  0000                     _TRISAbits	set	3986
   275  0000                     _TRISB	set	3987
   276  0000                     _TRISBbits	set	3987
   277  0000                     _TRISC	set	3988
   278  0000                     _TRISD	set	3989
   279  0000                     _TRISDbits	set	3989
   280                           
   281                           	psect	nvCOMRAM
   282  00005D                     __pnvCOMRAM:
   283                           	opt stack 0
   284  00005D                     _mul_obs:
   285                           	opt stack 0
   286  00005D                     	ds	2
   287                           
   288                           	psect	nvBANK0
   289  0000E5                     __pnvBANK0:
   290                           	opt stack 0
   291  0000E5                     _width_obs:
   292                           	opt stack 0
   293  0000E5                     	ds	2
   294                           
   295                           ; #config settings
   296  0000                     
   297                           	psect	cinit
   298  005CB6                     __pcinit:
   299                           	opt stack 0
   300  005CB6                     start_initialization:
   301                           	opt stack 0
   302  005CB6                     __initialization:
   303                           	opt stack 0
   304                           
   305                           ; Clear objects allocated to BANK1 (162 bytes)
   306  005CB6  EE01  F000         	lfsr	0,__pbssBANK1
   307  005CBA  0EA2               	movlw	162
   308  005CBC                     clear_0:
   309  005CBC  6AEE               	clrf	postinc0,c
   310  005CBE  06E8               	decf	wreg,f,c
   311  005CC0  E1FD               	bnz	clear_0
   312                           
   313                           ; Clear objects allocated to BANK0 (86 bytes)
   314  005CC2  EE00  F060         	lfsr	0,__pbssBANK0
   315  005CC6  0E56               	movlw	86
   316  005CC8                     clear_1:
   317  005CC8  6AEE               	clrf	postinc0,c
   318  005CCA  06E8               	decf	wreg,f,c
   319  005CCC  E1FD               	bnz	clear_1
   320                           
   321                           ; Initialize objects allocated to BANK2 (81 bytes)
   322                           ; load TBLPTR registers with __pidataBANK2
   323  005CCE  0EE2               	movlw	low __pidataBANK2
   324  005CD0  6EF6               	movwf	tblptrl,c
   325  005CD2  0E5A               	movlw	high __pidataBANK2
   326  005CD4  6EF7               	movwf	tblptrh,c
   327  005CD6  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   328  005CD8  6EF8               	movwf	tblptru,c
   329  005CDA  EE02  F000         	lfsr	0,__pdataBANK2
   330  005CDE  EE10 F051          	lfsr	1,81
   331  005CE2                     copy_data0:
   332  005CE2  0009               	tblrd		*+
   333  005CE4  CFF5 FFEE          	movff	tablat,postinc0
   334  005CE8  50E5               	movf	postdec1,w,c
   335  005CEA  50E1               	movf	fsr1l,w,c
   336  005CEC  E1FA               	bnz	copy_data0
   337                           
   338                           ; Initialize objects allocated to BANK1 (81 bytes)
   339                           ; load TBLPTR registers with __pidataBANK1
   340  005CEE  0E33               	movlw	low __pidataBANK1
   341  005CF0  6EF6               	movwf	tblptrl,c
   342  005CF2  0E5B               	movlw	high __pidataBANK1
   343  005CF4  6EF7               	movwf	tblptrh,c
   344  005CF6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   345  005CF8  6EF8               	movwf	tblptru,c
   346  005CFA  EE01  F0A2         	lfsr	0,__pdataBANK1
   347  005CFE  EE10 F051          	lfsr	1,81
   348  005D02                     copy_data1:
   349  005D02  0009               	tblrd		*+
   350  005D04  CFF5 FFEE          	movff	tablat,postinc0
   351  005D08  50E5               	movf	postdec1,w,c
   352  005D0A  50E1               	movf	fsr1l,w,c
   353  005D0C  E1FA               	bnz	copy_data1
   354                           
   355                           ; Initialize objects allocated to BANK0 (1 bytes)
   356                           ; load TBLPTR registers with __pidataBANK0
   357  005D0E  0E18               	movlw	low __pidataBANK0
   358  005D10  6EF6               	movwf	tblptrl,c
   359  005D12  0E58               	movlw	high __pidataBANK0
   360  005D14  6EF7               	movwf	tblptrh,c
   361  005D16  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   362  005D18  6EF8               	movwf	tblptru,c
   363  005D1A  0009               	tblrd		*+	;fetch initializer
   364  005D1C  CFF5 F0E7          	movff	tablat,__pdataBANK0
   365                           
   366                           ; Initialize objects allocated to COMRAM (1 bytes)
   367                           ; load TBLPTR registers with __pidataCOMRAM
   368  005D20  0E19               	movlw	low __pidataCOMRAM
   369  005D22  6EF6               	movwf	tblptrl,c
   370  005D24  0E58               	movlw	high __pidataCOMRAM
   371  005D26  6EF7               	movwf	tblptrh,c
   372  005D28  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   373  005D2A  6EF8               	movwf	tblptru,c
   374  005D2C  0009               	tblrd		*+	;fetch initializer
   375  005D2E  CFF5 F05F          	movff	tablat,__pdataCOMRAM
   376  005D32                     end_of_initialization:
   377                           	opt stack 0
   378  005D32                     __end_of__initialization:
   379                           	opt stack 0
   380  005D32  0100               	movlb	0
   381  005D34  EF9E  F034         	goto	_main	;jump to C main() function
   382                           tblptru	equ	0xFF8
   383                           tblptrh	equ	0xFF7
   384                           tblptrl	equ	0xFF6
   385                           tablat	equ	0xFF5
   386                           postinc0	equ	0xFEE
   387                           wreg	equ	0xFE8
   388                           postdec1	equ	0xFE5
   389                           fsr1l	equ	0xFE1
   390                           
   391                           	psect	dataCOMRAM
   392  00005F                     __pdataCOMRAM:
   393                           	opt stack 0
   394  00005F                     _slave_rw:
   395                           	opt stack 0
   396  00005F                     	ds	1
   397                           tblptru	equ	0xFF8
   398                           tblptrh	equ	0xFF7
   399                           tblptrl	equ	0xFF6
   400                           tablat	equ	0xFF5
   401                           postinc0	equ	0xFEE
   402                           wreg	equ	0xFE8
   403                           postdec1	equ	0xFE5
   404                           fsr1l	equ	0xFE1
   405                           
   406                           	psect	bssBANK0
   407  000060                     __pbssBANK0:
   408                           	opt stack 0
   409  000060                     _Mem_front:
   410                           	opt stack 0
   411  000060                     	ds	9
   412  000069                     _Mem_left:
   413                           	opt stack 0
   414  000069                     	ds	9
   415  000072                     _Mem_right:
   416                           	opt stack 0
   417  000072                     	ds	9
   418  00007B                     _lw_vel_obs:
   419                           	opt stack 0
   420  00007B                     	ds	3
   421  00007E                     _rw_vel_obs:
   422                           	opt stack 0
   423  00007E                     	ds	3
   424  000081                     _s2:
   425                           	opt stack 0
   426  000081                     	ds	3
   427  000084                     _s3:
   428                           	opt stack 0
   429  000084                     	ds	3
   430  000087                     _s4:
   431                           	opt stack 0
   432  000087                     	ds	3
   433  00008A                     _s5:
   434                           	opt stack 0
   435  00008A                     	ds	3
   436  00008D                     _s6:
   437                           	opt stack 0
   438  00008D                     	ds	3
   439  000090                     _s7:
   440                           	opt stack 0
   441  000090                     	ds	3
   442  000093                     _s8:
   443                           	opt stack 0
   444  000093                     	ds	3
   445  000096                     _s9:
   446                           	opt stack 0
   447  000096                     	ds	3
   448  000099                     _s_front:
   449                           	opt stack 0
   450  000099                     	ds	3
   451  00009C                     _s_front_left:
   452                           	opt stack 0
   453  00009C                     	ds	3
   454  00009F                     _s_front_right:
   455                           	opt stack 0
   456  00009F                     	ds	3
   457  0000A2                     _lw_velocity:
   458                           	opt stack 0
   459  0000A2                     	ds	2
   460  0000A4                     _rw_velocity:
   461                           	opt stack 0
   462  0000A4                     	ds	2
   463  0000A6                     _s2_old:
   464                           	opt stack 0
   465  0000A6                     	ds	2
   466  0000A8                     _s3_old:
   467                           	opt stack 0
   468  0000A8                     	ds	2
   469  0000AA                     _s4_old:
   470                           	opt stack 0
   471  0000AA                     	ds	2
   472  0000AC                     _s5_old:
   473                           	opt stack 0
   474  0000AC                     	ds	2
   475  0000AE                     _s6_old:
   476                           	opt stack 0
   477  0000AE                     	ds	2
   478  0000B0                     _s7_old:
   479                           	opt stack 0
   480  0000B0                     	ds	2
   481  0000B2                     _s8_old:
   482                           	opt stack 0
   483  0000B2                     	ds	2
   484  0000B4                     _s9_old:
   485                           	opt stack 0
   486  0000B4                     	ds	2
   487                           tblptru	equ	0xFF8
   488                           tblptrh	equ	0xFF7
   489                           tblptrl	equ	0xFF6
   490                           tablat	equ	0xFF5
   491                           postinc0	equ	0xFEE
   492                           wreg	equ	0xFE8
   493                           postdec1	equ	0xFE5
   494                           fsr1l	equ	0xFE1
   495                           
   496                           	psect	dataBANK0
   497  0000E7                     __pdataBANK0:
   498                           	opt stack 0
   499  0000E7                     _slave_lw:
   500                           	opt stack 0
   501  0000E7                     	ds	1
   502                           tblptru	equ	0xFF8
   503                           tblptrh	equ	0xFF7
   504                           tblptrl	equ	0xFF6
   505                           tablat	equ	0xFF5
   506                           postinc0	equ	0xFEE
   507                           wreg	equ	0xFE8
   508                           postdec1	equ	0xFE5
   509                           fsr1l	equ	0xFE1
   510                           
   511                           	psect	bssBANK1
   512  000100                     __pbssBANK1:
   513                           	opt stack 0
   514  000100                     _area_obstacle_avoid_lw:
   515                           	opt stack 0
   516  000100                     	ds	81
   517  000151                     _premise_obstacle_avoid_lw:
   518                           	opt stack 0
   519  000151                     	ds	81
   520                           tblptru	equ	0xFF8
   521                           tblptrh	equ	0xFF7
   522                           tblptrl	equ	0xFF6
   523                           tablat	equ	0xFF5
   524                           postinc0	equ	0xFEE
   525                           wreg	equ	0xFE8
   526                           postdec1	equ	0xFE5
   527                           fsr1l	equ	0xFE1
   528                           
   529                           	psect	dataBANK1
   530  0001A2                     __pdataBANK1:
   531                           	opt stack 0
   532  0001A2                     _obstacle_rule_lw:
   533                           	opt stack 0
   534  0001A2                     	ds	81
   535                           tblptru	equ	0xFF8
   536                           tblptrh	equ	0xFF7
   537                           tblptrl	equ	0xFF6
   538                           tablat	equ	0xFF5
   539                           postinc0	equ	0xFEE
   540                           wreg	equ	0xFE8
   541                           postdec1	equ	0xFE5
   542                           fsr1l	equ	0xFE1
   543                           
   544                           	psect	dataBANK2
   545  000200                     __pdataBANK2:
   546                           	opt stack 0
   547  000200                     _obstacle_rule_rw:
   548                           	opt stack 0
   549  000200                     	ds	81
   550                           tblptru	equ	0xFF8
   551                           tblptrh	equ	0xFF7
   552                           tblptrl	equ	0xFF6
   553                           tablat	equ	0xFF5
   554                           postinc0	equ	0xFEE
   555                           wreg	equ	0xFE8
   556                           postdec1	equ	0xFE5
   557                           fsr1l	equ	0xFE1
   558                           
   559                           	psect	cstackBANK0
   560  0000B6                     __pcstackBANK0:
   561                           	opt stack 0
   562  0000B6                     Pos_Centre_Mem@Pos_Centre_Mem:
   563                           	opt stack 0
   564  0000B6                     obstacle_avoid_controller@temp1:
   565                           	opt stack 0
   566                           
   567                           ; 3 bytes @ 0x0
   568  0000B6                     	ds	3
   569  0000B9                     Pos_Centre_Mem@temp:
   570                           	opt stack 0
   571  0000B9                     obstacle_avoid_controller@temp3:
   572                           	opt stack 0
   573                           
   574                           ; 3 bytes @ 0x3
   575  0000B9                     	ds	3
   576  0000BC                     obstacle_avoid_controller@premise_temp:
   577                           	opt stack 0
   578  0000BC                     _Pos_Centre_Mem$1818:
   579                           	opt stack 0
   580                           
   581                           ; 3 bytes @ 0x6
   582  0000BC                     	ds	3
   583  0000BF                     obstacle_avoid_controller@temp:
   584                           	opt stack 0
   585  0000BF                     _Pos_Centre_Mem$1820:
   586                           	opt stack 0
   587                           
   588                           ; 3 bytes @ 0x9
   589  0000BF                     	ds	2
   590  0000C1                     obstacle_avoid_controller@temp2:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0xB
   594  0000C1                     	ds	1
   595  0000C2                     _Pos_Centre_Mem$1821:
   596                           	opt stack 0
   597                           
   598                           ; 3 bytes @ 0xC
   599  0000C2                     	ds	1
   600  0000C3                     obstacle_avoid_controller@i:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0xD
   604  0000C3                     	ds	2
   605  0000C5                     obstacle_avoid_controller@j:
   606                           	opt stack 0
   607  0000C5                     _Pos_Centre_Mem$1823:
   608                           	opt stack 0
   609                           
   610                           ; 3 bytes @ 0xF
   611  0000C5                     	ds	2
   612  0000C7                     obstacle_avoid_controller@k:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x11
   616  0000C7                     	ds	1
   617  0000C8                     _Pos_Centre_Mem$1824:
   618                           	opt stack 0
   619                           
   620                           ; 3 bytes @ 0x12
   621  0000C8                     	ds	1
   622  0000C9                     obstacle_avoid_controller@i_835:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x13
   626  0000C9                     	ds	2
   627  0000CB                     obstacle_avoid_controller@j_836:
   628                           	opt stack 0
   629  0000CB                     _Pos_Centre_Mem$1825:
   630                           	opt stack 0
   631                           
   632                           ; 3 bytes @ 0x15
   633  0000CB                     	ds	2
   634  0000CD                     obstacle_avoid_controller@k_837:
   635                           	opt stack 0
   636                           
   637                           ; 2 bytes @ 0x17
   638  0000CD                     	ds	1
   639  0000CE                     _Pos_Centre_Mem$1819:
   640                           	opt stack 0
   641                           
   642                           ; 3 bytes @ 0x18
   643  0000CE                     	ds	1
   644  0000CF                     obstacle_avoid_controller@num:
   645                           	opt stack 0
   646                           
   647                           ; 3 bytes @ 0x19
   648  0000CF                     	ds	2
   649  0000D1                     _Pos_Centre_Mem$1822:
   650                           	opt stack 0
   651                           
   652                           ; 3 bytes @ 0x1B
   653  0000D1                     	ds	1
   654  0000D2                     obstacle_avoid_controller@den:
   655                           	opt stack 0
   656                           
   657                           ; 3 bytes @ 0x1C
   658  0000D2                     	ds	3
   659  0000D5                     obstacle_avoid_controller@i_839:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x1F
   663  0000D5                     	ds	2
   664  0000D7                     obstacle_avoid_controller@j_840:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x21
   668  0000D7                     	ds	2
   669  0000D9                     obstacle_avoid_controller@k_841:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0x23
   673  0000D9                     	ds	2
   674  0000DB                     obstacle_avoid_controller@i_844:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0x25
   678  0000DB                     	ds	2
   679  0000DD                     obstacle_avoid_controller@j_845:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x27
   683  0000DD                     	ds	2
   684  0000DF                     obstacle_avoid_controller@k_846:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0x29
   688  0000DF                     	ds	2
   689  0000E1                     ??_main:
   690                           
   691                           ; 0 bytes @ 0x2B
   692  0000E1                     	ds	4
   693                           tblptru	equ	0xFF8
   694                           tblptrh	equ	0xFF7
   695                           tblptrl	equ	0xFF6
   696                           tablat	equ	0xFF5
   697                           postinc0	equ	0xFEE
   698                           wreg	equ	0xFE8
   699                           postdec1	equ	0xFE5
   700                           fsr1l	equ	0xFE1
   701                           
   702                           	psect	cstackCOMRAM
   703  000001                     __pcstackCOMRAM:
   704                           	opt stack 0
   705  000001                     ??_IdleI2C:
   706  000001                     ?___wmul:
   707                           	opt stack 0
   708  000001                     ?___awdiv:
   709                           	opt stack 0
   710  000001                     ?___ftpack:
   711                           	opt stack 0
   712  000001                     ?___fttol:
   713                           	opt stack 0
   714  000001                     OpenI2C@slew:
   715                           	opt stack 0
   716  000001                     s_delay@a:
   717                           	opt stack 0
   718  000001                     long_delay@a:
   719                           	opt stack 0
   720  000001                     ___wmul@multiplier:
   721                           	opt stack 0
   722  000001                     ___awdiv@dividend:
   723                           	opt stack 0
   724  000001                     ___ftpack@arg:
   725                           	opt stack 0
   726  000001                     ___ftge@ff1:
   727                           	opt stack 0
   728  000001                     ___fttol@f1:
   729                           	opt stack 0
   730                           
   731                           ; 3 bytes @ 0x0
   732  000001                     	ds	1
   733  000002                     ??_WriteI2C:
   734  000002                     OpenI2C@sync_mode:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0x1
   738  000002                     	ds	1
   739  000003                     ??_s_delay:
   740  000003                     ??_long_delay:
   741  000003                     WriteI2C@data_out:
   742                           	opt stack 0
   743  000003                     ___wmul@multiplicand:
   744                           	opt stack 0
   745  000003                     ___awdiv@divisor:
   746                           	opt stack 0
   747                           
   748                           ; 2 bytes @ 0x2
   749  000003                     	ds	1
   750  000004                     ___ftpack@exp:
   751                           	opt stack 0
   752  000004                     SetWheelSpeed@lw:
   753                           	opt stack 0
   754  000004                     s_delay@x:
   755                           	opt stack 0
   756  000004                     long_delay@x:
   757                           	opt stack 0
   758  000004                     ___ftge@ff2:
   759                           	opt stack 0
   760                           
   761                           ; 3 bytes @ 0x3
   762  000004                     	ds	1
   763  000005                     ??___fttol:
   764  000005                     ___awdiv@counter:
   765                           	opt stack 0
   766  000005                     ___ftpack@sign:
   767                           	opt stack 0
   768  000005                     ___wmul@product:
   769                           	opt stack 0
   770                           
   771                           ; 2 bytes @ 0x4
   772  000005                     	ds	1
   773  000006                     ??___ftpack:
   774  000006                     lcdcmd@value:
   775                           	opt stack 0
   776  000006                     lcdcmd_4bit@value:
   777                           	opt stack 0
   778  000006                     lcddata_4bit@value:
   779                           	opt stack 0
   780  000006                     ___awdiv@sign:
   781                           	opt stack 0
   782  000006                     SetWheelSpeed@rw:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x5
   786  000006                     	ds	1
   787  000007                     ??___ftge:
   788  000007                     ___awdiv@quotient:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0x6
   792  000007                     	ds	1
   793  000008                     
   794                           ; 0 bytes @ 0x7
   795  000008                     	ds	1
   796  000009                     ?___awtoft:
   797                           	opt stack 0
   798  000009                     ?___lwtoft:
   799                           	opt stack 0
   800  000009                     ___awtoft@c:
   801                           	opt stack 0
   802  000009                     ___lwtoft@c:
   803                           	opt stack 0
   804  000009                     int_to_char@b:
   805                           	opt stack 0
   806                           
   807                           ; 3 bytes @ 0x8
   808  000009                     	ds	1
   809  00000A                     ?_min:
   810                           	opt stack 0
   811  00000A                     ___fttol@sign1:
   812                           	opt stack 0
   813  00000A                     min@x:
   814                           	opt stack 0
   815                           
   816                           ; 3 bytes @ 0x9
   817  00000A                     	ds	1
   818  00000B                     ___fttol@lval:
   819                           	opt stack 0
   820                           
   821                           ; 4 bytes @ 0xA
   822  00000B                     	ds	1
   823  00000C                     ?___ftmul:
   824                           	opt stack 0
   825  00000C                     int_to_char@a:
   826                           	opt stack 0
   827  00000C                     ___awtoft@sign:
   828                           	opt stack 0
   829  00000C                     ___ftmul@f1:
   830                           	opt stack 0
   831                           
   832                           ; 3 bytes @ 0xB
   833  00000C                     	ds	1
   834  00000D                     int_to_char@temp:
   835                           	opt stack 0
   836  00000D                     min@y:
   837                           	opt stack 0
   838                           
   839                           ; 3 bytes @ 0xC
   840  00000D                     	ds	1
   841  00000E                     int_to_char@i:
   842                           	opt stack 0
   843                           
   844                           ; 2 bytes @ 0xD
   845  00000E                     	ds	1
   846  00000F                     ___fttol@exp1:
   847                           	opt stack 0
   848  00000F                     ___ftmul@f2:
   849                           	opt stack 0
   850                           
   851                           ; 3 bytes @ 0xE
   852  00000F                     	ds	1
   853  000010                     min@z:
   854                           	opt stack 0
   855                           
   856                           ; 3 bytes @ 0xF
   857  000010                     	ds	2
   858  000012                     ??___ftmul:
   859                           
   860                           ; 0 bytes @ 0x11
   861  000012                     	ds	3
   862  000015                     ___ftmul@exp:
   863                           	opt stack 0
   864                           
   865                           ; 1 bytes @ 0x14
   866  000015                     	ds	1
   867  000016                     ___ftmul@f3_as_product:
   868                           	opt stack 0
   869                           
   870                           ; 3 bytes @ 0x15
   871  000016                     	ds	3
   872  000019                     ___ftmul@cntr:
   873                           	opt stack 0
   874                           
   875                           ; 1 bytes @ 0x18
   876  000019                     	ds	1
   877  00001A                     ___ftmul@sign:
   878                           	opt stack 0
   879                           
   880                           ; 1 bytes @ 0x19
   881  00001A                     	ds	1
   882  00001B                     ?___ftdiv:
   883                           	opt stack 0
   884  00001B                     ___ftdiv@f1:
   885                           	opt stack 0
   886                           
   887                           ; 3 bytes @ 0x1A
   888  00001B                     	ds	3
   889  00001E                     ___ftdiv@f2:
   890                           	opt stack 0
   891                           
   892                           ; 3 bytes @ 0x1D
   893  00001E                     	ds	3
   894  000021                     ??___ftdiv:
   895                           
   896                           ; 0 bytes @ 0x20
   897  000021                     	ds	3
   898  000024                     ___ftdiv@cntr:
   899                           	opt stack 0
   900                           
   901                           ; 1 bytes @ 0x23
   902  000024                     	ds	1
   903  000025                     ___ftdiv@f3:
   904                           	opt stack 0
   905                           
   906                           ; 3 bytes @ 0x24
   907  000025                     	ds	3
   908  000028                     ___ftdiv@exp:
   909                           	opt stack 0
   910                           
   911                           ; 1 bytes @ 0x27
   912  000028                     	ds	1
   913  000029                     ___ftdiv@sign:
   914                           	opt stack 0
   915                           
   916                           ; 1 bytes @ 0x28
   917  000029                     	ds	1
   918  00002A                     ?___ftneg:
   919                           	opt stack 0
   920  00002A                     ___ftneg@f1:
   921                           	opt stack 0
   922                           
   923                           ; 3 bytes @ 0x29
   924  00002A                     	ds	3
   925  00002D                     ?___ftadd:
   926                           	opt stack 0
   927  00002D                     ___ftadd@f1:
   928                           	opt stack 0
   929                           
   930                           ; 3 bytes @ 0x2C
   931  00002D                     	ds	3
   932  000030                     ___ftadd@f2:
   933                           	opt stack 0
   934                           
   935                           ; 3 bytes @ 0x2F
   936  000030                     	ds	3
   937  000033                     ??___ftadd:
   938                           
   939                           ; 0 bytes @ 0x32
   940  000033                     	ds	3
   941  000036                     ___ftadd@sign:
   942                           	opt stack 0
   943                           
   944                           ; 1 bytes @ 0x35
   945  000036                     	ds	1
   946  000037                     ___ftadd@exp2:
   947                           	opt stack 0
   948                           
   949                           ; 1 bytes @ 0x36
   950  000037                     	ds	1
   951  000038                     ___ftadd@exp1:
   952                           	opt stack 0
   953                           
   954                           ; 1 bytes @ 0x37
   955  000038                     	ds	1
   956  000039                     ??_read_ultrasonic_s3:
   957  000039                     ??_read_ultrasonic_s4:
   958  000039                     ??_read_ultrasonic_s5:
   959  000039                     ??_read_ultrasonic_s6:
   960  000039                     ??_read_ultrasonic_s7:
   961  000039                     ??_read_ultrasonic_s8:
   962  000039                     ?_area:
   963                           	opt stack 0
   964  000039                     ?_step_func:
   965                           	opt stack 0
   966  000039                     area@w:
   967                           	opt stack 0
   968  000039                     step_func@x:
   969                           	opt stack 0
   970                           
   971                           ; 3 bytes @ 0x38
   972  000039                     	ds	3
   973  00003C                     area@h:
   974                           	opt stack 0
   975  00003C                     step_func@temp:
   976                           	opt stack 0
   977                           
   978                           ; 3 bytes @ 0x3B
   979  00003C                     	ds	1
   980  00003D                     read_ultrasonic_s3@value:
   981                           	opt stack 0
   982  00003D                     read_ultrasonic_s4@value:
   983                           	opt stack 0
   984  00003D                     read_ultrasonic_s5@value:
   985                           	opt stack 0
   986  00003D                     read_ultrasonic_s6@value:
   987                           	opt stack 0
   988  00003D                     read_ultrasonic_s7@value:
   989                           	opt stack 0
   990  00003D                     read_ultrasonic_s8@value:
   991                           	opt stack 0
   992                           
   993                           ; 2 bytes @ 0x3C
   994  00003D                     	ds	2
   995  00003F                     ?_Pos_left_Mem:
   996                           	opt stack 0
   997  00003F                     ?_Pos_Centre_Mem:
   998                           	opt stack 0
   999  00003F                     ?_Pos_Right_Mem:
  1000                           	opt stack 0
  1001  00003F                     area@area:
  1002                           	opt stack 0
  1003  00003F                     Pos_left_Mem@y1:
  1004                           	opt stack 0
  1005  00003F                     Pos_Centre_Mem@x2:
  1006                           	opt stack 0
  1007  00003F                     Pos_Right_Mem@x3:
  1008                           	opt stack 0
  1009                           
  1010                           ; 3 bytes @ 0x3E
  1011  00003F                     	ds	3
  1012  000042                     Pos_left_Mem@z1:
  1013                           	opt stack 0
  1014  000042                     Pos_Centre_Mem@y2:
  1015                           	opt stack 0
  1016  000042                     Pos_Right_Mem@y3:
  1017                           	opt stack 0
  1018  000042                     _area$1814:
  1019                           	opt stack 0
  1020                           
  1021                           ; 3 bytes @ 0x41
  1022  000042                     	ds	3
  1023  000045                     ??_obstacle_avoid_controller:
  1024  000045                     Pos_left_Mem@d:
  1025                           	opt stack 0
  1026  000045                     Pos_Centre_Mem@z2:
  1027                           	opt stack 0
  1028  000045                     Pos_Right_Mem@d:
  1029                           	opt stack 0
  1030                           
  1031                           ; 3 bytes @ 0x44
  1032  000045                     	ds	3
  1033  000048                     Pos_left_Mem@Pos_left_Mem:
  1034                           	opt stack 0
  1035  000048                     Pos_Centre_Mem@d:
  1036                           	opt stack 0
  1037  000048                     Pos_Right_Mem@Pos_Right_Mem:
  1038                           	opt stack 0
  1039                           
  1040                           ; 3 bytes @ 0x47
  1041  000048                     	ds	3
  1042  00004B                     _Pos_left_Mem$1815:
  1043                           	opt stack 0
  1044  00004B                     _Pos_Right_Mem$1826:
  1045                           	opt stack 0
  1046                           
  1047                           ; 3 bytes @ 0x4A
  1048  00004B                     	ds	3
  1049  00004E                     _Pos_left_Mem$1816:
  1050                           	opt stack 0
  1051  00004E                     _Pos_Right_Mem$1827:
  1052                           	opt stack 0
  1053                           
  1054                           ; 3 bytes @ 0x4D
  1055  00004E                     	ds	3
  1056  000051                     _Pos_left_Mem$1817:
  1057                           	opt stack 0
  1058  000051                     _Pos_Right_Mem$1828:
  1059                           	opt stack 0
  1060                           
  1061                           ; 3 bytes @ 0x50
  1062  000051                     	ds	3
  1063  000054                     _Pos_Right_Mem$1829:
  1064                           	opt stack 0
  1065                           
  1066                           ; 3 bytes @ 0x53
  1067  000054                     	ds	3
  1068  000057                     _Pos_Right_Mem$1830:
  1069                           	opt stack 0
  1070                           
  1071                           ; 3 bytes @ 0x56
  1072  000057                     	ds	3
  1073  00005A                     _Pos_Right_Mem$1831:
  1074                           	opt stack 0
  1075                           
  1076                           ; 3 bytes @ 0x59
  1077  00005A                     	ds	3
  1078  00005D                     tblptru	equ	0xFF8
  1079                           tblptrh	equ	0xFF7
  1080                           tblptrl	equ	0xFF6
  1081                           tablat	equ	0xFF5
  1082                           postinc0	equ	0xFEE
  1083                           wreg	equ	0xFE8
  1084                           postdec1	equ	0xFE5
  1085                           fsr1l	equ	0xFE1
  1086                           
  1087                           ; 0 bytes @ 0x5C
  1088 ;;
  1089 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1090 ;;
  1091 ;; *************** function _main *****************
  1092 ;; Defined at:
  1093 ;;		line 185 in file "obstacle_avoidance.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;		None               void
  1100 ;; Registers used:
  1101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1107 ;;      Params:         0       0       0       0       0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1109 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1110 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1111 ;;Total ram usage:        4 bytes
  1112 ;; Hardware stack levels required when called:    4
  1113 ;; This function calls:
  1114 ;;		_Mem_values_obs
  1115 ;;		_OpenI2C
  1116 ;;		_SetWheelSpeed
  1117 ;;		___fttol
  1118 ;;		_init_lcd
  1119 ;;		_init_ultrasonic
  1120 ;;		_int_to_char
  1121 ;;		_lcdcmd_4bit
  1122 ;;		_obstacle_avoid_controller
  1123 ;;		_read_sensors
  1124 ;; This function is called by:
  1125 ;;		Startup code after reset
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129                           	psect	text0
  1130  00693C                     __ptext0:
  1131                           	opt stack 0
  1132  00693C                     _main:
  1133                           	opt stack 27
  1134                           
  1135                           ;obstacle_avoidance.c: 187: mul_obs=40;
  1136                           
  1137                           ;incstack = 0
  1138  00693C  0E00               	movlw	0
  1139  00693E  6E5E               	movwf	_mul_obs+1,c
  1140  006940  0E28               	movlw	40
  1141  006942  6E5D               	movwf	_mul_obs,c
  1142                           
  1143                           ;obstacle_avoidance.c: 188: width_obs=20;
  1144  006944  0E00               	movlw	0
  1145  006946  0100               	movlb	0	; () banked
  1146  006948  6FE6               	movwf	(_width_obs+1)& (0+255),b
  1147  00694A  0E14               	movlw	20
  1148  00694C  0100               	movlb	0	; () banked
  1149  00694E  6FE5               	movwf	_width_obs& (0+255),b
  1150                           
  1151                           ;obstacle_avoidance.c: 189: TRISB=0;
  1152  006950  0E00               	movlw	0
  1153  006952  6E93               	movwf	3987,c	;volatile
  1154                           
  1155                           ; BSR set to: 0
  1156                           ;obstacle_avoidance.c: 191: init_lcd();
  1157  006954  EC9C  F02E         	call	_init_lcd	;wreg free
  1158                           
  1159                           ;obstacle_avoidance.c: 192: init_ultrasonic();
  1160  006958  EC4C  F02D         	call	_init_ultrasonic	;wreg free
  1161                           
  1162                           ;obstacle_avoidance.c: 193: OpenI2C( 0b00001000, 0b10000000);
  1163  00695C  0E80               	movlw	128
  1164  00695E  6E01               	movwf	OpenI2C@slew,c
  1165  006960  0E08               	movlw	8
  1166  006962  EC15  F02C         	call	_OpenI2C
  1167                           
  1168                           ;obstacle_avoidance.c: 194: SSPADD = 0x31;
  1169  006966  0E31               	movlw	49
  1170  006968  6EC8               	movwf	4040,c	;volatile
  1171  00696A                     l2697:
  1172                           
  1173                           ;obstacle_avoidance.c: 197: {
  1174                           ;obstacle_avoidance.c: 199: read_sensors();
  1175  00696A  EC2A  F02F         	call	_read_sensors	;wreg free
  1176                           
  1177                           ;obstacle_avoidance.c: 200: lcdcmd_4bit(0x80);
  1178  00696E  0E80               	movlw	128
  1179  006970  ECC2  F02C         	call	_lcdcmd_4bit
  1180                           
  1181                           ;obstacle_avoidance.c: 201: int_to_char(s_front_left);
  1182  006974  C09C  F001         	movff	_s_front_left,___fttol@f1
  1183  006978  C09D  F002         	movff	_s_front_left+1,___fttol@f1+1
  1184  00697C  C09E  F003         	movff	_s_front_left+2,___fttol@f1+2
  1185  006980  EC6C  F030         	call	___fttol	;wreg free
  1186  006984  C001  F0E1         	movff	?___fttol,??_main
  1187  006988  C002  F0E2         	movff	?___fttol+1,??_main+1
  1188  00698C  C003  F0E3         	movff	?___fttol+2,??_main+2
  1189  006990  C004  F0E4         	movff	?___fttol+3,??_main+3
  1190  006994  0100               	movlb	0	; () banked
  1191  006996  51E1               	movf	??_main& (0+255),w,b
  1192  006998  EC1E  F02E         	call	_int_to_char
  1193                           
  1194                           ;obstacle_avoidance.c: 202: lcdcmd_4bit(0x84);
  1195  00699C  0E84               	movlw	132
  1196  00699E  ECC2  F02C         	call	_lcdcmd_4bit
  1197                           
  1198                           ;obstacle_avoidance.c: 203: int_to_char(s_front);
  1199  0069A2  C099  F001         	movff	_s_front,___fttol@f1
  1200  0069A6  C09A  F002         	movff	_s_front+1,___fttol@f1+1
  1201  0069AA  C09B  F003         	movff	_s_front+2,___fttol@f1+2
  1202  0069AE  EC6C  F030         	call	___fttol	;wreg free
  1203  0069B2  C001  F0E1         	movff	?___fttol,??_main
  1204  0069B6  C002  F0E2         	movff	?___fttol+1,??_main+1
  1205  0069BA  C003  F0E3         	movff	?___fttol+2,??_main+2
  1206  0069BE  C004  F0E4         	movff	?___fttol+3,??_main+3
  1207  0069C2  0100               	movlb	0	; () banked
  1208  0069C4  51E1               	movf	??_main& (0+255),w,b
  1209  0069C6  EC1E  F02E         	call	_int_to_char
  1210                           
  1211                           ;obstacle_avoidance.c: 204: lcdcmd_4bit(0x88);
  1212  0069CA  0E88               	movlw	136
  1213  0069CC  ECC2  F02C         	call	_lcdcmd_4bit
  1214                           
  1215                           ;obstacle_avoidance.c: 205: int_to_char(s_front_right);
  1216  0069D0  C09F  F001         	movff	_s_front_right,___fttol@f1
  1217  0069D4  C0A0  F002         	movff	_s_front_right+1,___fttol@f1+1
  1218  0069D8  C0A1  F003         	movff	_s_front_right+2,___fttol@f1+2
  1219  0069DC  EC6C  F030         	call	___fttol	;wreg free
  1220  0069E0  C001  F0E1         	movff	?___fttol,??_main
  1221  0069E4  C002  F0E2         	movff	?___fttol+1,??_main+1
  1222  0069E8  C003  F0E3         	movff	?___fttol+2,??_main+2
  1223  0069EC  C004  F0E4         	movff	?___fttol+3,??_main+3
  1224  0069F0  0100               	movlb	0	; () banked
  1225  0069F2  51E1               	movf	??_main& (0+255),w,b
  1226  0069F4  EC1E  F02E         	call	_int_to_char
  1227                           
  1228                           ;obstacle_avoidance.c: 209: Mem_values_obs();
  1229  0069F8  EC07  F038         	call	_Mem_values_obs	;wreg free
  1230                           
  1231                           ;obstacle_avoidance.c: 210: obstacle_avoid_controller();
  1232  0069FC  EC7B  F03B         	call	_obstacle_avoid_controller	;wreg free
  1233                           
  1234                           ;obstacle_avoidance.c: 212: lw_velocity=lw_vel_obs;
  1235  006A00  C07B  F001         	movff	_lw_vel_obs,___fttol@f1
  1236  006A04  C07C  F002         	movff	_lw_vel_obs+1,___fttol@f1+1
  1237  006A08  C07D  F003         	movff	_lw_vel_obs+2,___fttol@f1+2
  1238  006A0C  EC6C  F030         	call	___fttol	;wreg free
  1239  006A10  C001  F0E1         	movff	?___fttol,??_main
  1240  006A14  C002  F0E2         	movff	?___fttol+1,??_main+1
  1241  006A18  C003  F0E3         	movff	?___fttol+2,??_main+2
  1242  006A1C  C004  F0E4         	movff	?___fttol+3,??_main+3
  1243  006A20  C0E1  F0A2         	movff	??_main,_lw_velocity
  1244  006A24  C0E2  F0A3         	movff	??_main+1,_lw_velocity+1
  1245                           
  1246                           ;obstacle_avoidance.c: 213: rw_velocity=rw_vel_obs;
  1247  006A28  C07E  F001         	movff	_rw_vel_obs,___fttol@f1
  1248  006A2C  C07F  F002         	movff	_rw_vel_obs+1,___fttol@f1+1
  1249  006A30  C080  F003         	movff	_rw_vel_obs+2,___fttol@f1+2
  1250  006A34  EC6C  F030         	call	___fttol	;wreg free
  1251  006A38  C001  F0E1         	movff	?___fttol,??_main
  1252  006A3C  C002  F0E2         	movff	?___fttol+1,??_main+1
  1253  006A40  C003  F0E3         	movff	?___fttol+2,??_main+2
  1254  006A44  C004  F0E4         	movff	?___fttol+3,??_main+3
  1255  006A48  C0E1  F0A4         	movff	??_main,_rw_velocity
  1256  006A4C  C0E2  F0A5         	movff	??_main+1,_rw_velocity+1
  1257                           
  1258                           ;obstacle_avoidance.c: 214: SetWheelSpeed(lw_velocity,rw_velocity);
  1259  006A50  C0A2  F004         	movff	_lw_velocity,SetWheelSpeed@lw
  1260  006A54  C0A3  F005         	movff	_lw_velocity+1,SetWheelSpeed@lw+1
  1261  006A58  C0A4  F006         	movff	_rw_velocity,SetWheelSpeed@rw
  1262  006A5C  C0A5  F007         	movff	_rw_velocity+1,SetWheelSpeed@rw+1
  1263  006A60  ECC2  F02D         	call	_SetWheelSpeed	;wreg free
  1264                           
  1265                           ;obstacle_avoidance.c: 216: lcdcmd_4bit(0xC3);
  1266  006A64  0EC3               	movlw	195
  1267  006A66  ECC2  F02C         	call	_lcdcmd_4bit
  1268                           
  1269                           ;obstacle_avoidance.c: 217: int_to_char(lw_velocity);
  1270  006A6A  0100               	movlb	0	; () banked
  1271  006A6C  51A2               	movf	_lw_velocity& (0+255),w,b
  1272  006A6E  EC1E  F02E         	call	_int_to_char
  1273                           
  1274                           ;obstacle_avoidance.c: 218: lcdcmd_4bit(0xCA);
  1275  006A72  0ECA               	movlw	202
  1276  006A74  ECC2  F02C         	call	_lcdcmd_4bit
  1277                           
  1278                           ;obstacle_avoidance.c: 219: int_to_char(rw_velocity);
  1279  006A78  0100               	movlb	0	; () banked
  1280  006A7A  51A4               	movf	_rw_velocity& (0+255),w,b
  1281  006A7C  EC1E  F02E         	call	_int_to_char
  1282  006A80  D774               	goto	l2697
  1283  006A82                     __end_of_main:
  1284                           	opt stack 0
  1285                           tblptru	equ	0xFF8
  1286                           tblptrh	equ	0xFF7
  1287                           tblptrl	equ	0xFF6
  1288                           tablat	equ	0xFF5
  1289                           postinc0	equ	0xFEE
  1290                           wreg	equ	0xFE8
  1291                           postdec1	equ	0xFE5
  1292                           fsr1l	equ	0xFE1
  1293                           
  1294 ;; *************** function _read_sensors *****************
  1295 ;; Defined at:
  1296 ;;		line 263 in file "obstacle_avoidance.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;		None
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;		None
  1301 ;; Return value:  Size  Location     Type
  1302 ;;		None               void
  1303 ;; Registers used:
  1304 ;;		wreg, status,2, status,0, prodl, cstack
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1310 ;;      Params:         0       0       0       0       0       0       0       0       0
  1311 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1312 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1313 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1314 ;;Total ram usage:        0 bytes
  1315 ;; Hardware stack levels used:    1
  1316 ;; Hardware stack levels required when called:    3
  1317 ;; This function calls:
  1318 ;;		_min
  1319 ;;		_read_ultrasonic_s3
  1320 ;;		_read_ultrasonic_s4
  1321 ;;		_read_ultrasonic_s5
  1322 ;;		_read_ultrasonic_s6
  1323 ;;		_read_ultrasonic_s7
  1324 ;;		_read_ultrasonic_s8
  1325 ;; This function is called by:
  1326 ;;		_main
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text1
  1331  005E54                     __ptext1:
  1332                           	opt stack 0
  1333  005E54                     _read_sensors:
  1334                           	opt stack 27
  1335                           
  1336                           ;obstacle_avoidance.c: 267: read_ultrasonic_s3();
  1337                           
  1338                           ;incstack = 0
  1339  005E54  ECB3  F031         	call	_read_ultrasonic_s3	;wreg free
  1340                           
  1341                           ;obstacle_avoidance.c: 268: read_ultrasonic_s4();
  1342  005E58  EC2D  F032         	call	_read_ultrasonic_s4	;wreg free
  1343                           
  1344                           ;obstacle_avoidance.c: 269: read_ultrasonic_s5();
  1345  005E5C  ECAA  F032         	call	_read_ultrasonic_s5	;wreg free
  1346                           
  1347                           ;obstacle_avoidance.c: 270: read_ultrasonic_s6();
  1348  005E60  EC27  F033         	call	_read_ultrasonic_s6	;wreg free
  1349                           
  1350                           ;obstacle_avoidance.c: 271: read_ultrasonic_s7();
  1351  005E64  ECA4  F033         	call	_read_ultrasonic_s7	;wreg free
  1352                           
  1353                           ;obstacle_avoidance.c: 272: read_ultrasonic_s8();
  1354  005E68  EC21  F034         	call	_read_ultrasonic_s8	;wreg free
  1355                           
  1356                           ;obstacle_avoidance.c: 274: s_front_right=min(s3,s4);
  1357  005E6C  C084  F00A         	movff	_s3,min@x
  1358  005E70  C085  F00B         	movff	_s3+1,min@x+1
  1359  005E74  C086  F00C         	movff	_s3+2,min@x+2
  1360  005E78  C087  F00D         	movff	_s4,min@y
  1361  005E7C  C088  F00E         	movff	_s4+1,min@y+1
  1362  005E80  C089  F00F         	movff	_s4+2,min@y+2
  1363  005E84  EC28  F02D         	call	_min	;wreg free
  1364  005E88  C00A  F09F         	movff	?_min,_s_front_right
  1365  005E8C  C00B  F0A0         	movff	?_min+1,_s_front_right+1
  1366  005E90  C00C  F0A1         	movff	?_min+2,_s_front_right+2
  1367                           
  1368                           ;obstacle_avoidance.c: 275: s_front=min(s5,s6);
  1369  005E94  C08A  F00A         	movff	_s5,min@x
  1370  005E98  C08B  F00B         	movff	_s5+1,min@x+1
  1371  005E9C  C08C  F00C         	movff	_s5+2,min@x+2
  1372  005EA0  C08D  F00D         	movff	_s6,min@y
  1373  005EA4  C08E  F00E         	movff	_s6+1,min@y+1
  1374  005EA8  C08F  F00F         	movff	_s6+2,min@y+2
  1375  005EAC  EC28  F02D         	call	_min	;wreg free
  1376  005EB0  C00A  F099         	movff	?_min,_s_front
  1377  005EB4  C00B  F09A         	movff	?_min+1,_s_front+1
  1378  005EB8  C00C  F09B         	movff	?_min+2,_s_front+2
  1379                           
  1380                           ;obstacle_avoidance.c: 276: s_front_left=min(s7,s8);
  1381  005EBC  C090  F00A         	movff	_s7,min@x
  1382  005EC0  C091  F00B         	movff	_s7+1,min@x+1
  1383  005EC4  C092  F00C         	movff	_s7+2,min@x+2
  1384  005EC8  C093  F00D         	movff	_s8,min@y
  1385  005ECC  C094  F00E         	movff	_s8+1,min@y+1
  1386  005ED0  C095  F00F         	movff	_s8+2,min@y+2
  1387  005ED4  EC28  F02D         	call	_min	;wreg free
  1388  005ED8  C00A  F09C         	movff	?_min,_s_front_left
  1389  005EDC  C00B  F09D         	movff	?_min+1,_s_front_left+1
  1390  005EE0  C00C  F09E         	movff	?_min+2,_s_front_left+2
  1391  005EE4  0012               	return	
  1392  005EE6                     __end_of_read_sensors:
  1393                           	opt stack 0
  1394                           tblptru	equ	0xFF8
  1395                           tblptrh	equ	0xFF7
  1396                           tblptrl	equ	0xFF6
  1397                           tablat	equ	0xFF5
  1398                           postinc0	equ	0xFEE
  1399                           wreg	equ	0xFE8
  1400                           postdec1	equ	0xFE5
  1401                           fsr1l	equ	0xFE1
  1402                           
  1403 ;; *************** function _read_ultrasonic_s8 *****************
  1404 ;; Defined at:
  1405 ;;		line 388 in file "obstacle_avoidance.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;		None
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;  value           2   60[COMRAM] int 
  1410 ;; Return value:  Size  Location     Type
  1411 ;;		None               void
  1412 ;; Registers used:
  1413 ;;		wreg, status,2, status,0, prodl, cstack
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1419 ;;      Params:         0       0       0       0       0       0       0       0       0
  1420 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1421 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1422 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1423 ;;Total ram usage:        6 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; Hardware stack levels required when called:    2
  1426 ;; This function calls:
  1427 ;;		___awtoft
  1428 ;;		___ftadd
  1429 ;;		___ftge
  1430 ;;		___ftmul
  1431 ;;		___fttol
  1432 ;;		___lwtoft
  1433 ;;		_s_delay
  1434 ;; This function is called by:
  1435 ;;		_read_sensors
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text2
  1440  006842                     __ptext2:
  1441                           	opt stack 0
  1442  006842                     _read_ultrasonic_s8:
  1443                           	opt stack 27
  1444                           
  1445                           ;obstacle_avoidance.c: 390: TMR1=0x0000;
  1446                           
  1447                           ;incstack = 0
  1448  006842  0E00               	movlw	0
  1449  006844  6ECF               	movwf	4047,c	;volatile
  1450  006846  0E00               	movlw	0
  1451  006848  6ECE               	movwf	4046,c	;volatile
  1452                           
  1453                           ;obstacle_avoidance.c: 391: int value=0x0000;
  1454  00684A  0E00               	movlw	0
  1455  00684C  6E3E               	movwf	read_ultrasonic_s8@value+1,c
  1456  00684E  0E00               	movlw	0
  1457  006850  6E3D               	movwf	read_ultrasonic_s8@value,c
  1458                           
  1459                           ;obstacle_avoidance.c: 392: PORTBbits.RB7=1;
  1460  006852  8E81               	bsf	3969,7,c	;volatile
  1461                           
  1462                           ;obstacle_avoidance.c: 393: s_delay(15);
  1463  006854  0E00               	movlw	0
  1464  006856  6E02               	movwf	s_delay@a+1,c
  1465  006858  0E0F               	movlw	15
  1466  00685A  6E01               	movwf	s_delay@a,c
  1467  00685C  EC6B  F02C         	call	_s_delay	;wreg free
  1468                           
  1469                           ;obstacle_avoidance.c: 394: PORTBbits.RB7=0;
  1470  006860  9E81               	bcf	3969,7,c	;volatile
  1471  006862                     l240:
  1472  006862  AE83               	btfss	3971,7,c	;volatile
  1473  006864  D7FE               	goto	l240
  1474                           
  1475                           ;obstacle_avoidance.c: 396: T1CONbits.TMR1ON=1;
  1476  006866  80CD               	bsf	4045,0,c	;volatile
  1477                           
  1478                           ;obstacle_avoidance.c: 397: while(PORTDbits.RD7 && value<7353)
  1479  006868  D004               	goto	l243
  1480  00686A                     l244:
  1481                           
  1482                           ;obstacle_avoidance.c: 398: value=TMR1;
  1483  00686A  CFCE F03D          	movff	4046,read_ultrasonic_s8@value	;volatile
  1484  00686E  CFCF F03E          	movff	4047,read_ultrasonic_s8@value+1	;volatile
  1485  006872                     l243:
  1486  006872  AE83               	btfss	3971,7,c	;volatile
  1487  006874  D008               	goto	l247
  1488  006876  503E               	movf	read_ultrasonic_s8@value+1,w,c
  1489  006878  0A80               	xorlw	128
  1490  00687A  0F64               	addlw	-156
  1491  00687C  0EB9               	movlw	185
  1492  00687E  B4D8               	btfsc	status,2,c
  1493  006880  5C3D               	subwf	read_ultrasonic_s8@value,w,c
  1494  006882  A0D8               	btfss	status,0,c
  1495  006884  D7F2               	goto	l244
  1496  006886                     l247:
  1497                           
  1498                           ;obstacle_avoidance.c: 399: T1CONbits.TMR1ON=0;
  1499  006886  90CD               	bcf	4045,0,c	;volatile
  1500                           
  1501                           ;obstacle_avoidance.c: 400: s8=(TMR1*0.0272)+1.093;
  1502  006888  0ED3               	movlw	211
  1503  00688A  6E0F               	movwf	___ftmul@f2,c
  1504  00688C  0EDE               	movlw	222
  1505  00688E  6E10               	movwf	___ftmul@f2+1,c
  1506  006890  0E3C               	movlw	60
  1507  006892  6E11               	movwf	___ftmul@f2+2,c
  1508  006894  CFCE F009          	movff	4046,___lwtoft@c	;volatile
  1509  006898  CFCF F00A          	movff	4047,___lwtoft@c+1	;volatile
  1510  00689C  EC33  F02C         	call	___lwtoft	;wreg free
  1511  0068A0  C009  F00C         	movff	?___lwtoft,___ftmul@f1
  1512  0068A4  C00A  F00D         	movff	?___lwtoft+1,___ftmul@f1+1
  1513  0068A8  C00B  F00E         	movff	?___lwtoft+2,___ftmul@f1+2
  1514  0068AC  EC41  F031         	call	___ftmul	;wreg free
  1515  0068B0  C00C  F02D         	movff	?___ftmul,___ftadd@f1
  1516  0068B4  C00D  F02E         	movff	?___ftmul+1,___ftadd@f1+1
  1517  0068B8  C00E  F02F         	movff	?___ftmul+2,___ftadd@f1+2
  1518  0068BC  0EE7               	movlw	231
  1519  0068BE  6E30               	movwf	___ftadd@f2,c
  1520  0068C0  0E8B               	movlw	139
  1521  0068C2  6E31               	movwf	___ftadd@f2+1,c
  1522  0068C4  0E3F               	movlw	63
  1523  0068C6  6E32               	movwf	___ftadd@f2+2,c
  1524  0068C8  EC08  F036         	call	___ftadd	;wreg free
  1525  0068CC  C02D  F093         	movff	?___ftadd,_s8
  1526  0068D0  C02E  F094         	movff	?___ftadd+1,_s8+1
  1527  0068D4  C02F  F095         	movff	?___ftadd+2,_s8+2
  1528                           
  1529                           ;obstacle_avoidance.c: 401: if(s8<2)
  1530  0068D8  C093  F001         	movff	_s8,___ftge@ff1
  1531  0068DC  C094  F002         	movff	_s8+1,___ftge@ff1+1
  1532  0068E0  C095  F003         	movff	_s8+2,___ftge@ff1+2
  1533  0068E4  0E00               	movlw	0
  1534  0068E6  6E04               	movwf	___ftge@ff2,c
  1535  0068E8  0E00               	movlw	0
  1536  0068EA  6E05               	movwf	___ftge@ff2+1,c
  1537  0068EC  0E40               	movlw	64
  1538  0068EE  6E06               	movwf	___ftge@ff2+2,c
  1539  0068F0  ECE2  F02E         	call	___ftge	;wreg free
  1540  0068F4  B0D8               	btfsc	status,0,c
  1541  0068F6  D00D               	goto	l2289
  1542                           
  1543                           ;obstacle_avoidance.c: 402: s8=s8_old;
  1544  0068F8  C0B2  F009         	movff	_s8_old,___awtoft@c
  1545  0068FC  C0B3  F00A         	movff	_s8_old+1,___awtoft@c+1
  1546  006900  EC04  F02D         	call	___awtoft	;wreg free
  1547  006904  C009  F093         	movff	?___awtoft,_s8
  1548  006908  C00A  F094         	movff	?___awtoft+1,_s8+1
  1549  00690C  C00B  F095         	movff	?___awtoft+2,_s8+2
  1550  006910  D014               	goto	l250
  1551  006912                     l2289:
  1552                           
  1553                           ;obstacle_avoidance.c: 403: else
  1554                           ;obstacle_avoidance.c: 404: s8_old=s8;
  1555  006912  C093  F001         	movff	_s8,___fttol@f1
  1556  006916  C094  F002         	movff	_s8+1,___fttol@f1+1
  1557  00691A  C095  F003         	movff	_s8+2,___fttol@f1+2
  1558  00691E  EC6C  F030         	call	___fttol	;wreg free
  1559  006922  C001  F039         	movff	?___fttol,??_read_ultrasonic_s8
  1560  006926  C002  F03A         	movff	?___fttol+1,??_read_ultrasonic_s8+1
  1561  00692A  C003  F03B         	movff	?___fttol+2,??_read_ultrasonic_s8+2
  1562  00692E  C004  F03C         	movff	?___fttol+3,??_read_ultrasonic_s8+3
  1563  006932  C039  F0B2         	movff	??_read_ultrasonic_s8,_s8_old
  1564  006936  C03A  F0B3         	movff	??_read_ultrasonic_s8+1,_s8_old+1
  1565  00693A                     l250:
  1566  00693A  0012               	return	
  1567  00693C                     __end_of_read_ultrasonic_s8:
  1568                           	opt stack 0
  1569                           tblptru	equ	0xFF8
  1570                           tblptrh	equ	0xFF7
  1571                           tblptrl	equ	0xFF6
  1572                           tablat	equ	0xFF5
  1573                           postinc0	equ	0xFEE
  1574                           wreg	equ	0xFE8
  1575                           postdec1	equ	0xFE5
  1576                           fsr1l	equ	0xFE1
  1577                           status	equ	0xFD8
  1578                           
  1579 ;; *************** function _read_ultrasonic_s7 *****************
  1580 ;; Defined at:
  1581 ;;		line 370 in file "obstacle_avoidance.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;		None
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;  value           2   60[COMRAM] int 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;		None               void
  1588 ;; Registers used:
  1589 ;;		wreg, status,2, status,0, prodl, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1595 ;;      Params:         0       0       0       0       0       0       0       0       0
  1596 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1597 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1598 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1599 ;;Total ram usage:        6 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; Hardware stack levels required when called:    2
  1602 ;; This function calls:
  1603 ;;		___awtoft
  1604 ;;		___ftadd
  1605 ;;		___ftge
  1606 ;;		___ftmul
  1607 ;;		___fttol
  1608 ;;		___lwtoft
  1609 ;;		_s_delay
  1610 ;; This function is called by:
  1611 ;;		_read_sensors
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           	psect	text3
  1616  006748                     __ptext3:
  1617                           	opt stack 0
  1618  006748                     _read_ultrasonic_s7:
  1619                           	opt stack 27
  1620                           
  1621                           ;obstacle_avoidance.c: 372: TMR1=0x0000;
  1622                           
  1623                           ;incstack = 0
  1624  006748  0E00               	movlw	0
  1625  00674A  6ECF               	movwf	4047,c	;volatile
  1626  00674C  0E00               	movlw	0
  1627  00674E  6ECE               	movwf	4046,c	;volatile
  1628                           
  1629                           ;obstacle_avoidance.c: 373: int value=0x0000;
  1630  006750  0E00               	movlw	0
  1631  006752  6E3E               	movwf	read_ultrasonic_s7@value+1,c
  1632  006754  0E00               	movlw	0
  1633  006756  6E3D               	movwf	read_ultrasonic_s7@value,c
  1634                           
  1635                           ;obstacle_avoidance.c: 374: PORTBbits.RB6=1;
  1636  006758  8C81               	bsf	3969,6,c	;volatile
  1637                           
  1638                           ;obstacle_avoidance.c: 375: s_delay(15);
  1639  00675A  0E00               	movlw	0
  1640  00675C  6E02               	movwf	s_delay@a+1,c
  1641  00675E  0E0F               	movlw	15
  1642  006760  6E01               	movwf	s_delay@a,c
  1643  006762  EC6B  F02C         	call	_s_delay	;wreg free
  1644                           
  1645                           ;obstacle_avoidance.c: 376: PORTBbits.RB6=0;
  1646  006766  9C81               	bcf	3969,6,c	;volatile
  1647  006768                     l227:
  1648  006768  AC83               	btfss	3971,6,c	;volatile
  1649  00676A  D7FE               	goto	l227
  1650                           
  1651                           ;obstacle_avoidance.c: 378: T1CONbits.TMR1ON=1;
  1652  00676C  80CD               	bsf	4045,0,c	;volatile
  1653                           
  1654                           ;obstacle_avoidance.c: 379: while(PORTDbits.RD6 && value<7353)
  1655  00676E  D004               	goto	l230
  1656  006770                     l231:
  1657                           
  1658                           ;obstacle_avoidance.c: 380: value=TMR1;
  1659  006770  CFCE F03D          	movff	4046,read_ultrasonic_s7@value	;volatile
  1660  006774  CFCF F03E          	movff	4047,read_ultrasonic_s7@value+1	;volatile
  1661  006778                     l230:
  1662  006778  AC83               	btfss	3971,6,c	;volatile
  1663  00677A  D008               	goto	l234
  1664  00677C  503E               	movf	read_ultrasonic_s7@value+1,w,c
  1665  00677E  0A80               	xorlw	128
  1666  006780  0F64               	addlw	-156
  1667  006782  0EB9               	movlw	185
  1668  006784  B4D8               	btfsc	status,2,c
  1669  006786  5C3D               	subwf	read_ultrasonic_s7@value,w,c
  1670  006788  A0D8               	btfss	status,0,c
  1671  00678A  D7F2               	goto	l231
  1672  00678C                     l234:
  1673                           
  1674                           ;obstacle_avoidance.c: 381: T1CONbits.TMR1ON=0;
  1675  00678C  90CD               	bcf	4045,0,c	;volatile
  1676                           
  1677                           ;obstacle_avoidance.c: 382: s7=(TMR1*0.0272)+1.093;
  1678  00678E  0ED3               	movlw	211
  1679  006790  6E0F               	movwf	___ftmul@f2,c
  1680  006792  0EDE               	movlw	222
  1681  006794  6E10               	movwf	___ftmul@f2+1,c
  1682  006796  0E3C               	movlw	60
  1683  006798  6E11               	movwf	___ftmul@f2+2,c
  1684  00679A  CFCE F009          	movff	4046,___lwtoft@c	;volatile
  1685  00679E  CFCF F00A          	movff	4047,___lwtoft@c+1	;volatile
  1686  0067A2  EC33  F02C         	call	___lwtoft	;wreg free
  1687  0067A6  C009  F00C         	movff	?___lwtoft,___ftmul@f1
  1688  0067AA  C00A  F00D         	movff	?___lwtoft+1,___ftmul@f1+1
  1689  0067AE  C00B  F00E         	movff	?___lwtoft+2,___ftmul@f1+2
  1690  0067B2  EC41  F031         	call	___ftmul	;wreg free
  1691  0067B6  C00C  F02D         	movff	?___ftmul,___ftadd@f1
  1692  0067BA  C00D  F02E         	movff	?___ftmul+1,___ftadd@f1+1
  1693  0067BE  C00E  F02F         	movff	?___ftmul+2,___ftadd@f1+2
  1694  0067C2  0EE7               	movlw	231
  1695  0067C4  6E30               	movwf	___ftadd@f2,c
  1696  0067C6  0E8B               	movlw	139
  1697  0067C8  6E31               	movwf	___ftadd@f2+1,c
  1698  0067CA  0E3F               	movlw	63
  1699  0067CC  6E32               	movwf	___ftadd@f2+2,c
  1700  0067CE  EC08  F036         	call	___ftadd	;wreg free
  1701  0067D2  C02D  F090         	movff	?___ftadd,_s7
  1702  0067D6  C02E  F091         	movff	?___ftadd+1,_s7+1
  1703  0067DA  C02F  F092         	movff	?___ftadd+2,_s7+2
  1704                           
  1705                           ;obstacle_avoidance.c: 383: if(s7<2)
  1706  0067DE  C090  F001         	movff	_s7,___ftge@ff1
  1707  0067E2  C091  F002         	movff	_s7+1,___ftge@ff1+1
  1708  0067E6  C092  F003         	movff	_s7+2,___ftge@ff1+2
  1709  0067EA  0E00               	movlw	0
  1710  0067EC  6E04               	movwf	___ftge@ff2,c
  1711  0067EE  0E00               	movlw	0
  1712  0067F0  6E05               	movwf	___ftge@ff2+1,c
  1713  0067F2  0E40               	movlw	64
  1714  0067F4  6E06               	movwf	___ftge@ff2+2,c
  1715  0067F6  ECE2  F02E         	call	___ftge	;wreg free
  1716  0067FA  B0D8               	btfsc	status,0,c
  1717  0067FC  D00D               	goto	l2273
  1718                           
  1719                           ;obstacle_avoidance.c: 384: s7=s7_old;
  1720  0067FE  C0B0  F009         	movff	_s7_old,___awtoft@c
  1721  006802  C0B1  F00A         	movff	_s7_old+1,___awtoft@c+1
  1722  006806  EC04  F02D         	call	___awtoft	;wreg free
  1723  00680A  C009  F090         	movff	?___awtoft,_s7
  1724  00680E  C00A  F091         	movff	?___awtoft+1,_s7+1
  1725  006812  C00B  F092         	movff	?___awtoft+2,_s7+2
  1726  006816  D014               	goto	l237
  1727  006818                     l2273:
  1728                           
  1729                           ;obstacle_avoidance.c: 385: else
  1730                           ;obstacle_avoidance.c: 386: s7_old=s7;
  1731  006818  C090  F001         	movff	_s7,___fttol@f1
  1732  00681C  C091  F002         	movff	_s7+1,___fttol@f1+1
  1733  006820  C092  F003         	movff	_s7+2,___fttol@f1+2
  1734  006824  EC6C  F030         	call	___fttol	;wreg free
  1735  006828  C001  F039         	movff	?___fttol,??_read_ultrasonic_s7
  1736  00682C  C002  F03A         	movff	?___fttol+1,??_read_ultrasonic_s7+1
  1737  006830  C003  F03B         	movff	?___fttol+2,??_read_ultrasonic_s7+2
  1738  006834  C004  F03C         	movff	?___fttol+3,??_read_ultrasonic_s7+3
  1739  006838  C039  F0B0         	movff	??_read_ultrasonic_s7,_s7_old
  1740  00683C  C03A  F0B1         	movff	??_read_ultrasonic_s7+1,_s7_old+1
  1741  006840                     l237:
  1742  006840  0012               	return	
  1743  006842                     __end_of_read_ultrasonic_s7:
  1744                           	opt stack 0
  1745                           tblptru	equ	0xFF8
  1746                           tblptrh	equ	0xFF7
  1747                           tblptrl	equ	0xFF6
  1748                           tablat	equ	0xFF5
  1749                           postinc0	equ	0xFEE
  1750                           wreg	equ	0xFE8
  1751                           postdec1	equ	0xFE5
  1752                           fsr1l	equ	0xFE1
  1753                           status	equ	0xFD8
  1754                           
  1755 ;; *************** function _read_ultrasonic_s6 *****************
  1756 ;; Defined at:
  1757 ;;		line 352 in file "obstacle_avoidance.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;		None
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;  value           2   60[COMRAM] int 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;		None               void
  1764 ;; Registers used:
  1765 ;;		wreg, status,2, status,0, prodl, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1771 ;;      Params:         0       0       0       0       0       0       0       0       0
  1772 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1773 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1774 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1775 ;;Total ram usage:        6 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:    2
  1778 ;; This function calls:
  1779 ;;		___awtoft
  1780 ;;		___ftadd
  1781 ;;		___ftge
  1782 ;;		___ftmul
  1783 ;;		___fttol
  1784 ;;		___lwtoft
  1785 ;;		_s_delay
  1786 ;; This function is called by:
  1787 ;;		_read_sensors
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text4
  1792  00664E                     __ptext4:
  1793                           	opt stack 0
  1794  00664E                     _read_ultrasonic_s6:
  1795                           	opt stack 27
  1796                           
  1797                           ;obstacle_avoidance.c: 354: TMR1=0x0000;
  1798                           
  1799                           ;incstack = 0
  1800  00664E  0E00               	movlw	0
  1801  006650  6ECF               	movwf	4047,c	;volatile
  1802  006652  0E00               	movlw	0
  1803  006654  6ECE               	movwf	4046,c	;volatile
  1804                           
  1805                           ;obstacle_avoidance.c: 355: int value=0x0000;
  1806  006656  0E00               	movlw	0
  1807  006658  6E3E               	movwf	read_ultrasonic_s6@value+1,c
  1808  00665A  0E00               	movlw	0
  1809  00665C  6E3D               	movwf	read_ultrasonic_s6@value,c
  1810                           
  1811                           ;obstacle_avoidance.c: 356: PORTBbits.RB5=1;
  1812  00665E  8A81               	bsf	3969,5,c	;volatile
  1813                           
  1814                           ;obstacle_avoidance.c: 357: s_delay(15);
  1815  006660  0E00               	movlw	0
  1816  006662  6E02               	movwf	s_delay@a+1,c
  1817  006664  0E0F               	movlw	15
  1818  006666  6E01               	movwf	s_delay@a,c
  1819  006668  EC6B  F02C         	call	_s_delay	;wreg free
  1820                           
  1821                           ;obstacle_avoidance.c: 358: PORTBbits.RB5=0;
  1822  00666C  9A81               	bcf	3969,5,c	;volatile
  1823  00666E                     l214:
  1824  00666E  AA83               	btfss	3971,5,c	;volatile
  1825  006670  D7FE               	goto	l214
  1826                           
  1827                           ;obstacle_avoidance.c: 360: T1CONbits.TMR1ON=1;
  1828  006672  80CD               	bsf	4045,0,c	;volatile
  1829                           
  1830                           ;obstacle_avoidance.c: 361: while(PORTDbits.RD5 && value<7353)
  1831  006674  D004               	goto	l217
  1832  006676                     l218:
  1833                           
  1834                           ;obstacle_avoidance.c: 362: value=TMR1;
  1835  006676  CFCE F03D          	movff	4046,read_ultrasonic_s6@value	;volatile
  1836  00667A  CFCF F03E          	movff	4047,read_ultrasonic_s6@value+1	;volatile
  1837  00667E                     l217:
  1838  00667E  AA83               	btfss	3971,5,c	;volatile
  1839  006680  D008               	goto	l221
  1840  006682  503E               	movf	read_ultrasonic_s6@value+1,w,c
  1841  006684  0A80               	xorlw	128
  1842  006686  0F64               	addlw	-156
  1843  006688  0EB9               	movlw	185
  1844  00668A  B4D8               	btfsc	status,2,c
  1845  00668C  5C3D               	subwf	read_ultrasonic_s6@value,w,c
  1846  00668E  A0D8               	btfss	status,0,c
  1847  006690  D7F2               	goto	l218
  1848  006692                     l221:
  1849                           
  1850                           ;obstacle_avoidance.c: 363: T1CONbits.TMR1ON=0;
  1851  006692  90CD               	bcf	4045,0,c	;volatile
  1852                           
  1853                           ;obstacle_avoidance.c: 364: s6=(TMR1*0.0272)+1.093;
  1854  006694  0ED3               	movlw	211
  1855  006696  6E0F               	movwf	___ftmul@f2,c
  1856  006698  0EDE               	movlw	222
  1857  00669A  6E10               	movwf	___ftmul@f2+1,c
  1858  00669C  0E3C               	movlw	60
  1859  00669E  6E11               	movwf	___ftmul@f2+2,c
  1860  0066A0  CFCE F009          	movff	4046,___lwtoft@c	;volatile
  1861  0066A4  CFCF F00A          	movff	4047,___lwtoft@c+1	;volatile
  1862  0066A8  EC33  F02C         	call	___lwtoft	;wreg free
  1863  0066AC  C009  F00C         	movff	?___lwtoft,___ftmul@f1
  1864  0066B0  C00A  F00D         	movff	?___lwtoft+1,___ftmul@f1+1
  1865  0066B4  C00B  F00E         	movff	?___lwtoft+2,___ftmul@f1+2
  1866  0066B8  EC41  F031         	call	___ftmul	;wreg free
  1867  0066BC  C00C  F02D         	movff	?___ftmul,___ftadd@f1
  1868  0066C0  C00D  F02E         	movff	?___ftmul+1,___ftadd@f1+1
  1869  0066C4  C00E  F02F         	movff	?___ftmul+2,___ftadd@f1+2
  1870  0066C8  0EE7               	movlw	231
  1871  0066CA  6E30               	movwf	___ftadd@f2,c
  1872  0066CC  0E8B               	movlw	139
  1873  0066CE  6E31               	movwf	___ftadd@f2+1,c
  1874  0066D0  0E3F               	movlw	63
  1875  0066D2  6E32               	movwf	___ftadd@f2+2,c
  1876  0066D4  EC08  F036         	call	___ftadd	;wreg free
  1877  0066D8  C02D  F08D         	movff	?___ftadd,_s6
  1878  0066DC  C02E  F08E         	movff	?___ftadd+1,_s6+1
  1879  0066E0  C02F  F08F         	movff	?___ftadd+2,_s6+2
  1880                           
  1881                           ;obstacle_avoidance.c: 365: if(s6<2)
  1882  0066E4  C08D  F001         	movff	_s6,___ftge@ff1
  1883  0066E8  C08E  F002         	movff	_s6+1,___ftge@ff1+1
  1884  0066EC  C08F  F003         	movff	_s6+2,___ftge@ff1+2
  1885  0066F0  0E00               	movlw	0
  1886  0066F2  6E04               	movwf	___ftge@ff2,c
  1887  0066F4  0E00               	movlw	0
  1888  0066F6  6E05               	movwf	___ftge@ff2+1,c
  1889  0066F8  0E40               	movlw	64
  1890  0066FA  6E06               	movwf	___ftge@ff2+2,c
  1891  0066FC  ECE2  F02E         	call	___ftge	;wreg free
  1892  006700  B0D8               	btfsc	status,0,c
  1893  006702  D00D               	goto	l2257
  1894                           
  1895                           ;obstacle_avoidance.c: 366: s6=s6_old;
  1896  006704  C0AE  F009         	movff	_s6_old,___awtoft@c
  1897  006708  C0AF  F00A         	movff	_s6_old+1,___awtoft@c+1
  1898  00670C  EC04  F02D         	call	___awtoft	;wreg free
  1899  006710  C009  F08D         	movff	?___awtoft,_s6
  1900  006714  C00A  F08E         	movff	?___awtoft+1,_s6+1
  1901  006718  C00B  F08F         	movff	?___awtoft+2,_s6+2
  1902  00671C  D014               	goto	l224
  1903  00671E                     l2257:
  1904                           
  1905                           ;obstacle_avoidance.c: 367: else
  1906                           ;obstacle_avoidance.c: 368: s6_old=s6;
  1907  00671E  C08D  F001         	movff	_s6,___fttol@f1
  1908  006722  C08E  F002         	movff	_s6+1,___fttol@f1+1
  1909  006726  C08F  F003         	movff	_s6+2,___fttol@f1+2
  1910  00672A  EC6C  F030         	call	___fttol	;wreg free
  1911  00672E  C001  F039         	movff	?___fttol,??_read_ultrasonic_s6
  1912  006732  C002  F03A         	movff	?___fttol+1,??_read_ultrasonic_s6+1
  1913  006736  C003  F03B         	movff	?___fttol+2,??_read_ultrasonic_s6+2
  1914  00673A  C004  F03C         	movff	?___fttol+3,??_read_ultrasonic_s6+3
  1915  00673E  C039  F0AE         	movff	??_read_ultrasonic_s6,_s6_old
  1916  006742  C03A  F0AF         	movff	??_read_ultrasonic_s6+1,_s6_old+1
  1917  006746                     l224:
  1918  006746  0012               	return	
  1919  006748                     __end_of_read_ultrasonic_s6:
  1920                           	opt stack 0
  1921                           tblptru	equ	0xFF8
  1922                           tblptrh	equ	0xFF7
  1923                           tblptrl	equ	0xFF6
  1924                           tablat	equ	0xFF5
  1925                           postinc0	equ	0xFEE
  1926                           wreg	equ	0xFE8
  1927                           postdec1	equ	0xFE5
  1928                           fsr1l	equ	0xFE1
  1929                           status	equ	0xFD8
  1930                           
  1931 ;; *************** function _read_ultrasonic_s5 *****************
  1932 ;; Defined at:
  1933 ;;		line 333 in file "obstacle_avoidance.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;		None
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;  value           2   60[COMRAM] int 
  1938 ;; Return value:  Size  Location     Type
  1939 ;;		None               void
  1940 ;; Registers used:
  1941 ;;		wreg, status,2, status,0, prodl, cstack
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1947 ;;      Params:         0       0       0       0       0       0       0       0       0
  1948 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1949 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1950 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1951 ;;Total ram usage:        6 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; Hardware stack levels required when called:    2
  1954 ;; This function calls:
  1955 ;;		___awtoft
  1956 ;;		___ftadd
  1957 ;;		___ftge
  1958 ;;		___ftmul
  1959 ;;		___fttol
  1960 ;;		___lwtoft
  1961 ;;		_s_delay
  1962 ;; This function is called by:
  1963 ;;		_read_sensors
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text5
  1968  006554                     __ptext5:
  1969                           	opt stack 0
  1970  006554                     _read_ultrasonic_s5:
  1971                           	opt stack 27
  1972                           
  1973                           ;obstacle_avoidance.c: 336: TMR1=0x0000;
  1974                           
  1975                           ;incstack = 0
  1976  006554  0E00               	movlw	0
  1977  006556  6ECF               	movwf	4047,c	;volatile
  1978  006558  0E00               	movlw	0
  1979  00655A  6ECE               	movwf	4046,c	;volatile
  1980                           
  1981                           ;obstacle_avoidance.c: 337: int value=0x0000;
  1982  00655C  0E00               	movlw	0
  1983  00655E  6E3E               	movwf	read_ultrasonic_s5@value+1,c
  1984  006560  0E00               	movlw	0
  1985  006562  6E3D               	movwf	read_ultrasonic_s5@value,c
  1986                           
  1987                           ;obstacle_avoidance.c: 338: PORTBbits.RB4=1;
  1988  006564  8881               	bsf	3969,4,c	;volatile
  1989                           
  1990                           ;obstacle_avoidance.c: 339: s_delay(15);
  1991  006566  0E00               	movlw	0
  1992  006568  6E02               	movwf	s_delay@a+1,c
  1993  00656A  0E0F               	movlw	15
  1994  00656C  6E01               	movwf	s_delay@a,c
  1995  00656E  EC6B  F02C         	call	_s_delay	;wreg free
  1996                           
  1997                           ;obstacle_avoidance.c: 340: PORTBbits.RB4=0;
  1998  006572  9881               	bcf	3969,4,c	;volatile
  1999  006574                     l201:
  2000  006574  A883               	btfss	3971,4,c	;volatile
  2001  006576  D7FE               	goto	l201
  2002                           
  2003                           ;obstacle_avoidance.c: 342: T1CONbits.TMR1ON=1;
  2004  006578  80CD               	bsf	4045,0,c	;volatile
  2005                           
  2006                           ;obstacle_avoidance.c: 343: while(PORTDbits.RD4 && value<7353)
  2007  00657A  D004               	goto	l204
  2008  00657C                     l205:
  2009                           
  2010                           ;obstacle_avoidance.c: 344: value=TMR1;
  2011  00657C  CFCE F03D          	movff	4046,read_ultrasonic_s5@value	;volatile
  2012  006580  CFCF F03E          	movff	4047,read_ultrasonic_s5@value+1	;volatile
  2013  006584                     l204:
  2014  006584  A883               	btfss	3971,4,c	;volatile
  2015  006586  D008               	goto	l208
  2016  006588  503E               	movf	read_ultrasonic_s5@value+1,w,c
  2017  00658A  0A80               	xorlw	128
  2018  00658C  0F64               	addlw	-156
  2019  00658E  0EB9               	movlw	185
  2020  006590  B4D8               	btfsc	status,2,c
  2021  006592  5C3D               	subwf	read_ultrasonic_s5@value,w,c
  2022  006594  A0D8               	btfss	status,0,c
  2023  006596  D7F2               	goto	l205
  2024  006598                     l208:
  2025                           
  2026                           ;obstacle_avoidance.c: 345: T1CONbits.TMR1ON=0;
  2027  006598  90CD               	bcf	4045,0,c	;volatile
  2028                           
  2029                           ;obstacle_avoidance.c: 346: s5=(TMR1*0.0272)+1.093;
  2030  00659A  0ED3               	movlw	211
  2031  00659C  6E0F               	movwf	___ftmul@f2,c
  2032  00659E  0EDE               	movlw	222
  2033  0065A0  6E10               	movwf	___ftmul@f2+1,c
  2034  0065A2  0E3C               	movlw	60
  2035  0065A4  6E11               	movwf	___ftmul@f2+2,c
  2036  0065A6  CFCE F009          	movff	4046,___lwtoft@c	;volatile
  2037  0065AA  CFCF F00A          	movff	4047,___lwtoft@c+1	;volatile
  2038  0065AE  EC33  F02C         	call	___lwtoft	;wreg free
  2039  0065B2  C009  F00C         	movff	?___lwtoft,___ftmul@f1
  2040  0065B6  C00A  F00D         	movff	?___lwtoft+1,___ftmul@f1+1
  2041  0065BA  C00B  F00E         	movff	?___lwtoft+2,___ftmul@f1+2
  2042  0065BE  EC41  F031         	call	___ftmul	;wreg free
  2043  0065C2  C00C  F02D         	movff	?___ftmul,___ftadd@f1
  2044  0065C6  C00D  F02E         	movff	?___ftmul+1,___ftadd@f1+1
  2045  0065CA  C00E  F02F         	movff	?___ftmul+2,___ftadd@f1+2
  2046  0065CE  0EE7               	movlw	231
  2047  0065D0  6E30               	movwf	___ftadd@f2,c
  2048  0065D2  0E8B               	movlw	139
  2049  0065D4  6E31               	movwf	___ftadd@f2+1,c
  2050  0065D6  0E3F               	movlw	63
  2051  0065D8  6E32               	movwf	___ftadd@f2+2,c
  2052  0065DA  EC08  F036         	call	___ftadd	;wreg free
  2053  0065DE  C02D  F08A         	movff	?___ftadd,_s5
  2054  0065E2  C02E  F08B         	movff	?___ftadd+1,_s5+1
  2055  0065E6  C02F  F08C         	movff	?___ftadd+2,_s5+2
  2056                           
  2057                           ;obstacle_avoidance.c: 347: if(s5<2)
  2058  0065EA  C08A  F001         	movff	_s5,___ftge@ff1
  2059  0065EE  C08B  F002         	movff	_s5+1,___ftge@ff1+1
  2060  0065F2  C08C  F003         	movff	_s5+2,___ftge@ff1+2
  2061  0065F6  0E00               	movlw	0
  2062  0065F8  6E04               	movwf	___ftge@ff2,c
  2063  0065FA  0E00               	movlw	0
  2064  0065FC  6E05               	movwf	___ftge@ff2+1,c
  2065  0065FE  0E40               	movlw	64
  2066  006600  6E06               	movwf	___ftge@ff2+2,c
  2067  006602  ECE2  F02E         	call	___ftge	;wreg free
  2068  006606  B0D8               	btfsc	status,0,c
  2069  006608  D00D               	goto	l2241
  2070                           
  2071                           ;obstacle_avoidance.c: 348: s5=s5_old;
  2072  00660A  C0AC  F009         	movff	_s5_old,___awtoft@c
  2073  00660E  C0AD  F00A         	movff	_s5_old+1,___awtoft@c+1
  2074  006612  EC04  F02D         	call	___awtoft	;wreg free
  2075  006616  C009  F08A         	movff	?___awtoft,_s5
  2076  00661A  C00A  F08B         	movff	?___awtoft+1,_s5+1
  2077  00661E  C00B  F08C         	movff	?___awtoft+2,_s5+2
  2078  006622  D014               	goto	l211
  2079  006624                     l2241:
  2080                           
  2081                           ;obstacle_avoidance.c: 349: else
  2082                           ;obstacle_avoidance.c: 350: s5_old=s5;
  2083  006624  C08A  F001         	movff	_s5,___fttol@f1
  2084  006628  C08B  F002         	movff	_s5+1,___fttol@f1+1
  2085  00662C  C08C  F003         	movff	_s5+2,___fttol@f1+2
  2086  006630  EC6C  F030         	call	___fttol	;wreg free
  2087  006634  C001  F039         	movff	?___fttol,??_read_ultrasonic_s5
  2088  006638  C002  F03A         	movff	?___fttol+1,??_read_ultrasonic_s5+1
  2089  00663C  C003  F03B         	movff	?___fttol+2,??_read_ultrasonic_s5+2
  2090  006640  C004  F03C         	movff	?___fttol+3,??_read_ultrasonic_s5+3
  2091  006644  C039  F0AC         	movff	??_read_ultrasonic_s5,_s5_old
  2092  006648  C03A  F0AD         	movff	??_read_ultrasonic_s5+1,_s5_old+1
  2093  00664C                     l211:
  2094  00664C  0012               	return	
  2095  00664E                     __end_of_read_ultrasonic_s5:
  2096                           	opt stack 0
  2097                           tblptru	equ	0xFF8
  2098                           tblptrh	equ	0xFF7
  2099                           tblptrl	equ	0xFF6
  2100                           tablat	equ	0xFF5
  2101                           postinc0	equ	0xFEE
  2102                           wreg	equ	0xFE8
  2103                           postdec1	equ	0xFE5
  2104                           fsr1l	equ	0xFE1
  2105                           status	equ	0xFD8
  2106                           
  2107 ;; *************** function _read_ultrasonic_s4 *****************
  2108 ;; Defined at:
  2109 ;;		line 315 in file "obstacle_avoidance.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  value           2   60[COMRAM] int 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;		None               void
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, status,0, prodl, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2123 ;;      Params:         0       0       0       0       0       0       0       0       0
  2124 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2125 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2126 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2127 ;;Total ram usage:        6 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    2
  2130 ;; This function calls:
  2131 ;;		___awtoft
  2132 ;;		___ftadd
  2133 ;;		___ftge
  2134 ;;		___ftmul
  2135 ;;		___fttol
  2136 ;;		___lwtoft
  2137 ;;		_s_delay
  2138 ;; This function is called by:
  2139 ;;		_read_sensors
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text6
  2144  00645A                     __ptext6:
  2145                           	opt stack 0
  2146  00645A                     _read_ultrasonic_s4:
  2147                           	opt stack 27
  2148                           
  2149                           ;obstacle_avoidance.c: 317: TMR1=0x0000;
  2150                           
  2151                           ;incstack = 0
  2152  00645A  0E00               	movlw	0
  2153  00645C  6ECF               	movwf	4047,c	;volatile
  2154  00645E  0E00               	movlw	0
  2155  006460  6ECE               	movwf	4046,c	;volatile
  2156                           
  2157                           ;obstacle_avoidance.c: 318: int value=0x0000;
  2158  006462  0E00               	movlw	0
  2159  006464  6E3E               	movwf	read_ultrasonic_s4@value+1,c
  2160  006466  0E00               	movlw	0
  2161  006468  6E3D               	movwf	read_ultrasonic_s4@value,c
  2162                           
  2163                           ;obstacle_avoidance.c: 319: PORTBbits.RB3=1;
  2164  00646A  8681               	bsf	3969,3,c	;volatile
  2165                           
  2166                           ;obstacle_avoidance.c: 320: s_delay(15);
  2167  00646C  0E00               	movlw	0
  2168  00646E  6E02               	movwf	s_delay@a+1,c
  2169  006470  0E0F               	movlw	15
  2170  006472  6E01               	movwf	s_delay@a,c
  2171  006474  EC6B  F02C         	call	_s_delay	;wreg free
  2172                           
  2173                           ;obstacle_avoidance.c: 321: PORTBbits.RB3=0;
  2174  006478  9681               	bcf	3969,3,c	;volatile
  2175  00647A                     l188:
  2176  00647A  A280               	btfss	3968,1,c	;volatile
  2177  00647C  D7FE               	goto	l188
  2178                           
  2179                           ;obstacle_avoidance.c: 323: T1CONbits.TMR1ON=1;
  2180  00647E  80CD               	bsf	4045,0,c	;volatile
  2181                           
  2182                           ;obstacle_avoidance.c: 324: while(PORTAbits.RA1 && value<7353)
  2183  006480  D004               	goto	l191
  2184  006482                     l192:
  2185                           
  2186                           ;obstacle_avoidance.c: 325: value=TMR1;
  2187  006482  CFCE F03D          	movff	4046,read_ultrasonic_s4@value	;volatile
  2188  006486  CFCF F03E          	movff	4047,read_ultrasonic_s4@value+1	;volatile
  2189  00648A                     l191:
  2190  00648A  A280               	btfss	3968,1,c	;volatile
  2191  00648C  D008               	goto	l195
  2192  00648E  503E               	movf	read_ultrasonic_s4@value+1,w,c
  2193  006490  0A80               	xorlw	128
  2194  006492  0F64               	addlw	-156
  2195  006494  0EB9               	movlw	185
  2196  006496  B4D8               	btfsc	status,2,c
  2197  006498  5C3D               	subwf	read_ultrasonic_s4@value,w,c
  2198  00649A  A0D8               	btfss	status,0,c
  2199  00649C  D7F2               	goto	l192
  2200  00649E                     l195:
  2201                           
  2202                           ;obstacle_avoidance.c: 326: T1CONbits.TMR1ON=0;
  2203  00649E  90CD               	bcf	4045,0,c	;volatile
  2204                           
  2205                           ;obstacle_avoidance.c: 327: s4=(TMR1*0.0272)+1.093;
  2206  0064A0  0ED3               	movlw	211
  2207  0064A2  6E0F               	movwf	___ftmul@f2,c
  2208  0064A4  0EDE               	movlw	222
  2209  0064A6  6E10               	movwf	___ftmul@f2+1,c
  2210  0064A8  0E3C               	movlw	60
  2211  0064AA  6E11               	movwf	___ftmul@f2+2,c
  2212  0064AC  CFCE F009          	movff	4046,___lwtoft@c	;volatile
  2213  0064B0  CFCF F00A          	movff	4047,___lwtoft@c+1	;volatile
  2214  0064B4  EC33  F02C         	call	___lwtoft	;wreg free
  2215  0064B8  C009  F00C         	movff	?___lwtoft,___ftmul@f1
  2216  0064BC  C00A  F00D         	movff	?___lwtoft+1,___ftmul@f1+1
  2217  0064C0  C00B  F00E         	movff	?___lwtoft+2,___ftmul@f1+2
  2218  0064C4  EC41  F031         	call	___ftmul	;wreg free
  2219  0064C8  C00C  F02D         	movff	?___ftmul,___ftadd@f1
  2220  0064CC  C00D  F02E         	movff	?___ftmul+1,___ftadd@f1+1
  2221  0064D0  C00E  F02F         	movff	?___ftmul+2,___ftadd@f1+2
  2222  0064D4  0EE7               	movlw	231
  2223  0064D6  6E30               	movwf	___ftadd@f2,c
  2224  0064D8  0E8B               	movlw	139
  2225  0064DA  6E31               	movwf	___ftadd@f2+1,c
  2226  0064DC  0E3F               	movlw	63
  2227  0064DE  6E32               	movwf	___ftadd@f2+2,c
  2228  0064E0  EC08  F036         	call	___ftadd	;wreg free
  2229  0064E4  C02D  F087         	movff	?___ftadd,_s4
  2230  0064E8  C02E  F088         	movff	?___ftadd+1,_s4+1
  2231  0064EC  C02F  F089         	movff	?___ftadd+2,_s4+2
  2232                           
  2233                           ;obstacle_avoidance.c: 328: if(s4<2)
  2234  0064F0  C087  F001         	movff	_s4,___ftge@ff1
  2235  0064F4  C088  F002         	movff	_s4+1,___ftge@ff1+1
  2236  0064F8  C089  F003         	movff	_s4+2,___ftge@ff1+2
  2237  0064FC  0E00               	movlw	0
  2238  0064FE  6E04               	movwf	___ftge@ff2,c
  2239  006500  0E00               	movlw	0
  2240  006502  6E05               	movwf	___ftge@ff2+1,c
  2241  006504  0E40               	movlw	64
  2242  006506  6E06               	movwf	___ftge@ff2+2,c
  2243  006508  ECE2  F02E         	call	___ftge	;wreg free
  2244  00650C  B0D8               	btfsc	status,0,c
  2245  00650E  D00D               	goto	l2225
  2246                           
  2247                           ;obstacle_avoidance.c: 329: s4=s4_old;
  2248  006510  C0AA  F009         	movff	_s4_old,___awtoft@c
  2249  006514  C0AB  F00A         	movff	_s4_old+1,___awtoft@c+1
  2250  006518  EC04  F02D         	call	___awtoft	;wreg free
  2251  00651C  C009  F087         	movff	?___awtoft,_s4
  2252  006520  C00A  F088         	movff	?___awtoft+1,_s4+1
  2253  006524  C00B  F089         	movff	?___awtoft+2,_s4+2
  2254  006528  D014               	goto	l198
  2255  00652A                     l2225:
  2256                           
  2257                           ;obstacle_avoidance.c: 330: else
  2258                           ;obstacle_avoidance.c: 331: s4_old=s4;
  2259  00652A  C087  F001         	movff	_s4,___fttol@f1
  2260  00652E  C088  F002         	movff	_s4+1,___fttol@f1+1
  2261  006532  C089  F003         	movff	_s4+2,___fttol@f1+2
  2262  006536  EC6C  F030         	call	___fttol	;wreg free
  2263  00653A  C001  F039         	movff	?___fttol,??_read_ultrasonic_s4
  2264  00653E  C002  F03A         	movff	?___fttol+1,??_read_ultrasonic_s4+1
  2265  006542  C003  F03B         	movff	?___fttol+2,??_read_ultrasonic_s4+2
  2266  006546  C004  F03C         	movff	?___fttol+3,??_read_ultrasonic_s4+3
  2267  00654A  C039  F0AA         	movff	??_read_ultrasonic_s4,_s4_old
  2268  00654E  C03A  F0AB         	movff	??_read_ultrasonic_s4+1,_s4_old+1
  2269  006552                     l198:
  2270  006552  0012               	return	
  2271  006554                     __end_of_read_ultrasonic_s4:
  2272                           	opt stack 0
  2273                           tblptru	equ	0xFF8
  2274                           tblptrh	equ	0xFF7
  2275                           tblptrl	equ	0xFF6
  2276                           tablat	equ	0xFF5
  2277                           postinc0	equ	0xFEE
  2278                           wreg	equ	0xFE8
  2279                           postdec1	equ	0xFE5
  2280                           fsr1l	equ	0xFE1
  2281                           status	equ	0xFD8
  2282                           
  2283 ;; *************** function _read_ultrasonic_s3 *****************
  2284 ;; Defined at:
  2285 ;;		line 296 in file "obstacle_avoidance.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;		None
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;  value           2   60[COMRAM] int 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;		None               void
  2292 ;; Registers used:
  2293 ;;		wreg, status,2, status,0, prodl, cstack
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2299 ;;      Params:         0       0       0       0       0       0       0       0       0
  2300 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2301 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2302 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2303 ;;Total ram usage:        6 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; Hardware stack levels required when called:    2
  2306 ;; This function calls:
  2307 ;;		___awtoft
  2308 ;;		___ftadd
  2309 ;;		___ftge
  2310 ;;		___ftmul
  2311 ;;		___fttol
  2312 ;;		___lwtoft
  2313 ;; This function is called by:
  2314 ;;		_read_sensors
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text7
  2319  006366                     __ptext7:
  2320                           	opt stack 0
  2321  006366                     _read_ultrasonic_s3:
  2322                           	opt stack 27
  2323                           
  2324                           ;obstacle_avoidance.c: 298: TMR1=0x0000;
  2325                           
  2326                           ;incstack = 0
  2327  006366  0E00               	movlw	0
  2328  006368  6ECF               	movwf	4047,c	;volatile
  2329  00636A  0E00               	movlw	0
  2330  00636C  6ECE               	movwf	4046,c	;volatile
  2331                           
  2332                           ;obstacle_avoidance.c: 299: int value=0x0000;
  2333  00636E  0E00               	movlw	0
  2334  006370  6E3E               	movwf	read_ultrasonic_s3@value+1,c
  2335  006372  0E00               	movlw	0
  2336  006374  6E3D               	movwf	read_ultrasonic_s3@value,c
  2337                           
  2338                           ;obstacle_avoidance.c: 300: PORTBbits.RB2=1;
  2339  006376  8481               	bsf	3969,2,c	;volatile
  2340                           
  2341                           ;obstacle_avoidance.c: 302: _delay((unsigned long)((15)*(20000000/4000000.0)));
  2342  006378  0E19               	movlw	25
  2343  00637A                     u2617:
  2344  00637A  2EE8               	decfsz	wreg,f,c
  2345  00637C  D7FE               	goto	u2617
  2346                           
  2347                           ;obstacle_avoidance.c: 303: PORTBbits.RB2=0;
  2348  00637E  9481               	bcf	3969,2,c	;volatile
  2349  006380                     l175:
  2350  006380  A080               	btfss	3968,0,c	;volatile
  2351  006382  D7FE               	goto	l175
  2352                           
  2353                           ;obstacle_avoidance.c: 305: T1CONbits.TMR1ON=1;
  2354  006384  80CD               	bsf	4045,0,c	;volatile
  2355                           
  2356                           ;obstacle_avoidance.c: 306: while(PORTAbits.RA0 && value<7353)
  2357  006386  D004               	goto	l178
  2358  006388                     l179:
  2359                           
  2360                           ;obstacle_avoidance.c: 307: value=TMR1;
  2361  006388  CFCE F03D          	movff	4046,read_ultrasonic_s3@value	;volatile
  2362  00638C  CFCF F03E          	movff	4047,read_ultrasonic_s3@value+1	;volatile
  2363  006390                     l178:
  2364  006390  A080               	btfss	3968,0,c	;volatile
  2365  006392  D008               	goto	l182
  2366  006394  503E               	movf	read_ultrasonic_s3@value+1,w,c
  2367  006396  0A80               	xorlw	128
  2368  006398  0F64               	addlw	-156
  2369  00639A  0EB9               	movlw	185
  2370  00639C  B4D8               	btfsc	status,2,c
  2371  00639E  5C3D               	subwf	read_ultrasonic_s3@value,w,c
  2372  0063A0  A0D8               	btfss	status,0,c
  2373  0063A2  D7F2               	goto	l179
  2374  0063A4                     l182:
  2375                           
  2376                           ;obstacle_avoidance.c: 308: T1CONbits.TMR1ON=0;
  2377  0063A4  90CD               	bcf	4045,0,c	;volatile
  2378                           
  2379                           ;obstacle_avoidance.c: 309: s3=(TMR1*0.0272)+1.093;
  2380  0063A6  0ED3               	movlw	211
  2381  0063A8  6E0F               	movwf	___ftmul@f2,c
  2382  0063AA  0EDE               	movlw	222
  2383  0063AC  6E10               	movwf	___ftmul@f2+1,c
  2384  0063AE  0E3C               	movlw	60
  2385  0063B0  6E11               	movwf	___ftmul@f2+2,c
  2386  0063B2  CFCE F009          	movff	4046,___lwtoft@c	;volatile
  2387  0063B6  CFCF F00A          	movff	4047,___lwtoft@c+1	;volatile
  2388  0063BA  EC33  F02C         	call	___lwtoft	;wreg free
  2389  0063BE  C009  F00C         	movff	?___lwtoft,___ftmul@f1
  2390  0063C2  C00A  F00D         	movff	?___lwtoft+1,___ftmul@f1+1
  2391  0063C6  C00B  F00E         	movff	?___lwtoft+2,___ftmul@f1+2
  2392  0063CA  EC41  F031         	call	___ftmul	;wreg free
  2393  0063CE  C00C  F02D         	movff	?___ftmul,___ftadd@f1
  2394  0063D2  C00D  F02E         	movff	?___ftmul+1,___ftadd@f1+1
  2395  0063D6  C00E  F02F         	movff	?___ftmul+2,___ftadd@f1+2
  2396  0063DA  0EE7               	movlw	231
  2397  0063DC  6E30               	movwf	___ftadd@f2,c
  2398  0063DE  0E8B               	movlw	139
  2399  0063E0  6E31               	movwf	___ftadd@f2+1,c
  2400  0063E2  0E3F               	movlw	63
  2401  0063E4  6E32               	movwf	___ftadd@f2+2,c
  2402  0063E6  EC08  F036         	call	___ftadd	;wreg free
  2403  0063EA  C02D  F084         	movff	?___ftadd,_s3
  2404  0063EE  C02E  F085         	movff	?___ftadd+1,_s3+1
  2405  0063F2  C02F  F086         	movff	?___ftadd+2,_s3+2
  2406                           
  2407                           ;obstacle_avoidance.c: 310: if(s3<2)
  2408  0063F6  C084  F001         	movff	_s3,___ftge@ff1
  2409  0063FA  C085  F002         	movff	_s3+1,___ftge@ff1+1
  2410  0063FE  C086  F003         	movff	_s3+2,___ftge@ff1+2
  2411  006402  0E00               	movlw	0
  2412  006404  6E04               	movwf	___ftge@ff2,c
  2413  006406  0E00               	movlw	0
  2414  006408  6E05               	movwf	___ftge@ff2+1,c
  2415  00640A  0E40               	movlw	64
  2416  00640C  6E06               	movwf	___ftge@ff2+2,c
  2417  00640E  ECE2  F02E         	call	___ftge	;wreg free
  2418  006412  B0D8               	btfsc	status,0,c
  2419  006414  D00D               	goto	l2209
  2420                           
  2421                           ;obstacle_avoidance.c: 311: s3=s3_old;
  2422  006416  C0A8  F009         	movff	_s3_old,___awtoft@c
  2423  00641A  C0A9  F00A         	movff	_s3_old+1,___awtoft@c+1
  2424  00641E  EC04  F02D         	call	___awtoft	;wreg free
  2425  006422  C009  F084         	movff	?___awtoft,_s3
  2426  006426  C00A  F085         	movff	?___awtoft+1,_s3+1
  2427  00642A  C00B  F086         	movff	?___awtoft+2,_s3+2
  2428  00642E  D014               	goto	l185
  2429  006430                     l2209:
  2430                           
  2431                           ;obstacle_avoidance.c: 312: else
  2432                           ;obstacle_avoidance.c: 313: s3_old=s3;
  2433  006430  C084  F001         	movff	_s3,___fttol@f1
  2434  006434  C085  F002         	movff	_s3+1,___fttol@f1+1
  2435  006438  C086  F003         	movff	_s3+2,___fttol@f1+2
  2436  00643C  EC6C  F030         	call	___fttol	;wreg free
  2437  006440  C001  F039         	movff	?___fttol,??_read_ultrasonic_s3
  2438  006444  C002  F03A         	movff	?___fttol+1,??_read_ultrasonic_s3+1
  2439  006448  C003  F03B         	movff	?___fttol+2,??_read_ultrasonic_s3+2
  2440  00644C  C004  F03C         	movff	?___fttol+3,??_read_ultrasonic_s3+3
  2441  006450  C039  F0A8         	movff	??_read_ultrasonic_s3,_s3_old
  2442  006454  C03A  F0A9         	movff	??_read_ultrasonic_s3+1,_s3_old+1
  2443  006458                     l185:
  2444  006458  0012               	return	
  2445  00645A                     __end_of_read_ultrasonic_s3:
  2446                           	opt stack 0
  2447                           tblptru	equ	0xFF8
  2448                           tblptrh	equ	0xFF7
  2449                           tblptrl	equ	0xFF6
  2450                           tablat	equ	0xFF5
  2451                           postinc0	equ	0xFEE
  2452                           wreg	equ	0xFE8
  2453                           postdec1	equ	0xFE5
  2454                           fsr1l	equ	0xFE1
  2455                           status	equ	0xFD8
  2456                           
  2457 ;; *************** function ___lwtoft *****************
  2458 ;; Defined at:
  2459 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;  c               2    8[COMRAM] unsigned int 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;		None
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  3    8[COMRAM] float 
  2466 ;; Registers used:
  2467 ;;		wreg, status,2, status,0, cstack
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2473 ;;      Params:         3       0       0       0       0       0       0       0       0
  2474 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2475 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2476 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2477 ;;Total ram usage:        3 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    1
  2480 ;; This function calls:
  2481 ;;		___ftpack
  2482 ;; This function is called by:
  2483 ;;		_read_ultrasonic_s3
  2484 ;;		_read_ultrasonic_s4
  2485 ;;		_read_ultrasonic_s5
  2486 ;;		_read_ultrasonic_s6
  2487 ;;		_read_ultrasonic_s7
  2488 ;;		_read_ultrasonic_s8
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           	psect	text8
  2493  005866                     __ptext8:
  2494                           	opt stack 0
  2495  005866                     ___lwtoft:
  2496                           	opt stack 27
  2497                           
  2498                           ;incstack = 0
  2499  005866  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  2500  00586A  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  2501  00586E  6A03               	clrf	___ftpack@arg+2,c
  2502  005870  0E8E               	movlw	142
  2503  005872  6E04               	movwf	___ftpack@exp,c
  2504  005874  0E00               	movlw	0
  2505  005876  6E05               	movwf	___ftpack@sign,c
  2506  005878  EC18  F030         	call	___ftpack	;wreg free
  2507  00587C  C001  F009         	movff	?___ftpack,?___lwtoft
  2508  005880  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  2509  005884  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  2510  005888  0012               	return	
  2511  00588A                     __end_of___lwtoft:
  2512                           	opt stack 0
  2513                           tblptru	equ	0xFF8
  2514                           tblptrh	equ	0xFF7
  2515                           tblptrl	equ	0xFF6
  2516                           tablat	equ	0xFF5
  2517                           postinc0	equ	0xFEE
  2518                           wreg	equ	0xFE8
  2519                           postdec1	equ	0xFE5
  2520                           fsr1l	equ	0xFE1
  2521                           status	equ	0xFD8
  2522                           
  2523 ;; *************** function _obstacle_avoid_controller *****************
  2524 ;; Defined at:
  2525 ;;		line 500 in file "obstacle_avoidance.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;		None
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;  k               2   41[BANK0 ] int 
  2530 ;;  k               2   35[BANK0 ] int 
  2531 ;;  k               2   23[BANK0 ] int 
  2532 ;;  k               2   17[BANK0 ] int 
  2533 ;;  j               2   39[BANK0 ] int 
  2534 ;;  j               2   33[BANK0 ] int 
  2535 ;;  j               2   21[BANK0 ] int 
  2536 ;;  j               2   15[BANK0 ] int 
  2537 ;;  i               2   37[BANK0 ] int 
  2538 ;;  i               2   31[BANK0 ] int 
  2539 ;;  i               2   19[BANK0 ] int 
  2540 ;;  i               2   13[BANK0 ] int 
  2541 ;;  den             3   28[BANK0 ] float 
  2542 ;;  num             3   25[BANK0 ] float 
  2543 ;;  premise_temp    3    6[BANK0 ] float 
  2544 ;;  temp3           3    3[BANK0 ] float 
  2545 ;;  temp1           3    0[BANK0 ] float 
  2546 ;;  temp2           2   11[BANK0 ] int 
  2547 ;;  temp            2    9[BANK0 ] int 
  2548 ;; Return value:  Size  Location     Type
  2549 ;;		None               void
  2550 ;; Registers used:
  2551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2557 ;;      Params:         0       0       0       0       0       0       0       0       0
  2558 ;;      Locals:         0      43       0       0       0       0       0       0       0
  2559 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2560 ;;      Totals:         4      43       0       0       0       0       0       0       0
  2561 ;;Total ram usage:       47 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:    3
  2564 ;; This function calls:
  2565 ;;		___awtoft
  2566 ;;		___ftadd
  2567 ;;		___ftdiv
  2568 ;;		___ftge
  2569 ;;		___ftmul
  2570 ;;		___ftneg
  2571 ;;		___fttol
  2572 ;;		___wmul
  2573 ;;		_area
  2574 ;;		_min
  2575 ;; This function is called by:
  2576 ;;		_main
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text9
  2581  0076F6                     __ptext9:
  2582                           	opt stack 0
  2583  0076F6                     _obstacle_avoid_controller:
  2584                           	opt stack 27
  2585                           
  2586                           ;obstacle_avoidance.c: 503: float num,den;
  2587                           ;obstacle_avoidance.c: 504: float premise_temp;
  2588                           ;obstacle_avoidance.c: 506: float premise_temp=0;
  2589                           
  2590                           ;incstack = 0
  2591  0076F6  0E00               	movlw	0
  2592  0076F8  0100               	movlb	0	; () banked
  2593  0076FA  6FBC               	movwf	obstacle_avoid_controller@premise_temp& (0+255),b
  2594  0076FC  0E00               	movlw	0
  2595  0076FE  0100               	movlb	0	; () banked
  2596  007700  6FBD               	movwf	(obstacle_avoid_controller@premise_temp+1)& (0+255),b
  2597  007702  0E00               	movlw	0
  2598  007704  0100               	movlb	0	; () banked
  2599  007706  6FBE               	movwf	(obstacle_avoid_controller@premise_temp+2)& (0+255),b
  2600                           
  2601                           ;obstacle_avoidance.c: 507: num=0;
  2602  007708  0E00               	movlw	0
  2603  00770A  0100               	movlb	0	; () banked
  2604  00770C  6FCF               	movwf	obstacle_avoid_controller@num& (0+255),b
  2605  00770E  0E00               	movlw	0
  2606  007710  0100               	movlb	0	; () banked
  2607  007712  6FD0               	movwf	(obstacle_avoid_controller@num+1)& (0+255),b
  2608  007714  0E00               	movlw	0
  2609  007716  0100               	movlb	0	; () banked
  2610  007718  6FD1               	movwf	(obstacle_avoid_controller@num+2)& (0+255),b
  2611                           
  2612                           ;obstacle_avoidance.c: 508: den=0.0001;
  2613  00771A  0EB7               	movlw	183
  2614  00771C  0100               	movlb	0	; () banked
  2615  00771E  6FD2               	movwf	obstacle_avoid_controller@den& (0+255),b
  2616  007720  0ED1               	movlw	209
  2617  007722  0100               	movlb	0	; () banked
  2618  007724  6FD3               	movwf	(obstacle_avoid_controller@den+1)& (0+255),b
  2619  007726  0E38               	movlw	56
  2620  007728  0100               	movlb	0	; () banked
  2621  00772A  6FD4               	movwf	(obstacle_avoid_controller@den+2)& (0+255),b
  2622                           
  2623                           ;obstacle_avoidance.c: 510: for(int i=0; i<3; i++)
  2624  00772C  0E00               	movlw	0
  2625  00772E  0100               	movlb	0	; () banked
  2626  007730  6FC4               	movwf	(obstacle_avoid_controller@i+1)& (0+255),b
  2627  007732  0E00               	movlw	0
  2628  007734  0100               	movlb	0	; () banked
  2629  007736  6FC3               	movwf	obstacle_avoid_controller@i& (0+255),b
  2630  007738                     
  2631                           ; BSR set to: 0
  2632  007738  0100               	movlb	0	; () banked
  2633  00773A  51C4               	movf	(obstacle_avoid_controller@i+1)& (0+255),w,b
  2634  00773C  0A80               	xorlw	128
  2635  00773E  0F80               	addlw	-128
  2636  007740  0E03               	movlw	3
  2637  007742  B4D8               	btfsc	status,2,c
  2638  007744  5DC3               	subwf	obstacle_avoid_controller@i& (0+255),w,b
  2639  007746  B0D8               	btfsc	status,0,c
  2640  007748  D0B9               	goto	l2553
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;obstacle_avoidance.c: 511: {
  2644                           ;obstacle_avoidance.c: 512: for(int j=0; j<3; j++)
  2645                           
  2646                           ; BSR set to: 0
  2647                           
  2648                           ; BSR set to: 0
  2649  00774A  0E00               	movlw	0
  2650  00774C  0100               	movlb	0	; () banked
  2651  00774E  6FC6               	movwf	(obstacle_avoid_controller@j+1)& (0+255),b
  2652  007750  0E00               	movlw	0
  2653  007752  0100               	movlb	0	; () banked
  2654  007754  6FC5               	movwf	obstacle_avoid_controller@j& (0+255),b
  2655  007756                     
  2656                           ; BSR set to: 0
  2657  007756  0100               	movlb	0	; () banked
  2658  007758  51C6               	movf	(obstacle_avoid_controller@j+1)& (0+255),w,b
  2659  00775A  0A80               	xorlw	128
  2660  00775C  0F80               	addlw	-128
  2661  00775E  0E03               	movlw	3
  2662  007760  B4D8               	btfsc	status,2,c
  2663  007762  5DC5               	subwf	obstacle_avoid_controller@j& (0+255),w,b
  2664  007764  B0D8               	btfsc	status,0,c
  2665  007766  D0A6               	goto	l2549
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;obstacle_avoidance.c: 513: {
  2669                           ;obstacle_avoidance.c: 514: for(int k=0; k<3; k++)
  2670                           
  2671                           ; BSR set to: 0
  2672                           
  2673                           ; BSR set to: 0
  2674  007768  0E00               	movlw	0
  2675  00776A  0100               	movlb	0	; () banked
  2676  00776C  6FC8               	movwf	(obstacle_avoid_controller@k+1)& (0+255),b
  2677  00776E  0E00               	movlw	0
  2678  007770  0100               	movlb	0	; () banked
  2679  007772  6FC7               	movwf	obstacle_avoid_controller@k& (0+255),b
  2680  007774                     
  2681                           ; BSR set to: 0
  2682  007774  0100               	movlb	0	; () banked
  2683  007776  51C8               	movf	(obstacle_avoid_controller@k+1)& (0+255),w,b
  2684  007778  0A80               	xorlw	128
  2685  00777A  0F80               	addlw	-128
  2686  00777C  0E03               	movlw	3
  2687  00777E  B4D8               	btfsc	status,2,c
  2688  007780  5DC7               	subwf	obstacle_avoid_controller@k& (0+255),w,b
  2689  007782  B0D8               	btfsc	status,0,c
  2690  007784  D093               	goto	l2545
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;obstacle_avoidance.c: 515: {
  2694                           ;obstacle_avoidance.c: 516: premise_temp=min(Mem_front[i],Mem_right[j]);
  2695                           
  2696                           ; BSR set to: 0
  2697                           
  2698                           ; BSR set to: 0
  2699  007786  C0C3  F001         	movff	obstacle_avoid_controller@i,___wmul@multiplier
  2700  00778A  C0C4  F002         	movff	obstacle_avoid_controller@i+1,___wmul@multiplier+1
  2701  00778E  0E00               	movlw	0
  2702  007790  6E04               	movwf	___wmul@multiplicand+1,c
  2703  007792  0E03               	movlw	3
  2704  007794  6E03               	movwf	___wmul@multiplicand,c
  2705  007796  EC58  F02C         	call	___wmul	;wreg free
  2706  00779A  0100               	movlb	0	; () banked
  2707  00779C  0E60               	movlw	low _Mem_front
  2708  00779E  2401               	addwf	?___wmul,w,c
  2709  0077A0  6ED9               	movwf	fsr2l,c
  2710  0077A2  0100               	movlb	0	; () banked
  2711  0077A4  0E00               	movlw	high _Mem_front
  2712  0077A6  2002               	addwfc	?___wmul+1,w,c
  2713  0077A8  6EDA               	movwf	fsr2h,c
  2714  0077AA  CFDE F00A          	movff	postinc2,min@x
  2715  0077AE  CFDE F00B          	movff	postinc2,min@x+1
  2716  0077B2  CFDD F00C          	movff	postdec2,min@x+2
  2717  0077B6  C0C5  F001         	movff	obstacle_avoid_controller@j,___wmul@multiplier
  2718  0077BA  C0C6  F002         	movff	obstacle_avoid_controller@j+1,___wmul@multiplier+1
  2719  0077BE  0E00               	movlw	0
  2720  0077C0  6E04               	movwf	___wmul@multiplicand+1,c
  2721  0077C2  0E03               	movlw	3
  2722  0077C4  6E03               	movwf	___wmul@multiplicand,c
  2723  0077C6  EC58  F02C         	call	___wmul	;wreg free
  2724  0077CA  0100               	movlb	0	; () banked
  2725  0077CC  0E72               	movlw	low _Mem_right
  2726  0077CE  2401               	addwf	?___wmul,w,c
  2727  0077D0  6ED9               	movwf	fsr2l,c
  2728  0077D2  0100               	movlb	0	; () banked
  2729  0077D4  0E00               	movlw	high _Mem_right
  2730  0077D6  2002               	addwfc	?___wmul+1,w,c
  2731  0077D8  6EDA               	movwf	fsr2h,c
  2732  0077DA  CFDE F00D          	movff	postinc2,min@y
  2733  0077DE  CFDE F00E          	movff	postinc2,min@y+1
  2734  0077E2  CFDD F00F          	movff	postdec2,min@y+2
  2735  0077E6  EC28  F02D         	call	_min	;wreg free
  2736  0077EA  C00A  F0BC         	movff	?_min,obstacle_avoid_controller@premise_temp
  2737  0077EE  C00B  F0BD         	movff	?_min+1,obstacle_avoid_controller@premise_temp+1
  2738  0077F2  C00C  F0BE         	movff	?_min+2,obstacle_avoid_controller@premise_temp+2
  2739                           
  2740                           ;obstacle_avoidance.c: 517: premise_obstacle_avoid_lw[i][j][k]=min(premise_temp,Mem_left
      +                          [k]);
  2741  0077F6  C0C3  F001         	movff	obstacle_avoid_controller@i,___wmul@multiplier
  2742  0077FA  C0C4  F002         	movff	obstacle_avoid_controller@i+1,___wmul@multiplier+1
  2743  0077FE  0E00               	movlw	0
  2744  007800  6E04               	movwf	___wmul@multiplicand+1,c
  2745  007802  0E1B               	movlw	27
  2746  007804  6E03               	movwf	___wmul@multiplicand,c
  2747  007806  EC58  F02C         	call	___wmul	;wreg free
  2748  00780A  0E51               	movlw	low _premise_obstacle_avoid_lw
  2749  00780C  6E45               	movwf	??_obstacle_avoid_controller& (0+255),c
  2750  00780E  0E01               	movlw	high _premise_obstacle_avoid_lw
  2751  007810  6E46               	movwf	(??_obstacle_avoid_controller+1)& (0+255),c
  2752  007812  5001               	movf	?___wmul,w,c
  2753  007814  2645               	addwf	??_obstacle_avoid_controller,f,c
  2754  007816  5002               	movf	?___wmul+1,w,c
  2755  007818  2246               	addwfc	??_obstacle_avoid_controller+1,f,c
  2756  00781A  C0C5  F001         	movff	obstacle_avoid_controller@j,___wmul@multiplier
  2757  00781E  C0C6  F002         	movff	obstacle_avoid_controller@j+1,___wmul@multiplier+1
  2758  007822  0E00               	movlw	0
  2759  007824  6E04               	movwf	___wmul@multiplicand+1,c
  2760  007826  0E09               	movlw	9
  2761  007828  6E03               	movwf	___wmul@multiplicand,c
  2762  00782A  EC58  F02C         	call	___wmul	;wreg free
  2763  00782E  5001               	movf	?___wmul,w,c
  2764  007830  2645               	addwf	??_obstacle_avoid_controller,f,c
  2765  007832  5002               	movf	?___wmul+1,w,c
  2766  007834  2246               	addwfc	??_obstacle_avoid_controller+1,f,c
  2767  007836  C0C7  F001         	movff	obstacle_avoid_controller@k,___wmul@multiplier
  2768  00783A  C0C8  F002         	movff	obstacle_avoid_controller@k+1,___wmul@multiplier+1
  2769  00783E  0E00               	movlw	0
  2770  007840  6E04               	movwf	___wmul@multiplicand+1,c
  2771  007842  0E03               	movlw	3
  2772  007844  6E03               	movwf	___wmul@multiplicand,c
  2773  007846  EC58  F02C         	call	___wmul	;wreg free
  2774  00784A  5001               	movf	?___wmul,w,c
  2775  00784C  2445               	addwf	??_obstacle_avoid_controller,w,c
  2776  00784E  6ED9               	movwf	fsr2l,c
  2777  007850  5002               	movf	?___wmul+1,w,c
  2778  007852  2046               	addwfc	??_obstacle_avoid_controller+1,w,c
  2779  007854  6EDA               	movwf	fsr2h,c
  2780  007856  C0BC  F00A         	movff	obstacle_avoid_controller@premise_temp,min@x
  2781  00785A  C0BD  F00B         	movff	obstacle_avoid_controller@premise_temp+1,min@x+1
  2782  00785E  C0BE  F00C         	movff	obstacle_avoid_controller@premise_temp+2,min@x+2
  2783  007862  C0C7  F001         	movff	obstacle_avoid_controller@k,___wmul@multiplier
  2784  007866  C0C8  F002         	movff	obstacle_avoid_controller@k+1,___wmul@multiplier+1
  2785  00786A  0E00               	movlw	0
  2786  00786C  6E04               	movwf	___wmul@multiplicand+1,c
  2787  00786E  0E03               	movlw	3
  2788  007870  6E03               	movwf	___wmul@multiplicand,c
  2789  007872  EC58  F02C         	call	___wmul	;wreg free
  2790  007876  0100               	movlb	0	; () banked
  2791  007878  0E69               	movlw	low _Mem_left
  2792  00787A  2401               	addwf	?___wmul,w,c
  2793  00787C  6EE1               	movwf	fsr1l,c
  2794  00787E  0100               	movlb	0	; () banked
  2795  007880  0E00               	movlw	high _Mem_left
  2796  007882  2002               	addwfc	?___wmul+1,w,c
  2797  007884  6EE2               	movwf	fsr1h,c
  2798  007886  CFE6 F00D          	movff	postinc1,min@y
  2799  00788A  CFE6 F00E          	movff	postinc1,min@y+1
  2800  00788E  CFE5 F00F          	movff	postdec1,min@y+2
  2801  007892  EC28  F02D         	call	_min	;wreg free
  2802  007896  C00A  FFDE         	movff	?_min,postinc2
  2803  00789A  C00B  FFDE         	movff	?_min+1,postinc2
  2804  00789E  C00C  FFDD         	movff	?_min+2,postdec2
  2805  0078A2  52DD               	movf	postdec2,f,c
  2806  0078A4  0100               	movlb	0	; () banked
  2807  0078A6  4BC7               	infsnz	obstacle_avoid_controller@k& (0+255),f,b
  2808  0078A8  2BC8               	incf	(obstacle_avoid_controller@k+1)& (0+255),f,b
  2809  0078AA  D764               	goto	L1
  2810  0078AC                     l2545:
  2811                           
  2812                           ; BSR set to: 0
  2813  0078AC  0100               	movlb	0	; () banked
  2814  0078AE  4BC5               	infsnz	obstacle_avoid_controller@j& (0+255),f,b
  2815  0078B0  2BC6               	incf	(obstacle_avoid_controller@j+1)& (0+255),f,b
  2816  0078B2  D751               	goto	L2
  2817  0078B4                     l2549:
  2818                           
  2819                           ; BSR set to: 0
  2820  0078B4  0100               	movlb	0	; () banked
  2821  0078B6  4BC3               	infsnz	obstacle_avoid_controller@i& (0+255),f,b
  2822  0078B8  2BC4               	incf	(obstacle_avoid_controller@i+1)& (0+255),f,b
  2823  0078BA  D73E               	goto	L3
  2824  0078BC                     l2553:
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;obstacle_avoidance.c: 518: }
  2828                           ;obstacle_avoidance.c: 519: }
  2829                           ;obstacle_avoidance.c: 520: }
  2830                           ;obstacle_avoidance.c: 521: for(int i=0; i<3; i++)
  2831  0078BC  0E00               	movlw	0
  2832  0078BE  0100               	movlb	0	; () banked
  2833  0078C0  6FCA               	movwf	(obstacle_avoid_controller@i_835+1)& (0+255),b
  2834  0078C2  0E00               	movlw	0
  2835  0078C4  0100               	movlb	0	; () banked
  2836  0078C6  6FC9               	movwf	obstacle_avoid_controller@i_835& (0+255),b
  2837  0078C8                     
  2838                           ; BSR set to: 0
  2839  0078C8  0100               	movlb	0	; () banked
  2840  0078CA  51CA               	movf	(obstacle_avoid_controller@i_835+1)& (0+255),w,b
  2841  0078CC  0A80               	xorlw	128
  2842  0078CE  0F80               	addlw	-128
  2843  0078D0  0E03               	movlw	3
  2844  0078D2  B4D8               	btfsc	status,2,c
  2845  0078D4  5DC9               	subwf	obstacle_avoid_controller@i_835& (0+255),w,b
  2846  0078D6  B0D8               	btfsc	status,0,c
  2847  0078D8  D0A5               	goto	l2585
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;obstacle_avoidance.c: 522: {
  2851                           ;obstacle_avoidance.c: 523: for(int j=0; j<3; j++)
  2852                           
  2853                           ; BSR set to: 0
  2854                           
  2855                           ; BSR set to: 0
  2856  0078DA  0E00               	movlw	0
  2857  0078DC  0100               	movlb	0	; () banked
  2858  0078DE  6FCC               	movwf	(obstacle_avoid_controller@j_836+1)& (0+255),b
  2859  0078E0  0E00               	movlw	0
  2860  0078E2  0100               	movlb	0	; () banked
  2861  0078E4  6FCB               	movwf	obstacle_avoid_controller@j_836& (0+255),b
  2862  0078E6                     
  2863                           ; BSR set to: 0
  2864  0078E6  0100               	movlb	0	; () banked
  2865  0078E8  51CC               	movf	(obstacle_avoid_controller@j_836+1)& (0+255),w,b
  2866  0078EA  0A80               	xorlw	128
  2867  0078EC  0F80               	addlw	-128
  2868  0078EE  0E03               	movlw	3
  2869  0078F0  B4D8               	btfsc	status,2,c
  2870  0078F2  5DCB               	subwf	obstacle_avoid_controller@j_836& (0+255),w,b
  2871  0078F4  B0D8               	btfsc	status,0,c
  2872  0078F6  D092               	goto	l2581
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;obstacle_avoidance.c: 524: {
  2876                           ;obstacle_avoidance.c: 525: for(int k=0; k<3; k++)
  2877                           
  2878                           ; BSR set to: 0
  2879                           
  2880                           ; BSR set to: 0
  2881  0078F8  0E00               	movlw	0
  2882  0078FA  0100               	movlb	0	; () banked
  2883  0078FC  6FCE               	movwf	(obstacle_avoid_controller@k_837+1)& (0+255),b
  2884  0078FE  0E00               	movlw	0
  2885  007900  0100               	movlb	0	; () banked
  2886  007902  6FCD               	movwf	obstacle_avoid_controller@k_837& (0+255),b
  2887  007904                     
  2888                           ; BSR set to: 0
  2889  007904  0100               	movlb	0	; () banked
  2890  007906  51CE               	movf	(obstacle_avoid_controller@k_837+1)& (0+255),w,b
  2891  007908  0A80               	xorlw	128
  2892  00790A  0F80               	addlw	-128
  2893  00790C  0E03               	movlw	3
  2894  00790E  B4D8               	btfsc	status,2,c
  2895  007910  5DCD               	subwf	obstacle_avoid_controller@k_837& (0+255),w,b
  2896  007912  B0D8               	btfsc	status,0,c
  2897  007914  D07F               	goto	l2577
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;obstacle_avoidance.c: 526: area_obstacle_avoid_lw[i][j][k]=area(width_obs,premise_obsta
      +                          cle_avoid_lw[i][j][k]);
  2901                           
  2902                           ; BSR set to: 0
  2903                           
  2904                           ; BSR set to: 0
  2905  007916  C0C9  F001         	movff	obstacle_avoid_controller@i_835,___wmul@multiplier
  2906  00791A  C0CA  F002         	movff	obstacle_avoid_controller@i_835+1,___wmul@multiplier+1
  2907  00791E  0E00               	movlw	0
  2908  007920  6E04               	movwf	___wmul@multiplicand+1,c
  2909  007922  0E1B               	movlw	27
  2910  007924  6E03               	movwf	___wmul@multiplicand,c
  2911  007926  EC58  F02C         	call	___wmul	;wreg free
  2912  00792A  0E00               	movlw	low _area_obstacle_avoid_lw
  2913  00792C  6E45               	movwf	??_obstacle_avoid_controller& (0+255),c
  2914  00792E  0E01               	movlw	high _area_obstacle_avoid_lw
  2915  007930  6E46               	movwf	(??_obstacle_avoid_controller+1)& (0+255),c
  2916  007932  5001               	movf	?___wmul,w,c
  2917  007934  2645               	addwf	??_obstacle_avoid_controller,f,c
  2918  007936  5002               	movf	?___wmul+1,w,c
  2919  007938  2246               	addwfc	??_obstacle_avoid_controller+1,f,c
  2920  00793A  C0CB  F001         	movff	obstacle_avoid_controller@j_836,___wmul@multiplier
  2921  00793E  C0CC  F002         	movff	obstacle_avoid_controller@j_836+1,___wmul@multiplier+1
  2922  007942  0E00               	movlw	0
  2923  007944  6E04               	movwf	___wmul@multiplicand+1,c
  2924  007946  0E09               	movlw	9
  2925  007948  6E03               	movwf	___wmul@multiplicand,c
  2926  00794A  EC58  F02C         	call	___wmul	;wreg free
  2927  00794E  5001               	movf	?___wmul,w,c
  2928  007950  2645               	addwf	??_obstacle_avoid_controller,f,c
  2929  007952  5002               	movf	?___wmul+1,w,c
  2930  007954  2246               	addwfc	??_obstacle_avoid_controller+1,f,c
  2931  007956  C0CD  F001         	movff	obstacle_avoid_controller@k_837,___wmul@multiplier
  2932  00795A  C0CE  F002         	movff	obstacle_avoid_controller@k_837+1,___wmul@multiplier+1
  2933  00795E  0E00               	movlw	0
  2934  007960  6E04               	movwf	___wmul@multiplicand+1,c
  2935  007962  0E03               	movlw	3
  2936  007964  6E03               	movwf	___wmul@multiplicand,c
  2937  007966  EC58  F02C         	call	___wmul	;wreg free
  2938  00796A  5001               	movf	?___wmul,w,c
  2939  00796C  2445               	addwf	??_obstacle_avoid_controller,w,c
  2940  00796E  6ED9               	movwf	fsr2l,c
  2941  007970  5002               	movf	?___wmul+1,w,c
  2942  007972  2046               	addwfc	??_obstacle_avoid_controller+1,w,c
  2943  007974  6EDA               	movwf	fsr2h,c
  2944  007976  C0E5  F009         	movff	_width_obs,___awtoft@c
  2945  00797A  C0E6  F00A         	movff	_width_obs+1,___awtoft@c+1
  2946  00797E  EC04  F02D         	call	___awtoft	;wreg free
  2947  007982  C009  F039         	movff	?___awtoft,area@w
  2948  007986  C00A  F03A         	movff	?___awtoft+1,area@w+1
  2949  00798A  C00B  F03B         	movff	?___awtoft+2,area@w+2
  2950  00798E  C0C9  F001         	movff	obstacle_avoid_controller@i_835,___wmul@multiplier
  2951  007992  C0CA  F002         	movff	obstacle_avoid_controller@i_835+1,___wmul@multiplier+1
  2952  007996  0E00               	movlw	0
  2953  007998  6E04               	movwf	___wmul@multiplicand+1,c
  2954  00799A  0E1B               	movlw	27
  2955  00799C  6E03               	movwf	___wmul@multiplicand,c
  2956  00799E  EC58  F02C         	call	___wmul	;wreg free
  2957  0079A2  0E51               	movlw	low _premise_obstacle_avoid_lw
  2958  0079A4  6E47               	movwf	(??_obstacle_avoid_controller+2)& (0+255),c
  2959  0079A6  0E01               	movlw	high _premise_obstacle_avoid_lw
  2960  0079A8  6E48               	movwf	(??_obstacle_avoid_controller+3)& (0+255),c
  2961  0079AA  5001               	movf	?___wmul,w,c
  2962  0079AC  2647               	addwf	??_obstacle_avoid_controller+2,f,c
  2963  0079AE  5002               	movf	?___wmul+1,w,c
  2964  0079B0  2248               	addwfc	??_obstacle_avoid_controller+3,f,c
  2965  0079B2  C0CB  F001         	movff	obstacle_avoid_controller@j_836,___wmul@multiplier
  2966  0079B6  C0CC  F002         	movff	obstacle_avoid_controller@j_836+1,___wmul@multiplier+1
  2967  0079BA  0E00               	movlw	0
  2968  0079BC  6E04               	movwf	___wmul@multiplicand+1,c
  2969  0079BE  0E09               	movlw	9
  2970  0079C0  6E03               	movwf	___wmul@multiplicand,c
  2971  0079C2  EC58  F02C         	call	___wmul	;wreg free
  2972  0079C6  5001               	movf	?___wmul,w,c
  2973  0079C8  2647               	addwf	??_obstacle_avoid_controller+2,f,c
  2974  0079CA  5002               	movf	?___wmul+1,w,c
  2975  0079CC  2248               	addwfc	??_obstacle_avoid_controller+3,f,c
  2976  0079CE  C0CD  F001         	movff	obstacle_avoid_controller@k_837,___wmul@multiplier
  2977  0079D2  C0CE  F002         	movff	obstacle_avoid_controller@k_837+1,___wmul@multiplier+1
  2978  0079D6  0E00               	movlw	0
  2979  0079D8  6E04               	movwf	___wmul@multiplicand+1,c
  2980  0079DA  0E03               	movlw	3
  2981  0079DC  6E03               	movwf	___wmul@multiplicand,c
  2982  0079DE  EC58  F02C         	call	___wmul	;wreg free
  2983  0079E2  5001               	movf	?___wmul,w,c
  2984  0079E4  2447               	addwf	??_obstacle_avoid_controller+2,w,c
  2985  0079E6  6EE1               	movwf	fsr1l,c
  2986  0079E8  5002               	movf	?___wmul+1,w,c
  2987  0079EA  2048               	addwfc	??_obstacle_avoid_controller+3,w,c
  2988  0079EC  6EE2               	movwf	fsr1h,c
  2989  0079EE  CFE6 F03C          	movff	postinc1,area@h
  2990  0079F2  CFE6 F03D          	movff	postinc1,area@h+1
  2991  0079F6  CFE5 F03E          	movff	postdec1,area@h+2
  2992  0079FA  ECC5  F02F         	call	_area	;wreg free
  2993  0079FE  C039  FFDE         	movff	?_area,postinc2
  2994  007A02  C03A  FFDE         	movff	?_area+1,postinc2
  2995  007A06  C03B  FFDD         	movff	?_area+2,postdec2
  2996  007A0A  52DD               	movf	postdec2,f,c
  2997  007A0C  0100               	movlb	0	; () banked
  2998  007A0E  4BCD               	infsnz	obstacle_avoid_controller@k_837& (0+255),f,b
  2999  007A10  2BCE               	incf	(obstacle_avoid_controller@k_837+1)& (0+255),f,b
  3000  007A12  D778               	goto	L4
  3001  007A14                     l2577:
  3002                           
  3003                           ; BSR set to: 0
  3004  007A14  0100               	movlb	0	; () banked
  3005  007A16  4BCB               	infsnz	obstacle_avoid_controller@j_836& (0+255),f,b
  3006  007A18  2BCC               	incf	(obstacle_avoid_controller@j_836+1)& (0+255),f,b
  3007  007A1A  D765               	goto	L5
  3008  007A1C                     l2581:
  3009                           
  3010                           ; BSR set to: 0
  3011  007A1C  0100               	movlb	0	; () banked
  3012  007A1E  4BC9               	infsnz	obstacle_avoid_controller@i_835& (0+255),f,b
  3013  007A20  2BCA               	incf	(obstacle_avoid_controller@i_835+1)& (0+255),f,b
  3014  007A22  D752               	goto	L6
  3015  007A24                     l2585:
  3016                           
  3017                           ; BSR set to: 0
  3018                           ;obstacle_avoidance.c: 527: }
  3019                           ;obstacle_avoidance.c: 528: }
  3020                           ;obstacle_avoidance.c: 530: for(int i=0; i<3; i++)
  3021  007A24  0E00               	movlw	0
  3022  007A26  0100               	movlb	0	; () banked
  3023  007A28  6FD6               	movwf	(obstacle_avoid_controller@i_839+1)& (0+255),b
  3024  007A2A  0E00               	movlw	0
  3025  007A2C  0100               	movlb	0	; () banked
  3026  007A2E  6FD5               	movwf	obstacle_avoid_controller@i_839& (0+255),b
  3027  007A30                     
  3028                           ; BSR set to: 0
  3029  007A30  0100               	movlb	0	; () banked
  3030  007A32  51D6               	movf	(obstacle_avoid_controller@i_839+1)& (0+255),w,b
  3031  007A34  0A80               	xorlw	128
  3032  007A36  0F80               	addlw	-128
  3033  007A38  0E03               	movlw	3
  3034  007A3A  B4D8               	btfsc	status,2,c
  3035  007A3C  5DD5               	subwf	obstacle_avoid_controller@i_839& (0+255),w,b
  3036  007A3E  B0D8               	btfsc	status,0,c
  3037  007A40  D0F0               	goto	l2617
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;obstacle_avoidance.c: 531: {
  3041                           ;obstacle_avoidance.c: 532: for(int j=0; j<3; j++)
  3042                           
  3043                           ; BSR set to: 0
  3044                           
  3045                           ; BSR set to: 0
  3046  007A42  0E00               	movlw	0
  3047  007A44  0100               	movlb	0	; () banked
  3048  007A46  6FD8               	movwf	(obstacle_avoid_controller@j_840+1)& (0+255),b
  3049  007A48  0E00               	movlw	0
  3050  007A4A  0100               	movlb	0	; () banked
  3051  007A4C  6FD7               	movwf	obstacle_avoid_controller@j_840& (0+255),b
  3052  007A4E                     
  3053                           ; BSR set to: 0
  3054  007A4E  0100               	movlb	0	; () banked
  3055  007A50  51D8               	movf	(obstacle_avoid_controller@j_840+1)& (0+255),w,b
  3056  007A52  0A80               	xorlw	128
  3057  007A54  0F80               	addlw	-128
  3058  007A56  0E03               	movlw	3
  3059  007A58  B4D8               	btfsc	status,2,c
  3060  007A5A  5DD7               	subwf	obstacle_avoid_controller@j_840& (0+255),w,b
  3061  007A5C  B0D8               	btfsc	status,0,c
  3062  007A5E  D0DD               	goto	l2613
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;obstacle_avoidance.c: 533: {
  3066                           ;obstacle_avoidance.c: 534: for(int k=0; k<3; k++)
  3067                           
  3068                           ; BSR set to: 0
  3069                           
  3070                           ; BSR set to: 0
  3071  007A60  0E00               	movlw	0
  3072  007A62  0100               	movlb	0	; () banked
  3073  007A64  6FDA               	movwf	(obstacle_avoid_controller@k_841+1)& (0+255),b
  3074  007A66  0E00               	movlw	0
  3075  007A68  0100               	movlb	0	; () banked
  3076  007A6A  6FD9               	movwf	obstacle_avoid_controller@k_841& (0+255),b
  3077  007A6C                     
  3078                           ; BSR set to: 0
  3079  007A6C  0100               	movlb	0	; () banked
  3080  007A6E  51DA               	movf	(obstacle_avoid_controller@k_841+1)& (0+255),w,b
  3081  007A70  0A80               	xorlw	128
  3082  007A72  0F80               	addlw	-128
  3083  007A74  0E03               	movlw	3
  3084  007A76  B4D8               	btfsc	status,2,c
  3085  007A78  5DD9               	subwf	obstacle_avoid_controller@k_841& (0+255),w,b
  3086  007A7A  B0D8               	btfsc	status,0,c
  3087  007A7C  D0CA               	goto	l2609
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;obstacle_avoidance.c: 535: {
  3091                           ;obstacle_avoidance.c: 536: num=num+area_obstacle_avoid_lw[i][j][k] * obstacle_rule_lw[i
      +                          ][j][k];
  3092                           
  3093                           ; BSR set to: 0
  3094                           
  3095                           ; BSR set to: 0
  3096  007A7E  C0D5  F001         	movff	obstacle_avoid_controller@i_839,___wmul@multiplier
  3097  007A82  C0D6  F002         	movff	obstacle_avoid_controller@i_839+1,___wmul@multiplier+1
  3098  007A86  0E00               	movlw	0
  3099  007A88  6E04               	movwf	___wmul@multiplicand+1,c
  3100  007A8A  0E1B               	movlw	27
  3101  007A8C  6E03               	movwf	___wmul@multiplicand,c
  3102  007A8E  EC58  F02C         	call	___wmul	;wreg free
  3103  007A92  0EA2               	movlw	low _obstacle_rule_lw
  3104  007A94  6E45               	movwf	??_obstacle_avoid_controller& (0+255),c
  3105  007A96  0E01               	movlw	high _obstacle_rule_lw
  3106  007A98  6E46               	movwf	(??_obstacle_avoid_controller+1)& (0+255),c
  3107  007A9A  5001               	movf	?___wmul,w,c
  3108  007A9C  2645               	addwf	??_obstacle_avoid_controller,f,c
  3109  007A9E  5002               	movf	?___wmul+1,w,c
  3110  007AA0  2246               	addwfc	??_obstacle_avoid_controller+1,f,c
  3111  007AA2  C0D7  F001         	movff	obstacle_avoid_controller@j_840,___wmul@multiplier
  3112  007AA6  C0D8  F002         	movff	obstacle_avoid_controller@j_840+1,___wmul@multiplier+1
  3113  007AAA  0E00               	movlw	0
  3114  007AAC  6E04               	movwf	___wmul@multiplicand+1,c
  3115  007AAE  0E09               	movlw	9
  3116  007AB0  6E03               	movwf	___wmul@multiplicand,c
  3117  007AB2  EC58  F02C         	call	___wmul	;wreg free
  3118  007AB6  5001               	movf	?___wmul,w,c
  3119  007AB8  2645               	addwf	??_obstacle_avoid_controller,f,c
  3120  007ABA  5002               	movf	?___wmul+1,w,c
  3121  007ABC  2246               	addwfc	??_obstacle_avoid_controller+1,f,c
  3122  007ABE  C0D9  F001         	movff	obstacle_avoid_controller@k_841,___wmul@multiplier
  3123  007AC2  C0DA  F002         	movff	obstacle_avoid_controller@k_841+1,___wmul@multiplier+1
  3124  007AC6  0E00               	movlw	0
  3125  007AC8  6E04               	movwf	___wmul@multiplicand+1,c
  3126  007ACA  0E03               	movlw	3
  3127  007ACC  6E03               	movwf	___wmul@multiplicand,c
  3128  007ACE  EC58  F02C         	call	___wmul	;wreg free
  3129  007AD2  5001               	movf	?___wmul,w,c
  3130  007AD4  2445               	addwf	??_obstacle_avoid_controller,w,c
  3131  007AD6  6ED9               	movwf	fsr2l,c
  3132  007AD8  5002               	movf	?___wmul+1,w,c
  3133  007ADA  2046               	addwfc	??_obstacle_avoid_controller+1,w,c
  3134  007ADC  6EDA               	movwf	fsr2h,c
  3135  007ADE  CFDE F00F          	movff	postinc2,___ftmul@f2
  3136  007AE2  CFDE F010          	movff	postinc2,___ftmul@f2+1
  3137  007AE6  CFDD F011          	movff	postdec2,___ftmul@f2+2
  3138  007AEA  C0D5  F001         	movff	obstacle_avoid_controller@i_839,___wmul@multiplier
  3139  007AEE  C0D6  F002         	movff	obstacle_avoid_controller@i_839+1,___wmul@multiplier+1
  3140  007AF2  0E00               	movlw	0
  3141  007AF4  6E04               	movwf	___wmul@multiplicand+1,c
  3142  007AF6  0E1B               	movlw	27
  3143  007AF8  6E03               	movwf	___wmul@multiplicand,c
  3144  007AFA  EC58  F02C         	call	___wmul	;wreg free
  3145  007AFE  0E00               	movlw	low _area_obstacle_avoid_lw
  3146  007B00  6E47               	movwf	(??_obstacle_avoid_controller+2)& (0+255),c
  3147  007B02  0E01               	movlw	high _area_obstacle_avoid_lw
  3148  007B04  6E48               	movwf	(??_obstacle_avoid_controller+3)& (0+255),c
  3149  007B06  5001               	movf	?___wmul,w,c
  3150  007B08  2647               	addwf	??_obstacle_avoid_controller+2,f,c
  3151  007B0A  5002               	movf	?___wmul+1,w,c
  3152  007B0C  2248               	addwfc	??_obstacle_avoid_controller+3,f,c
  3153  007B0E  C0D7  F001         	movff	obstacle_avoid_controller@j_840,___wmul@multiplier
  3154  007B12  C0D8  F002         	movff	obstacle_avoid_controller@j_840+1,___wmul@multiplier+1
  3155  007B16  0E00               	movlw	0
  3156  007B18  6E04               	movwf	___wmul@multiplicand+1,c
  3157  007B1A  0E09               	movlw	9
  3158  007B1C  6E03               	movwf	___wmul@multiplicand,c
  3159  007B1E  EC58  F02C         	call	___wmul	;wreg free
  3160  007B22  5001               	movf	?___wmul,w,c
  3161  007B24  2647               	addwf	??_obstacle_avoid_controller+2,f,c
  3162  007B26  5002               	movf	?___wmul+1,w,c
  3163  007B28  2248               	addwfc	??_obstacle_avoid_controller+3,f,c
  3164  007B2A  C0D9  F001         	movff	obstacle_avoid_controller@k_841,___wmul@multiplier
  3165  007B2E  C0DA  F002         	movff	obstacle_avoid_controller@k_841+1,___wmul@multiplier+1
  3166  007B32  0E00               	movlw	0
  3167  007B34  6E04               	movwf	___wmul@multiplicand+1,c
  3168  007B36  0E03               	movlw	3
  3169  007B38  6E03               	movwf	___wmul@multiplicand,c
  3170  007B3A  EC58  F02C         	call	___wmul	;wreg free
  3171  007B3E  5001               	movf	?___wmul,w,c
  3172  007B40  2447               	addwf	??_obstacle_avoid_controller+2,w,c
  3173  007B42  6ED9               	movwf	fsr2l,c
  3174  007B44  5002               	movf	?___wmul+1,w,c
  3175  007B46  2048               	addwfc	??_obstacle_avoid_controller+3,w,c
  3176  007B48  6EDA               	movwf	fsr2h,c
  3177  007B4A  CFDE F00C          	movff	postinc2,___ftmul@f1
  3178  007B4E  CFDE F00D          	movff	postinc2,___ftmul@f1+1
  3179  007B52  CFDD F00E          	movff	postdec2,___ftmul@f1+2
  3180  007B56  EC41  F031         	call	___ftmul	;wreg free
  3181  007B5A  C00C  F02D         	movff	?___ftmul,___ftadd@f1
  3182  007B5E  C00D  F02E         	movff	?___ftmul+1,___ftadd@f1+1
  3183  007B62  C00E  F02F         	movff	?___ftmul+2,___ftadd@f1+2
  3184  007B66  C0CF  F030         	movff	obstacle_avoid_controller@num,___ftadd@f2
  3185  007B6A  C0D0  F031         	movff	obstacle_avoid_controller@num+1,___ftadd@f2+1
  3186  007B6E  C0D1  F032         	movff	obstacle_avoid_controller@num+2,___ftadd@f2+2
  3187  007B72  EC08  F036         	call	___ftadd	;wreg free
  3188  007B76  C02D  F0CF         	movff	?___ftadd,obstacle_avoid_controller@num
  3189  007B7A  C02E  F0D0         	movff	?___ftadd+1,obstacle_avoid_controller@num+1
  3190  007B7E  C02F  F0D1         	movff	?___ftadd+2,obstacle_avoid_controller@num+2
  3191                           
  3192                           ;obstacle_avoidance.c: 537: den=den+area_obstacle_avoid_lw[i][j][k];
  3193  007B82  C0D5  F001         	movff	obstacle_avoid_controller@i_839,___wmul@multiplier
  3194  007B86  C0D6  F002         	movff	obstacle_avoid_controller@i_839+1,___wmul@multiplier+1
  3195  007B8A  0E00               	movlw	0
  3196  007B8C  6E04               	movwf	___wmul@multiplicand+1,c
  3197  007B8E  0E1B               	movlw	27
  3198  007B90  6E03               	movwf	___wmul@multiplicand,c
  3199  007B92  EC58  F02C         	call	___wmul	;wreg free
  3200  007B96  0E00               	movlw	low _area_obstacle_avoid_lw
  3201  007B98  6E45               	movwf	??_obstacle_avoid_controller& (0+255),c
  3202  007B9A  0E01               	movlw	high _area_obstacle_avoid_lw
  3203  007B9C  6E46               	movwf	(??_obstacle_avoid_controller+1)& (0+255),c
  3204  007B9E  5001               	movf	?___wmul,w,c
  3205  007BA0  2645               	addwf	??_obstacle_avoid_controller,f,c
  3206  007BA2  5002               	movf	?___wmul+1,w,c
  3207  007BA4  2246               	addwfc	??_obstacle_avoid_controller+1,f,c
  3208  007BA6  C0D7  F001         	movff	obstacle_avoid_controller@j_840,___wmul@multiplier
  3209  007BAA  C0D8  F002         	movff	obstacle_avoid_controller@j_840+1,___wmul@multiplier+1
  3210  007BAE  0E00               	movlw	0
  3211  007BB0  6E04               	movwf	___wmul@multiplicand+1,c
  3212  007BB2  0E09               	movlw	9
  3213  007BB4  6E03               	movwf	___wmul@multiplicand,c
  3214  007BB6  EC58  F02C         	call	___wmul	;wreg free
  3215  007BBA  5001               	movf	?___wmul,w,c
  3216  007BBC  2645               	addwf	??_obstacle_avoid_controller,f,c
  3217  007BBE  5002               	movf	?___wmul+1,w,c
  3218  007BC0  2246               	addwfc	??_obstacle_avoid_controller+1,f,c
  3219  007BC2  C0D9  F001         	movff	obstacle_avoid_controller@k_841,___wmul@multiplier
  3220  007BC6  C0DA  F002         	movff	obstacle_avoid_controller@k_841+1,___wmul@multiplier+1
  3221  007BCA  0E00               	movlw	0
  3222  007BCC  6E04               	movwf	___wmul@multiplicand+1,c
  3223  007BCE  0E03               	movlw	3
  3224  007BD0  6E03               	movwf	___wmul@multiplicand,c
  3225  007BD2  EC58  F02C         	call	___wmul	;wreg free
  3226  007BD6  5001               	movf	?___wmul,w,c
  3227  007BD8  2445               	addwf	??_obstacle_avoid_controller,w,c
  3228  007BDA  6ED9               	movwf	fsr2l,c
  3229  007BDC  5002               	movf	?___wmul+1,w,c
  3230  007BDE  2046               	addwfc	??_obstacle_avoid_controller+1,w,c
  3231  007BE0  6EDA               	movwf	fsr2h,c
  3232  007BE2  CFDE F02D          	movff	postinc2,___ftadd@f1
  3233  007BE6  CFDE F02E          	movff	postinc2,___ftadd@f1+1
  3234  007BEA  CFDD F02F          	movff	postdec2,___ftadd@f1+2
  3235  007BEE  C0D2  F030         	movff	obstacle_avoid_controller@den,___ftadd@f2
  3236  007BF2  C0D3  F031         	movff	obstacle_avoid_controller@den+1,___ftadd@f2+1
  3237  007BF6  C0D4  F032         	movff	obstacle_avoid_controller@den+2,___ftadd@f2+2
  3238  007BFA  EC08  F036         	call	___ftadd	;wreg free
  3239  007BFE  C02D  F0D2         	movff	?___ftadd,obstacle_avoid_controller@den
  3240  007C02  C02E  F0D3         	movff	?___ftadd+1,obstacle_avoid_controller@den+1
  3241  007C06  C02F  F0D4         	movff	?___ftadd+2,obstacle_avoid_controller@den+2
  3242  007C0A  0100               	movlb	0	; () banked
  3243  007C0C  4BD9               	infsnz	obstacle_avoid_controller@k_841& (0+255),f,b
  3244  007C0E  2BDA               	incf	(obstacle_avoid_controller@k_841+1)& (0+255),f,b
  3245  007C10  D72D               	goto	L7
  3246  007C12                     l2609:
  3247                           
  3248                           ; BSR set to: 0
  3249  007C12  0100               	movlb	0	; () banked
  3250  007C14  4BD7               	infsnz	obstacle_avoid_controller@j_840& (0+255),f,b
  3251  007C16  2BD8               	incf	(obstacle_avoid_controller@j_840+1)& (0+255),f,b
  3252  007C18  D71A               	goto	L8
  3253  007C1A                     l2613:
  3254                           
  3255                           ; BSR set to: 0
  3256  007C1A  0100               	movlb	0	; () banked
  3257  007C1C  4BD5               	infsnz	obstacle_avoid_controller@i_839& (0+255),f,b
  3258  007C1E  2BD6               	incf	(obstacle_avoid_controller@i_839+1)& (0+255),f,b
  3259  007C20  D707               	goto	L9
  3260  007C22                     l2617:
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;obstacle_avoidance.c: 538: }
  3264                           ;obstacle_avoidance.c: 539: }
  3265                           ;obstacle_avoidance.c: 540: }
  3266                           ;obstacle_avoidance.c: 542: lw_vel_obs=num/den;
  3267  007C22  C0CF  F01B         	movff	obstacle_avoid_controller@num,___ftdiv@f1
  3268  007C26  C0D0  F01C         	movff	obstacle_avoid_controller@num+1,___ftdiv@f1+1
  3269  007C2A  C0D1  F01D         	movff	obstacle_avoid_controller@num+2,___ftdiv@f1+2
  3270  007C2E  C0D2  F01E         	movff	obstacle_avoid_controller@den,___ftdiv@f2
  3271  007C32  C0D3  F01F         	movff	obstacle_avoid_controller@den+1,___ftdiv@f2+1
  3272  007C36  C0D4  F020         	movff	obstacle_avoid_controller@den+2,___ftdiv@f2+2
  3273  007C3A  ECD6  F030         	call	___ftdiv	;wreg free
  3274  007C3E  C01B  F07B         	movff	?___ftdiv,_lw_vel_obs
  3275  007C42  C01C  F07C         	movff	?___ftdiv+1,_lw_vel_obs+1
  3276  007C46  C01D  F07D         	movff	?___ftdiv+2,_lw_vel_obs+2
  3277                           
  3278                           ;obstacle_avoidance.c: 543: int temp=lw_vel_obs;
  3279  007C4A  C07B  F001         	movff	_lw_vel_obs,___fttol@f1
  3280  007C4E  C07C  F002         	movff	_lw_vel_obs+1,___fttol@f1+1
  3281  007C52  C07D  F003         	movff	_lw_vel_obs+2,___fttol@f1+2
  3282  007C56  EC6C  F030         	call	___fttol	;wreg free
  3283  007C5A  C001  F045         	movff	?___fttol,??_obstacle_avoid_controller
  3284  007C5E  C002  F046         	movff	?___fttol+1,??_obstacle_avoid_controller+1
  3285  007C62  C003  F047         	movff	?___fttol+2,??_obstacle_avoid_controller+2
  3286  007C66  C004  F048         	movff	?___fttol+3,??_obstacle_avoid_controller+3
  3287  007C6A  C045  F0BF         	movff	??_obstacle_avoid_controller,obstacle_avoid_controller@temp
  3288  007C6E  C046  F0C0         	movff	??_obstacle_avoid_controller+1,obstacle_avoid_controller@temp+1
  3289                           
  3290                           ;obstacle_avoidance.c: 544: float temp1=lw_vel_obs-temp;
  3291  007C72  C0BF  F009         	movff	obstacle_avoid_controller@temp,___awtoft@c
  3292  007C76  C0C0  F00A         	movff	obstacle_avoid_controller@temp+1,___awtoft@c+1
  3293  007C7A  EC04  F02D         	call	___awtoft	;wreg free
  3294  007C7E  C009  F02A         	movff	?___awtoft,___ftneg@f1
  3295  007C82  C00A  F02B         	movff	?___awtoft+1,___ftneg@f1+1
  3296  007C86  C00B  F02C         	movff	?___awtoft+2,___ftneg@f1+2
  3297  007C8A  EC45  F02C         	call	___ftneg	;wreg free
  3298  007C8E  C02A  F02D         	movff	?___ftneg,___ftadd@f1
  3299  007C92  C02B  F02E         	movff	?___ftneg+1,___ftadd@f1+1
  3300  007C96  C02C  F02F         	movff	?___ftneg+2,___ftadd@f1+2
  3301  007C9A  C07B  F030         	movff	_lw_vel_obs,___ftadd@f2
  3302  007C9E  C07C  F031         	movff	_lw_vel_obs+1,___ftadd@f2+1
  3303  007CA2  C07D  F032         	movff	_lw_vel_obs+2,___ftadd@f2+2
  3304  007CA6  EC08  F036         	call	___ftadd	;wreg free
  3305  007CAA  C02D  F0B6         	movff	?___ftadd,obstacle_avoid_controller@temp1
  3306  007CAE  C02E  F0B7         	movff	?___ftadd+1,obstacle_avoid_controller@temp1+1
  3307  007CB2  C02F  F0B8         	movff	?___ftadd+2,obstacle_avoid_controller@temp1+2
  3308                           
  3309                           ;obstacle_avoidance.c: 545: if ( temp1>=0.5)
  3310  007CB6  C0B6  F001         	movff	obstacle_avoid_controller@temp1,___ftge@ff1
  3311  007CBA  C0B7  F002         	movff	obstacle_avoid_controller@temp1+1,___ftge@ff1+1
  3312  007CBE  C0B8  F003         	movff	obstacle_avoid_controller@temp1+2,___ftge@ff1+2
  3313  007CC2  0E00               	movlw	0
  3314  007CC4  6E04               	movwf	___ftge@ff2,c
  3315  007CC6  0E00               	movlw	0
  3316  007CC8  6E05               	movwf	___ftge@ff2+1,c
  3317  007CCA  0E3F               	movlw	63
  3318  007CCC  6E06               	movwf	___ftge@ff2+2,c
  3319  007CCE  ECE2  F02E         	call	___ftge	;wreg free
  3320  007CD2  A0D8               	btfss	status,0,c
  3321  007CD4  D010               	goto	l2625
  3322                           
  3323                           ;obstacle_avoidance.c: 546: lw_vel_obs=temp+1;
  3324  007CD6  0E01               	movlw	1
  3325  007CD8  0100               	movlb	0	; () banked
  3326  007CDA  25BF               	addwf	obstacle_avoid_controller@temp& (0+255),w,b
  3327  007CDC  6E09               	movwf	___awtoft@c,c
  3328  007CDE  0E00               	movlw	0
  3329  007CE0  0100               	movlb	0	; () banked
  3330  007CE2  21C0               	addwfc	(obstacle_avoid_controller@temp+1)& (0+255),w,b
  3331  007CE4  6E0A               	movwf	___awtoft@c+1,c
  3332  007CE6  EC04  F02D         	call	___awtoft	;wreg free
  3333  007CEA  C009  F07B         	movff	?___awtoft,_lw_vel_obs
  3334  007CEE  C00A  F07C         	movff	?___awtoft+1,_lw_vel_obs+1
  3335  007CF2  C00B  F07D         	movff	?___awtoft+2,_lw_vel_obs+2
  3336  007CF6                     l2625:
  3337                           
  3338                           ;obstacle_avoidance.c: 549: num=0;
  3339  007CF6  0E00               	movlw	0
  3340  007CF8  0100               	movlb	0	; () banked
  3341  007CFA  6FCF               	movwf	obstacle_avoid_controller@num& (0+255),b
  3342  007CFC  0E00               	movlw	0
  3343  007CFE  0100               	movlb	0	; () banked
  3344  007D00  6FD0               	movwf	(obstacle_avoid_controller@num+1)& (0+255),b
  3345  007D02  0E00               	movlw	0
  3346  007D04  0100               	movlb	0	; () banked
  3347  007D06  6FD1               	movwf	(obstacle_avoid_controller@num+2)& (0+255),b
  3348                           
  3349                           ; BSR set to: 0
  3350                           ;obstacle_avoidance.c: 550: den=0.0001;
  3351  007D08  0EB7               	movlw	183
  3352  007D0A  0100               	movlb	0	; () banked
  3353  007D0C  6FD2               	movwf	obstacle_avoid_controller@den& (0+255),b
  3354  007D0E  0ED1               	movlw	209
  3355  007D10  0100               	movlb	0	; () banked
  3356  007D12  6FD3               	movwf	(obstacle_avoid_controller@den+1)& (0+255),b
  3357  007D14  0E38               	movlw	56
  3358  007D16  0100               	movlb	0	; () banked
  3359  007D18  6FD4               	movwf	(obstacle_avoid_controller@den+2)& (0+255),b
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;obstacle_avoidance.c: 551: premise_temp=0;
  3363  007D1A  0E00               	movlw	0
  3364  007D1C  0100               	movlb	0	; () banked
  3365  007D1E  6FBC               	movwf	obstacle_avoid_controller@premise_temp& (0+255),b
  3366  007D20  0E00               	movlw	0
  3367  007D22  0100               	movlb	0	; () banked
  3368  007D24  6FBD               	movwf	(obstacle_avoid_controller@premise_temp+1)& (0+255),b
  3369  007D26  0E00               	movlw	0
  3370  007D28  0100               	movlb	0	; () banked
  3371  007D2A  6FBE               	movwf	(obstacle_avoid_controller@premise_temp+2)& (0+255),b
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;obstacle_avoidance.c: 555: for(int i=0; i<3; i++)
  3375  007D2C  0E00               	movlw	0
  3376  007D2E  0100               	movlb	0	; () banked
  3377  007D30  6FDC               	movwf	(obstacle_avoid_controller@i_844+1)& (0+255),b
  3378  007D32  0E00               	movlw	0
  3379  007D34  0100               	movlb	0	; () banked
  3380  007D36  6FDB               	movwf	obstacle_avoid_controller@i_844& (0+255),b
  3381  007D38                     
  3382                           ; BSR set to: 0
  3383  007D38  0100               	movlb	0	; () banked
  3384  007D3A  51DC               	movf	(obstacle_avoid_controller@i_844+1)& (0+255),w,b
  3385  007D3C  0A80               	xorlw	128
  3386  007D3E  0F80               	addlw	-128
  3387  007D40  0E03               	movlw	3
  3388  007D42  B4D8               	btfsc	status,2,c
  3389  007D44  5DDB               	subwf	obstacle_avoid_controller@i_844& (0+255),w,b
  3390  007D46  B0D8               	btfsc	status,0,c
  3391  007D48  D0F0               	goto	l2663
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;obstacle_avoidance.c: 556: {
  3395                           ;obstacle_avoidance.c: 557: for(int j=0; j<3; j++)
  3396                           
  3397                           ; BSR set to: 0
  3398                           
  3399                           ; BSR set to: 0
  3400  007D4A  0E00               	movlw	0
  3401  007D4C  0100               	movlb	0	; () banked
  3402  007D4E  6FDE               	movwf	(obstacle_avoid_controller@j_845+1)& (0+255),b
  3403  007D50  0E00               	movlw	0
  3404  007D52  0100               	movlb	0	; () banked
  3405  007D54  6FDD               	movwf	obstacle_avoid_controller@j_845& (0+255),b
  3406  007D56                     
  3407                           ; BSR set to: 0
  3408  007D56  0100               	movlb	0	; () banked
  3409  007D58  51DE               	movf	(obstacle_avoid_controller@j_845+1)& (0+255),w,b
  3410  007D5A  0A80               	xorlw	128
  3411  007D5C  0F80               	addlw	-128
  3412  007D5E  0E03               	movlw	3
  3413  007D60  B4D8               	btfsc	status,2,c
  3414  007D62  5DDD               	subwf	obstacle_avoid_controller@j_845& (0+255),w,b
  3415  007D64  B0D8               	btfsc	status,0,c
  3416  007D66  D0DD               	goto	l2659
  3417                           
  3418                           ; BSR set to: 0
  3419                           ;obstacle_avoidance.c: 558: {
  3420                           ;obstacle_avoidance.c: 559: for(int k=0; k<3; k++)
  3421                           
  3422                           ; BSR set to: 0
  3423                           
  3424                           ; BSR set to: 0
  3425  007D68  0E00               	movlw	0
  3426  007D6A  0100               	movlb	0	; () banked
  3427  007D6C  6FE0               	movwf	(obstacle_avoid_controller@k_846+1)& (0+255),b
  3428  007D6E  0E00               	movlw	0
  3429  007D70  0100               	movlb	0	; () banked
  3430  007D72  6FDF               	movwf	obstacle_avoid_controller@k_846& (0+255),b
  3431  007D74                     
  3432                           ; BSR set to: 0
  3433  007D74  0100               	movlb	0	; () banked
  3434  007D76  51E0               	movf	(obstacle_avoid_controller@k_846+1)& (0+255),w,b
  3435  007D78  0A80               	xorlw	128
  3436  007D7A  0F80               	addlw	-128
  3437  007D7C  0E03               	movlw	3
  3438  007D7E  B4D8               	btfsc	status,2,c
  3439  007D80  5DDF               	subwf	obstacle_avoid_controller@k_846& (0+255),w,b
  3440  007D82  B0D8               	btfsc	status,0,c
  3441  007D84  D0CA               	goto	l2655
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;obstacle_avoidance.c: 560: {
  3445                           ;obstacle_avoidance.c: 561: num=num+area_obstacle_avoid_lw[i][j][k] * obstacle_rule_rw[i
      +                          ][j][k];
  3446                           
  3447                           ; BSR set to: 0
  3448                           
  3449                           ; BSR set to: 0
  3450  007D86  C0DB  F001         	movff	obstacle_avoid_controller@i_844,___wmul@multiplier
  3451  007D8A  C0DC  F002         	movff	obstacle_avoid_controller@i_844+1,___wmul@multiplier+1
  3452  007D8E  0E00               	movlw	0
  3453  007D90  6E04               	movwf	___wmul@multiplicand+1,c
  3454  007D92  0E1B               	movlw	27
  3455  007D94  6E03               	movwf	___wmul@multiplicand,c
  3456  007D96  EC58  F02C         	call	___wmul	;wreg free
  3457  007D9A  0E00               	movlw	low _obstacle_rule_rw
  3458  007D9C  6E45               	movwf	??_obstacle_avoid_controller& (0+255),c
  3459  007D9E  0E02               	movlw	high _obstacle_rule_rw
  3460  007DA0  6E46               	movwf	(??_obstacle_avoid_controller+1)& (0+255),c
  3461  007DA2  5001               	movf	?___wmul,w,c
  3462  007DA4  2645               	addwf	??_obstacle_avoid_controller,f,c
  3463  007DA6  5002               	movf	?___wmul+1,w,c
  3464  007DA8  2246               	addwfc	??_obstacle_avoid_controller+1,f,c
  3465  007DAA  C0DD  F001         	movff	obstacle_avoid_controller@j_845,___wmul@multiplier
  3466  007DAE  C0DE  F002         	movff	obstacle_avoid_controller@j_845+1,___wmul@multiplier+1
  3467  007DB2  0E00               	movlw	0
  3468  007DB4  6E04               	movwf	___wmul@multiplicand+1,c
  3469  007DB6  0E09               	movlw	9
  3470  007DB8  6E03               	movwf	___wmul@multiplicand,c
  3471  007DBA  EC58  F02C         	call	___wmul	;wreg free
  3472  007DBE  5001               	movf	?___wmul,w,c
  3473  007DC0  2645               	addwf	??_obstacle_avoid_controller,f,c
  3474  007DC2  5002               	movf	?___wmul+1,w,c
  3475  007DC4  2246               	addwfc	??_obstacle_avoid_controller+1,f,c
  3476  007DC6  C0DF  F001         	movff	obstacle_avoid_controller@k_846,___wmul@multiplier
  3477  007DCA  C0E0  F002         	movff	obstacle_avoid_controller@k_846+1,___wmul@multiplier+1
  3478  007DCE  0E00               	movlw	0
  3479  007DD0  6E04               	movwf	___wmul@multiplicand+1,c
  3480  007DD2  0E03               	movlw	3
  3481  007DD4  6E03               	movwf	___wmul@multiplicand,c
  3482  007DD6  EC58  F02C         	call	___wmul	;wreg free
  3483  007DDA  5001               	movf	?___wmul,w,c
  3484  007DDC  2445               	addwf	??_obstacle_avoid_controller,w,c
  3485  007DDE  6ED9               	movwf	fsr2l,c
  3486  007DE0  5002               	movf	?___wmul+1,w,c
  3487  007DE2  2046               	addwfc	??_obstacle_avoid_controller+1,w,c
  3488  007DE4  6EDA               	movwf	fsr2h,c
  3489  007DE6  CFDE F00F          	movff	postinc2,___ftmul@f2
  3490  007DEA  CFDE F010          	movff	postinc2,___ftmul@f2+1
  3491  007DEE  CFDD F011          	movff	postdec2,___ftmul@f2+2
  3492  007DF2  C0DB  F001         	movff	obstacle_avoid_controller@i_844,___wmul@multiplier
  3493  007DF6  C0DC  F002         	movff	obstacle_avoid_controller@i_844+1,___wmul@multiplier+1
  3494  007DFA  0E00               	movlw	0
  3495  007DFC  6E04               	movwf	___wmul@multiplicand+1,c
  3496  007DFE  0E1B               	movlw	27
  3497  007E00  6E03               	movwf	___wmul@multiplicand,c
  3498  007E02  EC58  F02C         	call	___wmul	;wreg free
  3499  007E06  0E00               	movlw	low _area_obstacle_avoid_lw
  3500  007E08  6E47               	movwf	(??_obstacle_avoid_controller+2)& (0+255),c
  3501  007E0A  0E01               	movlw	high _area_obstacle_avoid_lw
  3502  007E0C  6E48               	movwf	(??_obstacle_avoid_controller+3)& (0+255),c
  3503  007E0E  5001               	movf	?___wmul,w,c
  3504  007E10  2647               	addwf	??_obstacle_avoid_controller+2,f,c
  3505  007E12  5002               	movf	?___wmul+1,w,c
  3506  007E14  2248               	addwfc	??_obstacle_avoid_controller+3,f,c
  3507  007E16  C0DD  F001         	movff	obstacle_avoid_controller@j_845,___wmul@multiplier
  3508  007E1A  C0DE  F002         	movff	obstacle_avoid_controller@j_845+1,___wmul@multiplier+1
  3509  007E1E  0E00               	movlw	0
  3510  007E20  6E04               	movwf	___wmul@multiplicand+1,c
  3511  007E22  0E09               	movlw	9
  3512  007E24  6E03               	movwf	___wmul@multiplicand,c
  3513  007E26  EC58  F02C         	call	___wmul	;wreg free
  3514  007E2A  5001               	movf	?___wmul,w,c
  3515  007E2C  2647               	addwf	??_obstacle_avoid_controller+2,f,c
  3516  007E2E  5002               	movf	?___wmul+1,w,c
  3517  007E30  2248               	addwfc	??_obstacle_avoid_controller+3,f,c
  3518  007E32  C0DF  F001         	movff	obstacle_avoid_controller@k_846,___wmul@multiplier
  3519  007E36  C0E0  F002         	movff	obstacle_avoid_controller@k_846+1,___wmul@multiplier+1
  3520  007E3A  0E00               	movlw	0
  3521  007E3C  6E04               	movwf	___wmul@multiplicand+1,c
  3522  007E3E  0E03               	movlw	3
  3523  007E40  6E03               	movwf	___wmul@multiplicand,c
  3524  007E42  EC58  F02C         	call	___wmul	;wreg free
  3525  007E46  5001               	movf	?___wmul,w,c
  3526  007E48  2447               	addwf	??_obstacle_avoid_controller+2,w,c
  3527  007E4A  6ED9               	movwf	fsr2l,c
  3528  007E4C  5002               	movf	?___wmul+1,w,c
  3529  007E4E  2048               	addwfc	??_obstacle_avoid_controller+3,w,c
  3530  007E50  6EDA               	movwf	fsr2h,c
  3531  007E52  CFDE F00C          	movff	postinc2,___ftmul@f1
  3532  007E56  CFDE F00D          	movff	postinc2,___ftmul@f1+1
  3533  007E5A  CFDD F00E          	movff	postdec2,___ftmul@f1+2
  3534  007E5E  EC41  F031         	call	___ftmul	;wreg free
  3535  007E62  C00C  F02D         	movff	?___ftmul,___ftadd@f1
  3536  007E66  C00D  F02E         	movff	?___ftmul+1,___ftadd@f1+1
  3537  007E6A  C00E  F02F         	movff	?___ftmul+2,___ftadd@f1+2
  3538  007E6E  C0CF  F030         	movff	obstacle_avoid_controller@num,___ftadd@f2
  3539  007E72  C0D0  F031         	movff	obstacle_avoid_controller@num+1,___ftadd@f2+1
  3540  007E76  C0D1  F032         	movff	obstacle_avoid_controller@num+2,___ftadd@f2+2
  3541  007E7A  EC08  F036         	call	___ftadd	;wreg free
  3542  007E7E  C02D  F0CF         	movff	?___ftadd,obstacle_avoid_controller@num
  3543  007E82  C02E  F0D0         	movff	?___ftadd+1,obstacle_avoid_controller@num+1
  3544  007E86  C02F  F0D1         	movff	?___ftadd+2,obstacle_avoid_controller@num+2
  3545                           
  3546                           ;obstacle_avoidance.c: 562: den=den+area_obstacle_avoid_lw[i][j][k];
  3547  007E8A  C0DB  F001         	movff	obstacle_avoid_controller@i_844,___wmul@multiplier
  3548  007E8E  C0DC  F002         	movff	obstacle_avoid_controller@i_844+1,___wmul@multiplier+1
  3549  007E92  0E00               	movlw	0
  3550  007E94  6E04               	movwf	___wmul@multiplicand+1,c
  3551  007E96  0E1B               	movlw	27
  3552  007E98  6E03               	movwf	___wmul@multiplicand,c
  3553  007E9A  EC58  F02C         	call	___wmul	;wreg free
  3554  007E9E  0E00               	movlw	low _area_obstacle_avoid_lw
  3555  007EA0  6E45               	movwf	??_obstacle_avoid_controller& (0+255),c
  3556  007EA2  0E01               	movlw	high _area_obstacle_avoid_lw
  3557  007EA4  6E46               	movwf	(??_obstacle_avoid_controller+1)& (0+255),c
  3558  007EA6  5001               	movf	?___wmul,w,c
  3559  007EA8  2645               	addwf	??_obstacle_avoid_controller,f,c
  3560  007EAA  5002               	movf	?___wmul+1,w,c
  3561  007EAC  2246               	addwfc	??_obstacle_avoid_controller+1,f,c
  3562  007EAE  C0DD  F001         	movff	obstacle_avoid_controller@j_845,___wmul@multiplier
  3563  007EB2  C0DE  F002         	movff	obstacle_avoid_controller@j_845+1,___wmul@multiplier+1
  3564  007EB6  0E00               	movlw	0
  3565  007EB8  6E04               	movwf	___wmul@multiplicand+1,c
  3566  007EBA  0E09               	movlw	9
  3567  007EBC  6E03               	movwf	___wmul@multiplicand,c
  3568  007EBE  EC58  F02C         	call	___wmul	;wreg free
  3569  007EC2  5001               	movf	?___wmul,w,c
  3570  007EC4  2645               	addwf	??_obstacle_avoid_controller,f,c
  3571  007EC6  5002               	movf	?___wmul+1,w,c
  3572  007EC8  2246               	addwfc	??_obstacle_avoid_controller+1,f,c
  3573  007ECA  C0DF  F001         	movff	obstacle_avoid_controller@k_846,___wmul@multiplier
  3574  007ECE  C0E0  F002         	movff	obstacle_avoid_controller@k_846+1,___wmul@multiplier+1
  3575  007ED2  0E00               	movlw	0
  3576  007ED4  6E04               	movwf	___wmul@multiplicand+1,c
  3577  007ED6  0E03               	movlw	3
  3578  007ED8  6E03               	movwf	___wmul@multiplicand,c
  3579  007EDA  EC58  F02C         	call	___wmul	;wreg free
  3580  007EDE  5001               	movf	?___wmul,w,c
  3581  007EE0  2445               	addwf	??_obstacle_avoid_controller,w,c
  3582  007EE2  6ED9               	movwf	fsr2l,c
  3583  007EE4  5002               	movf	?___wmul+1,w,c
  3584  007EE6  2046               	addwfc	??_obstacle_avoid_controller+1,w,c
  3585  007EE8  6EDA               	movwf	fsr2h,c
  3586  007EEA  CFDE F02D          	movff	postinc2,___ftadd@f1
  3587  007EEE  CFDE F02E          	movff	postinc2,___ftadd@f1+1
  3588  007EF2  CFDD F02F          	movff	postdec2,___ftadd@f1+2
  3589  007EF6  C0D2  F030         	movff	obstacle_avoid_controller@den,___ftadd@f2
  3590  007EFA  C0D3  F031         	movff	obstacle_avoid_controller@den+1,___ftadd@f2+1
  3591  007EFE  C0D4  F032         	movff	obstacle_avoid_controller@den+2,___ftadd@f2+2
  3592  007F02  EC08  F036         	call	___ftadd	;wreg free
  3593  007F06  C02D  F0D2         	movff	?___ftadd,obstacle_avoid_controller@den
  3594  007F0A  C02E  F0D3         	movff	?___ftadd+1,obstacle_avoid_controller@den+1
  3595  007F0E  C02F  F0D4         	movff	?___ftadd+2,obstacle_avoid_controller@den+2
  3596  007F12  0100               	movlb	0	; () banked
  3597  007F14  4BDF               	infsnz	obstacle_avoid_controller@k_846& (0+255),f,b
  3598  007F16  2BE0               	incf	(obstacle_avoid_controller@k_846+1)& (0+255),f,b
  3599  007F18  D72D               	goto	L10
  3600  007F1A                     l2655:
  3601                           
  3602                           ; BSR set to: 0
  3603  007F1A  0100               	movlb	0	; () banked
  3604  007F1C  4BDD               	infsnz	obstacle_avoid_controller@j_845& (0+255),f,b
  3605  007F1E  2BDE               	incf	(obstacle_avoid_controller@j_845+1)& (0+255),f,b
  3606  007F20  D71A               	goto	L11
  3607  007F22                     l2659:
  3608                           
  3609                           ; BSR set to: 0
  3610  007F22  0100               	movlb	0	; () banked
  3611  007F24  4BDB               	infsnz	obstacle_avoid_controller@i_844& (0+255),f,b
  3612  007F26  2BDC               	incf	(obstacle_avoid_controller@i_844+1)& (0+255),f,b
  3613  007F28  D707               	goto	L12
  3614  007F2A                     l2663:
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;obstacle_avoidance.c: 563: }
  3618                           ;obstacle_avoidance.c: 564: }
  3619                           ;obstacle_avoidance.c: 565: }
  3620                           ;obstacle_avoidance.c: 567: rw_vel_obs=num/den;
  3621  007F2A  C0CF  F01B         	movff	obstacle_avoid_controller@num,___ftdiv@f1
  3622  007F2E  C0D0  F01C         	movff	obstacle_avoid_controller@num+1,___ftdiv@f1+1
  3623  007F32  C0D1  F01D         	movff	obstacle_avoid_controller@num+2,___ftdiv@f1+2
  3624  007F36  C0D2  F01E         	movff	obstacle_avoid_controller@den,___ftdiv@f2
  3625  007F3A  C0D3  F01F         	movff	obstacle_avoid_controller@den+1,___ftdiv@f2+1
  3626  007F3E  C0D4  F020         	movff	obstacle_avoid_controller@den+2,___ftdiv@f2+2
  3627  007F42  ECD6  F030         	call	___ftdiv	;wreg free
  3628  007F46  C01B  F07E         	movff	?___ftdiv,_rw_vel_obs
  3629  007F4A  C01C  F07F         	movff	?___ftdiv+1,_rw_vel_obs+1
  3630  007F4E  C01D  F080         	movff	?___ftdiv+2,_rw_vel_obs+2
  3631                           
  3632                           ;obstacle_avoidance.c: 568: int temp2=rw_vel_obs;
  3633  007F52  C07E  F001         	movff	_rw_vel_obs,___fttol@f1
  3634  007F56  C07F  F002         	movff	_rw_vel_obs+1,___fttol@f1+1
  3635  007F5A  C080  F003         	movff	_rw_vel_obs+2,___fttol@f1+2
  3636  007F5E  EC6C  F030         	call	___fttol	;wreg free
  3637  007F62  C001  F045         	movff	?___fttol,??_obstacle_avoid_controller
  3638  007F66  C002  F046         	movff	?___fttol+1,??_obstacle_avoid_controller+1
  3639  007F6A  C003  F047         	movff	?___fttol+2,??_obstacle_avoid_controller+2
  3640  007F6E  C004  F048         	movff	?___fttol+3,??_obstacle_avoid_controller+3
  3641  007F72  C045  F0C1         	movff	??_obstacle_avoid_controller,obstacle_avoid_controller@temp2
  3642  007F76  C046  F0C2         	movff	??_obstacle_avoid_controller+1,obstacle_avoid_controller@temp2+1
  3643                           
  3644                           ;obstacle_avoidance.c: 569: float temp3=rw_vel_obs-temp2;
  3645  007F7A  C0C1  F009         	movff	obstacle_avoid_controller@temp2,___awtoft@c
  3646  007F7E  C0C2  F00A         	movff	obstacle_avoid_controller@temp2+1,___awtoft@c+1
  3647  007F82  EC04  F02D         	call	___awtoft	;wreg free
  3648  007F86  C009  F02A         	movff	?___awtoft,___ftneg@f1
  3649  007F8A  C00A  F02B         	movff	?___awtoft+1,___ftneg@f1+1
  3650  007F8E  C00B  F02C         	movff	?___awtoft+2,___ftneg@f1+2
  3651  007F92  EC45  F02C         	call	___ftneg	;wreg free
  3652  007F96  C02A  F02D         	movff	?___ftneg,___ftadd@f1
  3653  007F9A  C02B  F02E         	movff	?___ftneg+1,___ftadd@f1+1
  3654  007F9E  C02C  F02F         	movff	?___ftneg+2,___ftadd@f1+2
  3655  007FA2  C07E  F030         	movff	_rw_vel_obs,___ftadd@f2
  3656  007FA6  C07F  F031         	movff	_rw_vel_obs+1,___ftadd@f2+1
  3657  007FAA  C080  F032         	movff	_rw_vel_obs+2,___ftadd@f2+2
  3658  007FAE  EC08  F036         	call	___ftadd	;wreg free
  3659  007FB2  C02D  F0B9         	movff	?___ftadd,obstacle_avoid_controller@temp3
  3660  007FB6  C02E  F0BA         	movff	?___ftadd+1,obstacle_avoid_controller@temp3+1
  3661  007FBA  C02F  F0BB         	movff	?___ftadd+2,obstacle_avoid_controller@temp3+2
  3662                           
  3663                           ;obstacle_avoidance.c: 570: if ( temp3>=0.5)
  3664  007FBE  C0B9  F001         	movff	obstacle_avoid_controller@temp3,___ftge@ff1
  3665  007FC2  C0BA  F002         	movff	obstacle_avoid_controller@temp3+1,___ftge@ff1+1
  3666  007FC6  C0BB  F003         	movff	obstacle_avoid_controller@temp3+2,___ftge@ff1+2
  3667  007FCA  0E00               	movlw	0
  3668  007FCC  6E04               	movwf	___ftge@ff2,c
  3669  007FCE  0E00               	movlw	0
  3670  007FD0  6E05               	movwf	___ftge@ff2+1,c
  3671  007FD2  0E3F               	movlw	63
  3672  007FD4  6E06               	movwf	___ftge@ff2+2,c
  3673  007FD6  ECE2  F02E         	call	___ftge	;wreg free
  3674  007FDA  A0D8               	btfss	status,0,c
  3675  007FDC  D010               	goto	l304
  3676                           
  3677                           ;obstacle_avoidance.c: 571: rw_vel_obs=temp2+1;
  3678  007FDE  0E01               	movlw	1
  3679  007FE0  0100               	movlb	0	; () banked
  3680  007FE2  25C1               	addwf	obstacle_avoid_controller@temp2& (0+255),w,b
  3681  007FE4  6E09               	movwf	___awtoft@c,c
  3682  007FE6  0E00               	movlw	0
  3683  007FE8  0100               	movlb	0	; () banked
  3684  007FEA  21C2               	addwfc	(obstacle_avoid_controller@temp2+1)& (0+255),w,b
  3685  007FEC  6E0A               	movwf	___awtoft@c+1,c
  3686  007FEE  EC04  F02D         	call	___awtoft	;wreg free
  3687  007FF2  C009  F07E         	movff	?___awtoft,_rw_vel_obs
  3688  007FF6  C00A  F07F         	movff	?___awtoft+1,_rw_vel_obs+1
  3689  007FFA  C00B  F080         	movff	?___awtoft+2,_rw_vel_obs+2
  3690  007FFE                     l304:
  3691  007FFE  0012               	return	
  3692  008000                     __end_of_obstacle_avoid_controller:
  3693                           	opt stack 0
  3694                           tblptru	equ	0xFF8
  3695                           tblptrh	equ	0xFF7
  3696                           tblptrl	equ	0xFF6
  3697                           tablat	equ	0xFF5
  3698                           postinc0	equ	0xFEE
  3699                           wreg	equ	0xFE8
  3700                           postinc1	equ	0xFE6
  3701                           postdec1	equ	0xFE5
  3702                           fsr1h	equ	0xFE2
  3703                           fsr1l	equ	0xFE1
  3704                           postinc2	equ	0xFDE
  3705                           postdec2	equ	0xFDD
  3706                           fsr2h	equ	0xFDA
  3707                           fsr2l	equ	0xFD9
  3708                           status	equ	0xFD8
  3709                           
  3710 ;; *************** function _min *****************
  3711 ;; Defined at:
  3712 ;;		line 433 in file "obstacle_avoidance.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  x               3    9[COMRAM] float 
  3715 ;;  y               3   12[COMRAM] float 
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;  z               3   15[COMRAM] float 
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  3    9[COMRAM] float 
  3720 ;; Registers used:
  3721 ;;		wreg, status,2, status,0, cstack
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3727 ;;      Params:         6       0       0       0       0       0       0       0       0
  3728 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3729 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3730 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3731 ;;Total ram usage:        9 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; Hardware stack levels required when called:    1
  3734 ;; This function calls:
  3735 ;;		___ftge
  3736 ;; This function is called by:
  3737 ;;		_read_sensors
  3738 ;;		_obstacle_avoid_controller
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text10
  3743  005A50                     __ptext10:
  3744                           	opt stack 0
  3745  005A50                     _min:
  3746                           	opt stack 28
  3747                           
  3748                           ;obstacle_avoidance.c: 435: float z;
  3749                           ;obstacle_avoidance.c: 436: if (x<=y)
  3750                           
  3751                           ;incstack = 0
  3752  005A50  C00D  F001         	movff	min@y,___ftge@ff1
  3753  005A54  C00E  F002         	movff	min@y+1,___ftge@ff1+1
  3754  005A58  C00F  F003         	movff	min@y+2,___ftge@ff1+2
  3755  005A5C  C00A  F004         	movff	min@x,___ftge@ff2
  3756  005A60  C00B  F005         	movff	min@x+1,___ftge@ff2+1
  3757  005A64  C00C  F006         	movff	min@x+2,___ftge@ff2+2
  3758  005A68  ECE2  F02E         	call	___ftge	;wreg free
  3759  005A6C  A0D8               	btfss	status,0,c
  3760  005A6E  D007               	goto	l256
  3761                           
  3762                           ;obstacle_avoidance.c: 437: z=x;
  3763  005A70  C00A  F010         	movff	min@x,min@z
  3764  005A74  C00B  F011         	movff	min@x+1,min@z+1
  3765  005A78  C00C  F012         	movff	min@x+2,min@z+2
  3766  005A7C  D006               	goto	l257
  3767  005A7E                     l256:
  3768                           
  3769                           ;obstacle_avoidance.c: 438: else
  3770                           ;obstacle_avoidance.c: 439: z=y;
  3771  005A7E  C00D  F010         	movff	min@y,min@z
  3772  005A82  C00E  F011         	movff	min@y+1,min@z+1
  3773  005A86  C00F  F012         	movff	min@y+2,min@z+2
  3774  005A8A                     l257:
  3775                           
  3776                           ;obstacle_avoidance.c: 440: return z;
  3777  005A8A  C010  F00A         	movff	min@z,?_min
  3778  005A8E  C011  F00B         	movff	min@z+1,?_min+1
  3779  005A92  C012  F00C         	movff	min@z+2,?_min+2
  3780  005A96  0012               	return	
  3781  005A98                     __end_of_min:
  3782                           	opt stack 0
  3783                           tblptru	equ	0xFF8
  3784                           tblptrh	equ	0xFF7
  3785                           tblptrl	equ	0xFF6
  3786                           tablat	equ	0xFF5
  3787                           postinc0	equ	0xFEE
  3788                           wreg	equ	0xFE8
  3789                           postinc1	equ	0xFE6
  3790                           postdec1	equ	0xFE5
  3791                           fsr1h	equ	0xFE2
  3792                           fsr1l	equ	0xFE1
  3793                           postinc2	equ	0xFDE
  3794                           postdec2	equ	0xFDD
  3795                           fsr2h	equ	0xFDA
  3796                           fsr2l	equ	0xFD9
  3797                           status	equ	0xFD8
  3798                           
  3799 ;; *************** function ___ftge *****************
  3800 ;; Defined at:
  3801 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  ff1             3    0[COMRAM] float 
  3804 ;;  ff2             3    3[COMRAM] float 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;		None
  3807 ;; Return value:  Size  Location     Type
  3808 ;;		None               void
  3809 ;; Registers used:
  3810 ;;		wreg, status,2, status,0
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3816 ;;      Params:         6       0       0       0       0       0       0       0       0
  3817 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3818 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3819 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3820 ;;Total ram usage:        9 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; This function calls:
  3823 ;;		Nothing
  3824 ;; This function is called by:
  3825 ;;		_read_ultrasonic_s3
  3826 ;;		_read_ultrasonic_s4
  3827 ;;		_read_ultrasonic_s5
  3828 ;;		_read_ultrasonic_s6
  3829 ;;		_read_ultrasonic_s7
  3830 ;;		_read_ultrasonic_s8
  3831 ;;		_min
  3832 ;;		_obstacle_avoid_controller
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	text11
  3837  005DC4                     __ptext11:
  3838                           	opt stack 0
  3839  005DC4                     ___ftge:
  3840                           	opt stack 28
  3841                           
  3842                           ;incstack = 0
  3843  005DC4  AE03               	btfss	___ftge@ff1+2,7,c
  3844  005DC6  D016               	goto	l2109
  3845  005DC8  C001  F007         	movff	___ftge@ff1,??___ftge
  3846  005DCC  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  3847  005DD0  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  3848  005DD4  1E07               	comf	??___ftge,f,c
  3849  005DD6  1E08               	comf	??___ftge+1,f,c
  3850  005DD8  1E09               	comf	??___ftge+2,f,c
  3851  005DDA  2A07               	incf	??___ftge,f,c
  3852  005DDC  0E00               	movlw	0
  3853  005DDE  2208               	addwfc	??___ftge+1,f,c
  3854  005DE0  2209               	addwfc	??___ftge+2,f,c
  3855  005DE2  0E00               	movlw	0
  3856  005DE4  2407               	addwf	??___ftge,w,c
  3857  005DE6  6E01               	movwf	___ftge@ff1,c
  3858  005DE8  0E00               	movlw	0
  3859  005DEA  2008               	addwfc	??___ftge+1,w,c
  3860  005DEC  6E02               	movwf	___ftge@ff1+1,c
  3861  005DEE  0E80               	movlw	128
  3862  005DF0  2009               	addwfc	??___ftge+2,w,c
  3863  005DF2  6E03               	movwf	___ftge@ff1+2,c
  3864  005DF4                     l2109:
  3865  005DF4  AE06               	btfss	___ftge@ff2+2,7,c
  3866  005DF6  D016               	goto	l2113
  3867  005DF8  C004  F007         	movff	___ftge@ff2,??___ftge
  3868  005DFC  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  3869  005E00  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  3870  005E04  1E07               	comf	??___ftge,f,c
  3871  005E06  1E08               	comf	??___ftge+1,f,c
  3872  005E08  1E09               	comf	??___ftge+2,f,c
  3873  005E0A  2A07               	incf	??___ftge,f,c
  3874  005E0C  0E00               	movlw	0
  3875  005E0E  2208               	addwfc	??___ftge+1,f,c
  3876  005E10  2209               	addwfc	??___ftge+2,f,c
  3877  005E12  0E00               	movlw	0
  3878  005E14  2407               	addwf	??___ftge,w,c
  3879  005E16  6E04               	movwf	___ftge@ff2,c
  3880  005E18  0E00               	movlw	0
  3881  005E1A  2008               	addwfc	??___ftge+1,w,c
  3882  005E1C  6E05               	movwf	___ftge@ff2+1,c
  3883  005E1E  0E80               	movlw	128
  3884  005E20  2009               	addwfc	??___ftge+2,w,c
  3885  005E22  6E06               	movwf	___ftge@ff2+2,c
  3886  005E24                     l2113:
  3887  005E24  0E00               	movlw	0
  3888  005E26  1A01               	xorwf	___ftge@ff1,f,c
  3889  005E28  0E00               	movlw	0
  3890  005E2A  1A02               	xorwf	___ftge@ff1+1,f,c
  3891  005E2C  0E80               	movlw	128
  3892  005E2E  1A03               	xorwf	___ftge@ff1+2,f,c
  3893  005E30  0E00               	movlw	0
  3894  005E32  1A04               	xorwf	___ftge@ff2,f,c
  3895  005E34  0E00               	movlw	0
  3896  005E36  1A05               	xorwf	___ftge@ff2+1,f,c
  3897  005E38  0E80               	movlw	128
  3898  005E3A  1A06               	xorwf	___ftge@ff2+2,f,c
  3899  005E3C  5004               	movf	___ftge@ff2,w,c
  3900  005E3E  5C01               	subwf	___ftge@ff1,w,c
  3901  005E40  5005               	movf	___ftge@ff2+1,w,c
  3902  005E42  5802               	subwfb	___ftge@ff1+1,w,c
  3903  005E44  5006               	movf	___ftge@ff2+2,w,c
  3904  005E46  5803               	subwfb	___ftge@ff1+2,w,c
  3905  005E48  B0D8               	btfsc	status,0,c
  3906  005E4A  D002               	goto	l2119
  3907  005E4C  90D8               	bcf	status,0,c
  3908  005E4E  D001               	goto	l796
  3909  005E50                     l2119:
  3910  005E50  80D8               	bsf	status,0,c
  3911  005E52                     l796:
  3912  005E52  0012               	return	
  3913  005E54                     __end_of___ftge:
  3914                           	opt stack 0
  3915                           tblptru	equ	0xFF8
  3916                           tblptrh	equ	0xFF7
  3917                           tblptrl	equ	0xFF6
  3918                           tablat	equ	0xFF5
  3919                           postinc0	equ	0xFEE
  3920                           wreg	equ	0xFE8
  3921                           postinc1	equ	0xFE6
  3922                           postdec1	equ	0xFE5
  3923                           fsr1h	equ	0xFE2
  3924                           fsr1l	equ	0xFE1
  3925                           postinc2	equ	0xFDE
  3926                           postdec2	equ	0xFDD
  3927                           fsr2h	equ	0xFDA
  3928                           fsr2l	equ	0xFD9
  3929                           status	equ	0xFD8
  3930                           
  3931 ;; *************** function _area *****************
  3932 ;; Defined at:
  3933 ;;		line 426 in file "obstacle_avoidance.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;  w               3   56[COMRAM] float 
  3936 ;;  h               3   59[COMRAM] float 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;  area            3   62[COMRAM] float 
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  3   56[COMRAM] float 
  3941 ;; Registers used:
  3942 ;;		wreg, status,2, status,0, cstack
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3948 ;;      Params:         6       0       0       0       0       0       0       0       0
  3949 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3950 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3951 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3952 ;;Total ram usage:       12 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    2
  3955 ;; This function calls:
  3956 ;;		___ftadd
  3957 ;;		___ftdiv
  3958 ;;		___ftmul
  3959 ;;		___ftneg
  3960 ;; This function is called by:
  3961 ;;		_obstacle_avoid_controller
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965                           	psect	text12
  3966  005F8A                     __ptext12:
  3967                           	opt stack 0
  3968  005F8A                     _area:
  3969                           	opt stack 27
  3970                           
  3971                           ;obstacle_avoidance.c: 428: float area;
  3972                           ;obstacle_avoidance.c: 429: area=w*(h-(h*h/2));
  3973                           
  3974                           ;incstack = 0
  3975  005F8A  C03C  F030         	movff	area@h,___ftadd@f2
  3976  005F8E  C03D  F031         	movff	area@h+1,___ftadd@f2+1
  3977  005F92  C03E  F032         	movff	area@h+2,___ftadd@f2+2
  3978  005F96  0E00               	movlw	0
  3979  005F98  6E1E               	movwf	___ftdiv@f2,c
  3980  005F9A  0E00               	movlw	0
  3981  005F9C  6E1F               	movwf	___ftdiv@f2+1,c
  3982  005F9E  0E40               	movlw	64
  3983  005FA0  6E20               	movwf	___ftdiv@f2+2,c
  3984  005FA2  C03C  F00F         	movff	area@h,___ftmul@f2
  3985  005FA6  C03D  F010         	movff	area@h+1,___ftmul@f2+1
  3986  005FAA  C03E  F011         	movff	area@h+2,___ftmul@f2+2
  3987  005FAE  C03C  F00C         	movff	area@h,___ftmul@f1
  3988  005FB2  C03D  F00D         	movff	area@h+1,___ftmul@f1+1
  3989  005FB6  C03E  F00E         	movff	area@h+2,___ftmul@f1+2
  3990  005FBA  EC41  F031         	call	___ftmul	;wreg free
  3991  005FBE  C00C  F01B         	movff	?___ftmul,___ftdiv@f1
  3992  005FC2  C00D  F01C         	movff	?___ftmul+1,___ftdiv@f1+1
  3993  005FC6  C00E  F01D         	movff	?___ftmul+2,___ftdiv@f1+2
  3994  005FCA  ECD6  F030         	call	___ftdiv	;wreg free
  3995  005FCE  C01B  F02A         	movff	?___ftdiv,___ftneg@f1
  3996  005FD2  C01C  F02B         	movff	?___ftdiv+1,___ftneg@f1+1
  3997  005FD6  C01D  F02C         	movff	?___ftdiv+2,___ftneg@f1+2
  3998  005FDA  EC45  F02C         	call	___ftneg	;wreg free
  3999  005FDE  C02A  F02D         	movff	?___ftneg,___ftadd@f1
  4000  005FE2  C02B  F02E         	movff	?___ftneg+1,___ftadd@f1+1
  4001  005FE6  C02C  F02F         	movff	?___ftneg+2,___ftadd@f1+2
  4002  005FEA  EC08  F036         	call	___ftadd	;wreg free
  4003  005FEE  C02D  F042         	movff	?___ftadd,_area$1814
  4004  005FF2  C02E  F043         	movff	?___ftadd+1,_area$1814+1
  4005  005FF6  C02F  F044         	movff	?___ftadd+2,_area$1814+2
  4006                           
  4007                           ;obstacle_avoidance.c: 428: float area;
  4008                           ;obstacle_avoidance.c: 429: area=w*(h-(h*h/2));
  4009  005FFA  C042  F00C         	movff	_area$1814,___ftmul@f1
  4010  005FFE  C043  F00D         	movff	_area$1814+1,___ftmul@f1+1
  4011  006002  C044  F00E         	movff	_area$1814+2,___ftmul@f1+2
  4012  006006  C039  F00F         	movff	area@w,___ftmul@f2
  4013  00600A  C03A  F010         	movff	area@w+1,___ftmul@f2+1
  4014  00600E  C03B  F011         	movff	area@w+2,___ftmul@f2+2
  4015  006012  EC41  F031         	call	___ftmul	;wreg free
  4016  006016  C00C  F03F         	movff	?___ftmul,area@area
  4017  00601A  C00D  F040         	movff	?___ftmul+1,area@area+1
  4018  00601E  C00E  F041         	movff	?___ftmul+2,area@area+2
  4019                           
  4020                           ;obstacle_avoidance.c: 430: return area;
  4021  006022  C03F  F039         	movff	area@area,?_area
  4022  006026  C040  F03A         	movff	area@area+1,?_area+1
  4023  00602A  C041  F03B         	movff	area@area+2,?_area+2
  4024  00602E  0012               	return	
  4025  006030                     __end_of_area:
  4026                           	opt stack 0
  4027                           tblptru	equ	0xFF8
  4028                           tblptrh	equ	0xFF7
  4029                           tblptrl	equ	0xFF6
  4030                           tablat	equ	0xFF5
  4031                           postinc0	equ	0xFEE
  4032                           wreg	equ	0xFE8
  4033                           postinc1	equ	0xFE6
  4034                           postdec1	equ	0xFE5
  4035                           fsr1h	equ	0xFE2
  4036                           fsr1l	equ	0xFE1
  4037                           postinc2	equ	0xFDE
  4038                           postdec2	equ	0xFDD
  4039                           fsr2h	equ	0xFDA
  4040                           fsr2l	equ	0xFD9
  4041                           status	equ	0xFD8
  4042                           
  4043 ;; *************** function ___wmul *****************
  4044 ;; Defined at:
  4045 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;  multiplier      2    0[COMRAM] unsigned int 
  4048 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;  product         2    4[COMRAM] unsigned int 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  2    0[COMRAM] unsigned int 
  4053 ;; Registers used:
  4054 ;;		wreg, status,2, status,0, prodl, prodh
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4060 ;;      Params:         4       0       0       0       0       0       0       0       0
  4061 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4062 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4063 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4064 ;;Total ram usage:        6 bytes
  4065 ;; Hardware stack levels used:    1
  4066 ;; This function calls:
  4067 ;;		Nothing
  4068 ;; This function is called by:
  4069 ;;		_obstacle_avoid_controller
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073                           	psect	text13
  4074  0058B0                     __ptext13:
  4075                           	opt stack 0
  4076  0058B0                     ___wmul:
  4077                           	opt stack 29
  4078                           
  4079                           ;incstack = 0
  4080  0058B0  5001               	movf	___wmul@multiplier,w,c
  4081  0058B2  0203               	mulwf	___wmul@multiplicand,c
  4082  0058B4  CFF3 F005          	movff	prodl,___wmul@product
  4083  0058B8  CFF4 F006          	movff	prodh,___wmul@product+1
  4084  0058BC  5001               	movf	___wmul@multiplier,w,c
  4085  0058BE  0204               	mulwf	___wmul@multiplicand+1,c
  4086  0058C0  50F3               	movf	prodl,w,c
  4087  0058C2  2606               	addwf	___wmul@product+1,f,c
  4088  0058C4  5002               	movf	___wmul@multiplier+1,w,c
  4089  0058C6  0203               	mulwf	___wmul@multiplicand,c
  4090  0058C8  50F3               	movf	prodl,w,c
  4091  0058CA  2606               	addwf	___wmul@product+1,f,c
  4092  0058CC  C005  F001         	movff	___wmul@product,?___wmul
  4093  0058D0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4094  0058D4  0012               	return	
  4095  0058D6                     __end_of___wmul:
  4096                           	opt stack 0
  4097                           tblptru	equ	0xFF8
  4098                           tblptrh	equ	0xFF7
  4099                           tblptrl	equ	0xFF6
  4100                           tablat	equ	0xFF5
  4101                           prodh	equ	0xFF4
  4102                           prodl	equ	0xFF3
  4103                           postinc0	equ	0xFEE
  4104                           wreg	equ	0xFE8
  4105                           postinc1	equ	0xFE6
  4106                           postdec1	equ	0xFE5
  4107                           fsr1h	equ	0xFE2
  4108                           fsr1l	equ	0xFE1
  4109                           postinc2	equ	0xFDE
  4110                           postdec2	equ	0xFDD
  4111                           fsr2h	equ	0xFDA
  4112                           fsr2l	equ	0xFD9
  4113                           status	equ	0xFD8
  4114                           
  4115 ;; *************** function ___fttol *****************
  4116 ;; Defined at:
  4117 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;  f1              3    0[COMRAM] float 
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;  lval            4   10[COMRAM] unsigned long 
  4122 ;;  exp1            1   14[COMRAM] unsigned char 
  4123 ;;  sign1           1    9[COMRAM] unsigned char 
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  4    0[COMRAM] long 
  4126 ;; Registers used:
  4127 ;;		wreg, status,2, status,0
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4133 ;;      Params:         4       0       0       0       0       0       0       0       0
  4134 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4135 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4136 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4137 ;;Total ram usage:       15 bytes
  4138 ;; Hardware stack levels used:    1
  4139 ;; This function calls:
  4140 ;;		Nothing
  4141 ;; This function is called by:
  4142 ;;		_main
  4143 ;;		_read_ultrasonic_s3
  4144 ;;		_read_ultrasonic_s4
  4145 ;;		_read_ultrasonic_s5
  4146 ;;		_read_ultrasonic_s6
  4147 ;;		_read_ultrasonic_s7
  4148 ;;		_read_ultrasonic_s8
  4149 ;;		_obstacle_avoid_controller
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           	psect	text14
  4154  0060D8                     __ptext14:
  4155                           	opt stack 0
  4156  0060D8                     ___fttol:
  4157                           	opt stack 28
  4158                           
  4159                           ;incstack = 0
  4160  0060D8  C003  F005         	movff	___fttol@f1+2,??___fttol
  4161  0060DC  6A06               	clrf	(??___fttol+1)& (0+255),c
  4162  0060DE  6A07               	clrf	(??___fttol+2)& (0+255),c
  4163  0060E0  3402               	rlcf	___fttol@f1+1,w,c
  4164  0060E2  3605               	rlcf	??___fttol& (0+255),f,c
  4165  0060E4  E301               	bnc	u1801
  4166  0060E6  8006               	bsf	(??___fttol+1)& (0+255),0,c
  4167  0060E8                     u1801:
  4168  0060E8  5005               	movf	??___fttol,w,c
  4169  0060EA  6E0F               	movwf	___fttol@exp1,c
  4170  0060EC  660F               	tstfsz	___fttol@exp1& (0+255),c
  4171  0060EE  D001               	goto	l2133
  4172  0060F0  D038               	goto	u1850
  4173  0060F2                     l2133:
  4174  0060F2  0E17               	movlw	23
  4175  0060F4  6E05               	movwf	??___fttol& (0+255),c
  4176  0060F6  C001  F006         	movff	___fttol@f1,??___fttol+1
  4177  0060FA  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  4178  0060FE  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  4179  006102  2805               	incf	??___fttol,w,c
  4180  006104  6E09               	movwf	(??___fttol+4)& (0+255),c
  4181  006106  D004               	goto	u1820
  4182  006108                     u1825:
  4183  006108  90D8               	bcf	status,0,c
  4184  00610A  3208               	rrcf	??___fttol+3,f,c
  4185  00610C  3207               	rrcf	??___fttol+2,f,c
  4186  00610E  3206               	rrcf	??___fttol+1,f,c
  4187  006110                     u1820:
  4188  006110  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
  4189  006112  D7FA               	goto	u1825
  4190  006114  5006               	movf	??___fttol+1,w,c
  4191  006116  6E0A               	movwf	___fttol@sign1,c
  4192  006118  8E02               	bsf	___fttol@f1+1,7,c
  4193  00611A  0EFF               	movlw	255
  4194  00611C  1601               	andwf	___fttol@f1,f,c
  4195  00611E  0EFF               	movlw	255
  4196  006120  1602               	andwf	___fttol@f1+1,f,c
  4197  006122  0E00               	movlw	0
  4198  006124  1603               	andwf	___fttol@f1+2,f,c
  4199  006126  5001               	movf	___fttol@f1,w,c
  4200  006128  6E0B               	movwf	___fttol@lval,c
  4201  00612A  5002               	movf	___fttol@f1+1,w,c
  4202  00612C  6E0C               	movwf	___fttol@lval+1,c
  4203  00612E  5003               	movf	___fttol@f1+2,w,c
  4204  006130  6E0D               	movwf	___fttol@lval+2,c
  4205  006132  6A0E               	clrf	___fttol@lval+3,c
  4206  006134  0E8E               	movlw	142
  4207  006136  5E0F               	subwf	___fttol@exp1,f,c
  4208  006138  AE0F               	btfss	___fttol@exp1,7,c
  4209  00613A  D010               	goto	l2155
  4210  00613C  500F               	movf	___fttol@exp1,w,c
  4211  00613E  0A80               	xorlw	128
  4212  006140  6E05               	movwf	??___fttol& (0+255),c
  4213  006142  0EF1               	movlw	241
  4214  006144  0A80               	xorlw	128
  4215  006146  5C05               	subwf	??___fttol,w,c
  4216  006148  A0D8               	btfss	status,0,c
  4217  00614A  D00B               	goto	u1850
  4218  00614C                     l2151:
  4219  00614C  90D8               	bcf	status,0,c
  4220  00614E  320E               	rrcf	___fttol@lval+3,f,c
  4221  006150  320D               	rrcf	___fttol@lval+2,f,c
  4222  006152  320C               	rrcf	___fttol@lval+1,f,c
  4223  006154  320B               	rrcf	___fttol@lval,f,c
  4224  006156  3E0F               	incfsz	___fttol@exp1,f,c
  4225  006158  D7F9               	goto	l2151
  4226  00615A  D014               	goto	l2165
  4227  00615C                     l2155:
  4228  00615C  0E17               	movlw	23
  4229  00615E  640F               	cpfsgt	___fttol@exp1,c
  4230  006160  D00F               	goto	l2163
  4231  006162                     u1850:
  4232  006162  0E00               	movlw	0
  4233  006164  6E01               	movwf	?___fttol,c
  4234  006166  0E00               	movlw	0
  4235  006168  6E02               	movwf	?___fttol+1,c
  4236  00616A  0E00               	movlw	0
  4237  00616C  6E03               	movwf	?___fttol+2,c
  4238  00616E  0E00               	movlw	0
  4239  006170  6E04               	movwf	?___fttol+3,c
  4240  006172  D01B               	goto	l822
  4241  006174                     l2161:
  4242  006174  90D8               	bcf	status,0,c
  4243  006176  360B               	rlcf	___fttol@lval,f,c
  4244  006178  360C               	rlcf	___fttol@lval+1,f,c
  4245  00617A  360D               	rlcf	___fttol@lval+2,f,c
  4246  00617C  360E               	rlcf	___fttol@lval+3,f,c
  4247  00617E  060F               	decf	___fttol@exp1,f,c
  4248  006180                     l2163:
  4249  006180  660F               	tstfsz	___fttol@exp1,c
  4250  006182  D7F8               	goto	l2161
  4251  006184                     l2165:
  4252  006184  500A               	movf	___fttol@sign1,w,c
  4253  006186  B4D8               	btfsc	status,2,c
  4254  006188  D008               	goto	l2169
  4255  00618A  1E0E               	comf	___fttol@lval+3,f,c
  4256  00618C  1E0D               	comf	___fttol@lval+2,f,c
  4257  00618E  1E0C               	comf	___fttol@lval+1,f,c
  4258  006190  6C0B               	negf	___fttol@lval,c
  4259  006192  0E00               	movlw	0
  4260  006194  220C               	addwfc	___fttol@lval+1,f,c
  4261  006196  220D               	addwfc	___fttol@lval+2,f,c
  4262  006198  220E               	addwfc	___fttol@lval+3,f,c
  4263  00619A                     l2169:
  4264  00619A  C00B  F001         	movff	___fttol@lval,?___fttol
  4265  00619E  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  4266  0061A2  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  4267  0061A6  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  4268  0061AA                     l822:
  4269  0061AA  0012               	return	
  4270  0061AC                     __end_of___fttol:
  4271                           	opt stack 0
  4272                           tblptru	equ	0xFF8
  4273                           tblptrh	equ	0xFF7
  4274                           tblptrl	equ	0xFF6
  4275                           tablat	equ	0xFF5
  4276                           prodh	equ	0xFF4
  4277                           prodl	equ	0xFF3
  4278                           postinc0	equ	0xFEE
  4279                           wreg	equ	0xFE8
  4280                           postinc1	equ	0xFE6
  4281                           postdec1	equ	0xFE5
  4282                           fsr1h	equ	0xFE2
  4283                           fsr1l	equ	0xFE1
  4284                           postinc2	equ	0xFDE
  4285                           postdec2	equ	0xFDD
  4286                           fsr2h	equ	0xFDA
  4287                           fsr2l	equ	0xFD9
  4288                           status	equ	0xFD8
  4289                           
  4290 ;; *************** function _int_to_char *****************
  4291 ;; Defined at:
  4292 ;;		line 693 in file "obstacle_avoidance.c"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;  a               1    wreg     unsigned char 
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;  a               1   11[COMRAM] unsigned char 
  4297 ;;  i               2   13[COMRAM] int 
  4298 ;;  b               3    8[COMRAM] unsigned char [3]
  4299 ;;  temp            1   12[COMRAM] unsigned char 
  4300 ;; Return value:  Size  Location     Type
  4301 ;;		None               void
  4302 ;; Registers used:
  4303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4309 ;;      Params:         0       0       0       0       0       0       0       0       0
  4310 ;;      Locals:         7       0       0       0       0       0       0       0       0
  4311 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4312 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4313 ;;Total ram usage:        7 bytes
  4314 ;; Hardware stack levels used:    1
  4315 ;; Hardware stack levels required when called:    2
  4316 ;; This function calls:
  4317 ;;		___awdiv
  4318 ;;		_lcddata_4bit
  4319 ;; This function is called by:
  4320 ;;		_main
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324                           	psect	text15
  4325  005C3C                     __ptext15:
  4326                           	opt stack 0
  4327  005C3C                     _int_to_char:
  4328                           	opt stack 28
  4329                           
  4330                           ;incstack = 0
  4331                           ;int_to_char@a stored from wreg
  4332  005C3C  6E0C               	movwf	int_to_char@a,c
  4333                           
  4334                           ;obstacle_avoidance.c: 695: char temp;
  4335                           ;obstacle_avoidance.c: 696: char b[3];
  4336                           ;obstacle_avoidance.c: 697: b[0]=a/100;
  4337  005C3E  C00C  F001         	movff	int_to_char@a,___awdiv@dividend
  4338  005C42  6A02               	clrf	___awdiv@dividend+1,c
  4339  005C44  0E00               	movlw	0
  4340  005C46  6E04               	movwf	___awdiv@divisor+1,c
  4341  005C48  0E64               	movlw	100
  4342  005C4A  6E03               	movwf	___awdiv@divisor,c
  4343  005C4C  EC73  F02F         	call	___awdiv	;wreg free
  4344  005C50  5001               	movf	?___awdiv,w,c
  4345  005C52  6E09               	movwf	int_to_char@b,c
  4346                           
  4347                           ;obstacle_avoidance.c: 698: temp=a-(b[0]*100);
  4348  005C54  5009               	movf	int_to_char@b,w,c
  4349  005C56  0D64               	mullw	100
  4350  005C58  50F3               	movf	prodl,w,c
  4351  005C5A  0800               	sublw	0
  4352  005C5C  240C               	addwf	int_to_char@a,w,c
  4353  005C5E  6E0D               	movwf	int_to_char@temp,c
  4354                           
  4355                           ;obstacle_avoidance.c: 699: b[1]=temp/10;
  4356  005C60  C00D  F001         	movff	int_to_char@temp,___awdiv@dividend
  4357  005C64  6A02               	clrf	___awdiv@dividend+1,c
  4358  005C66  0E00               	movlw	0
  4359  005C68  6E04               	movwf	___awdiv@divisor+1,c
  4360  005C6A  0E0A               	movlw	10
  4361  005C6C  6E03               	movwf	___awdiv@divisor,c
  4362  005C6E  EC73  F02F         	call	___awdiv	;wreg free
  4363  005C72  5001               	movf	?___awdiv,w,c
  4364  005C74  6E0A               	movwf	int_to_char@b+1,c
  4365                           
  4366                           ;obstacle_avoidance.c: 700: b[2]=temp-(b[1]*10);
  4367  005C76  500A               	movf	int_to_char@b+1,w,c
  4368  005C78  0D0A               	mullw	10
  4369  005C7A  50F3               	movf	prodl,w,c
  4370  005C7C  0800               	sublw	0
  4371  005C7E  240D               	addwf	int_to_char@temp,w,c
  4372  005C80  6E0B               	movwf	int_to_char@b+2,c
  4373                           
  4374                           ;obstacle_avoidance.c: 701: for(int i=0;i<3;i++)
  4375  005C82  0E00               	movlw	0
  4376  005C84  6E0F               	movwf	int_to_char@i+1,c
  4377  005C86  0E00               	movlw	0
  4378  005C88  6E0E               	movwf	int_to_char@i,c
  4379  005C8A  500F               	movf	int_to_char@i+1,w,c
  4380  005C8C  0A80               	xorlw	128
  4381  005C8E  0F80               	addlw	-128
  4382  005C90  0E03               	movlw	3
  4383  005C92  B4D8               	btfsc	status,2,c
  4384  005C94  5C0E               	subwf	int_to_char@i,w,c
  4385  005C96  B0D8               	btfsc	status,0,c
  4386  005C98  D00D               	goto	l354
  4387                           
  4388                           ;obstacle_avoidance.c: 702: lcddata_4bit(b[i]+0x30);
  4389  005C9A  0E09               	movlw	low int_to_char@b
  4390  005C9C  240E               	addwf	int_to_char@i,w,c
  4391  005C9E  6ED9               	movwf	fsr2l,c
  4392  005CA0  0E00               	movlw	high int_to_char@b
  4393  005CA2  200F               	addwfc	int_to_char@i+1,w,c
  4394  005CA4  6EDA               	movwf	fsr2h,c
  4395  005CA6  50DF               	movf	indf2,w,c
  4396  005CA8  0F30               	addlw	48
  4397  005CAA  ECE3  F02C         	call	_lcddata_4bit
  4398  005CAE  4A0E               	infsnz	int_to_char@i,f,c
  4399  005CB0  2A0F               	incf	int_to_char@i+1,f,c
  4400  005CB2  D7EB               	goto	L13
  4401  005CB4                     l354:
  4402  005CB4  0012               	return	
  4403  005CB6                     __end_of_int_to_char:
  4404                           	opt stack 0
  4405                           tblptru	equ	0xFF8
  4406                           tblptrh	equ	0xFF7
  4407                           tblptrl	equ	0xFF6
  4408                           tablat	equ	0xFF5
  4409                           prodh	equ	0xFF4
  4410                           prodl	equ	0xFF3
  4411                           postinc0	equ	0xFEE
  4412                           wreg	equ	0xFE8
  4413                           postinc1	equ	0xFE6
  4414                           postdec1	equ	0xFE5
  4415                           fsr1h	equ	0xFE2
  4416                           fsr1l	equ	0xFE1
  4417                           indf2	equ	0xFDF
  4418                           postinc2	equ	0xFDE
  4419                           postdec2	equ	0xFDD
  4420                           fsr2h	equ	0xFDA
  4421                           fsr2l	equ	0xFD9
  4422                           status	equ	0xFD8
  4423                           
  4424 ;; *************** function _lcddata_4bit *****************
  4425 ;; Defined at:
  4426 ;;		line 661 in file "obstacle_avoidance.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;  value           1    wreg     unsigned char 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;  value           1    5[COMRAM] unsigned char 
  4431 ;; Return value:  Size  Location     Type
  4432 ;;		None               void
  4433 ;; Registers used:
  4434 ;;		wreg, status,2, status,0, cstack
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4440 ;;      Params:         0       0       0       0       0       0       0       0       0
  4441 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4443 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4444 ;;Total ram usage:        1 bytes
  4445 ;; Hardware stack levels used:    1
  4446 ;; Hardware stack levels required when called:    1
  4447 ;; This function calls:
  4448 ;;		_s_delay
  4449 ;; This function is called by:
  4450 ;;		_int_to_char
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           
  4454                           	psect	text16
  4455  0059C6                     __ptext16:
  4456                           	opt stack 0
  4457  0059C6                     _lcddata_4bit:
  4458                           	opt stack 28
  4459                           
  4460                           ;incstack = 0
  4461                           ;lcddata_4bit@value stored from wreg
  4462  0059C6  6E06               	movwf	lcddata_4bit@value,c
  4463                           
  4464                           ;obstacle_avoidance.c: 663: PORTD=(value & 0xF0)>>4;
  4465  0059C8  3806               	swapf	lcddata_4bit@value,w,c
  4466  0059CA  0B0F               	andlw	15
  4467  0059CC  0B0F               	andlw	15
  4468  0059CE  6E83               	movwf	3971,c	;volatile
  4469                           
  4470                           ;obstacle_avoidance.c: 664: PORTCbits.RC0=1;
  4471  0059D0  8082               	bsf	3970,0,c	;volatile
  4472                           
  4473                           ;obstacle_avoidance.c: 665: PORTCbits.RC2=1;
  4474  0059D2  8482               	bsf	3970,2,c	;volatile
  4475                           
  4476                           ;obstacle_avoidance.c: 666: s_delay(1);
  4477  0059D4  0E00               	movlw	0
  4478  0059D6  6E02               	movwf	s_delay@a+1,c
  4479  0059D8  0E01               	movlw	1
  4480  0059DA  6E01               	movwf	s_delay@a,c
  4481  0059DC  EC6B  F02C         	call	_s_delay	;wreg free
  4482                           
  4483                           ;obstacle_avoidance.c: 667: PORTCbits.RC2=0;
  4484  0059E0  9482               	bcf	3970,2,c	;volatile
  4485                           
  4486                           ;obstacle_avoidance.c: 668: PORTD=(value & 0x0F);
  4487  0059E2  5006               	movf	lcddata_4bit@value,w,c
  4488  0059E4  0B0F               	andlw	15
  4489  0059E6  6E83               	movwf	3971,c	;volatile
  4490                           
  4491                           ;obstacle_avoidance.c: 669: PORTCbits.RC0=1;
  4492  0059E8  8082               	bsf	3970,0,c	;volatile
  4493                           
  4494                           ;obstacle_avoidance.c: 670: PORTCbits.RC2=1;
  4495  0059EA  8482               	bsf	3970,2,c	;volatile
  4496                           
  4497                           ;obstacle_avoidance.c: 671: s_delay(1);
  4498  0059EC  0E00               	movlw	0
  4499  0059EE  6E02               	movwf	s_delay@a+1,c
  4500  0059F0  0E01               	movlw	1
  4501  0059F2  6E01               	movwf	s_delay@a,c
  4502  0059F4  EC6B  F02C         	call	_s_delay	;wreg free
  4503                           
  4504                           ;obstacle_avoidance.c: 672: PORTCbits.RC2=0;
  4505  0059F8  9482               	bcf	3970,2,c	;volatile
  4506                           
  4507                           ;obstacle_avoidance.c: 673: s_delay(41);
  4508  0059FA  0E00               	movlw	0
  4509  0059FC  6E02               	movwf	s_delay@a+1,c
  4510  0059FE  0E29               	movlw	41
  4511  005A00  6E01               	movwf	s_delay@a,c
  4512  005A02  EC6B  F02C         	call	_s_delay	;wreg free
  4513  005A06  0012               	return	
  4514  005A08                     __end_of_lcddata_4bit:
  4515                           	opt stack 0
  4516                           tblptru	equ	0xFF8
  4517                           tblptrh	equ	0xFF7
  4518                           tblptrl	equ	0xFF6
  4519                           tablat	equ	0xFF5
  4520                           prodh	equ	0xFF4
  4521                           prodl	equ	0xFF3
  4522                           postinc0	equ	0xFEE
  4523                           wreg	equ	0xFE8
  4524                           postinc1	equ	0xFE6
  4525                           postdec1	equ	0xFE5
  4526                           fsr1h	equ	0xFE2
  4527                           fsr1l	equ	0xFE1
  4528                           indf2	equ	0xFDF
  4529                           postinc2	equ	0xFDE
  4530                           postdec2	equ	0xFDD
  4531                           fsr2h	equ	0xFDA
  4532                           fsr2l	equ	0xFD9
  4533                           status	equ	0xFD8
  4534                           
  4535 ;; *************** function ___awdiv *****************
  4536 ;; Defined at:
  4537 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;  dividend        2    0[COMRAM] int 
  4540 ;;  divisor         2    2[COMRAM] int 
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;  quotient        2    6[COMRAM] int 
  4543 ;;  sign            1    5[COMRAM] unsigned char 
  4544 ;;  counter         1    4[COMRAM] unsigned char 
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  2    0[COMRAM] int 
  4547 ;; Registers used:
  4548 ;;		wreg, status,2, status,0, prodl
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4554 ;;      Params:         4       0       0       0       0       0       0       0       0
  4555 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4556 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4557 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4558 ;;Total ram usage:        8 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; This function calls:
  4561 ;;		Nothing
  4562 ;; This function is called by:
  4563 ;;		_int_to_char
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           	psect	text17
  4568  005EE6                     __ptext17:
  4569                           	opt stack 0
  4570  005EE6                     ___awdiv:
  4571                           	opt stack 29
  4572                           
  4573                           ;incstack = 0
  4574  005EE6  0E00               	movlw	0
  4575  005EE8  6E06               	movwf	___awdiv@sign,c
  4576  005EEA  5004               	movf	___awdiv@divisor+1,w,c
  4577  005EEC  0A80               	xorlw	128
  4578  005EEE  6EF3               	movwf	prodl,c
  4579  005EF0  0E80               	movlw	128
  4580  005EF2  5CF3               	subwf	prodl,w,c
  4581  005EF4  0E00               	movlw	0
  4582  005EF6  B4D8               	btfsc	status,2,c
  4583  005EF8  5C03               	subwf	___awdiv@divisor,w,c
  4584  005EFA  B0D8               	btfsc	status,0,c
  4585  005EFC  D006               	goto	l2403
  4586  005EFE  6C03               	negf	___awdiv@divisor,c
  4587  005F00  1E04               	comf	___awdiv@divisor+1,f,c
  4588  005F02  B0D8               	btfsc	status,0,c
  4589  005F04  2A04               	incf	___awdiv@divisor+1,f,c
  4590  005F06  0E01               	movlw	1
  4591  005F08  6E06               	movwf	___awdiv@sign,c
  4592  005F0A                     l2403:
  4593  005F0A  5002               	movf	___awdiv@dividend+1,w,c
  4594  005F0C  0A80               	xorlw	128
  4595  005F0E  6EF3               	movwf	prodl,c
  4596  005F10  0E80               	movlw	128
  4597  005F12  5CF3               	subwf	prodl,w,c
  4598  005F14  0E00               	movlw	0
  4599  005F16  B4D8               	btfsc	status,2,c
  4600  005F18  5C01               	subwf	___awdiv@dividend,w,c
  4601  005F1A  B0D8               	btfsc	status,0,c
  4602  005F1C  D006               	goto	l2409
  4603  005F1E  6C01               	negf	___awdiv@dividend,c
  4604  005F20  1E02               	comf	___awdiv@dividend+1,f,c
  4605  005F22  B0D8               	btfsc	status,0,c
  4606  005F24  2A02               	incf	___awdiv@dividend+1,f,c
  4607  005F26  0E01               	movlw	1
  4608  005F28  1A06               	xorwf	___awdiv@sign,f,c
  4609  005F2A                     l2409:
  4610  005F2A  0E00               	movlw	0
  4611  005F2C  6E08               	movwf	___awdiv@quotient+1,c
  4612  005F2E  0E00               	movlw	0
  4613  005F30  6E07               	movwf	___awdiv@quotient,c
  4614  005F32  5004               	movf	___awdiv@divisor+1,w,c
  4615  005F34  1003               	iorwf	___awdiv@divisor,w,c
  4616  005F36  B4D8               	btfsc	status,2,c
  4617  005F38  D01C               	goto	l2431
  4618  005F3A  0E01               	movlw	1
  4619  005F3C  6E05               	movwf	___awdiv@counter,c
  4620  005F3E  D004               	goto	l2417
  4621  005F40                     l2415:
  4622  005F40  90D8               	bcf	status,0,c
  4623  005F42  3603               	rlcf	___awdiv@divisor,f,c
  4624  005F44  3604               	rlcf	___awdiv@divisor+1,f,c
  4625  005F46  2A05               	incf	___awdiv@counter,f,c
  4626  005F48                     l2417:
  4627  005F48  AE04               	btfss	___awdiv@divisor+1,7,c
  4628  005F4A  D7FA               	goto	l2415
  4629  005F4C                     l2419:
  4630  005F4C  90D8               	bcf	status,0,c
  4631  005F4E  3607               	rlcf	___awdiv@quotient,f,c
  4632  005F50  3608               	rlcf	___awdiv@quotient+1,f,c
  4633  005F52  5003               	movf	___awdiv@divisor,w,c
  4634  005F54  5C01               	subwf	___awdiv@dividend,w,c
  4635  005F56  5004               	movf	___awdiv@divisor+1,w,c
  4636  005F58  5802               	subwfb	___awdiv@dividend+1,w,c
  4637  005F5A  A0D8               	btfss	status,0,c
  4638  005F5C  D005               	goto	l2427
  4639  005F5E  5003               	movf	___awdiv@divisor,w,c
  4640  005F60  5E01               	subwf	___awdiv@dividend,f,c
  4641  005F62  5004               	movf	___awdiv@divisor+1,w,c
  4642  005F64  5A02               	subwfb	___awdiv@dividend+1,f,c
  4643  005F66  8007               	bsf	___awdiv@quotient,0,c
  4644  005F68                     l2427:
  4645  005F68  90D8               	bcf	status,0,c
  4646  005F6A  3204               	rrcf	___awdiv@divisor+1,f,c
  4647  005F6C  3203               	rrcf	___awdiv@divisor,f,c
  4648  005F6E  2E05               	decfsz	___awdiv@counter,f,c
  4649  005F70  D7ED               	goto	l2419
  4650  005F72                     l2431:
  4651  005F72  5006               	movf	___awdiv@sign,w,c
  4652  005F74  B4D8               	btfsc	status,2,c
  4653  005F76  D004               	goto	l2435
  4654  005F78  6C07               	negf	___awdiv@quotient,c
  4655  005F7A  1E08               	comf	___awdiv@quotient+1,f,c
  4656  005F7C  B0D8               	btfsc	status,0,c
  4657  005F7E  2A08               	incf	___awdiv@quotient+1,f,c
  4658  005F80                     l2435:
  4659  005F80  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4660  005F84  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4661  005F88  0012               	return	
  4662  005F8A                     __end_of___awdiv:
  4663                           	opt stack 0
  4664                           tblptru	equ	0xFF8
  4665                           tblptrh	equ	0xFF7
  4666                           tblptrl	equ	0xFF6
  4667                           tablat	equ	0xFF5
  4668                           prodh	equ	0xFF4
  4669                           prodl	equ	0xFF3
  4670                           postinc0	equ	0xFEE
  4671                           wreg	equ	0xFE8
  4672                           postinc1	equ	0xFE6
  4673                           postdec1	equ	0xFE5
  4674                           fsr1h	equ	0xFE2
  4675                           fsr1l	equ	0xFE1
  4676                           indf2	equ	0xFDF
  4677                           postinc2	equ	0xFDE
  4678                           postdec2	equ	0xFDD
  4679                           fsr2h	equ	0xFDA
  4680                           fsr2l	equ	0xFD9
  4681                           status	equ	0xFD8
  4682                           
  4683 ;; *************** function _init_ultrasonic *****************
  4684 ;; Defined at:
  4685 ;;		line 227 in file "obstacle_avoidance.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;		None
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;		None
  4690 ;; Return value:  Size  Location     Type
  4691 ;;		None               void
  4692 ;; Registers used:
  4693 ;;		wreg, status,2
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4699 ;;      Params:         0       0       0       0       0       0       0       0       0
  4700 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4701 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4702 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4703 ;;Total ram usage:        0 bytes
  4704 ;; Hardware stack levels used:    1
  4705 ;; This function calls:
  4706 ;;		Nothing
  4707 ;; This function is called by:
  4708 ;;		_main
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           	psect	text18
  4713  005A98                     __ptext18:
  4714                           	opt stack 0
  4715  005A98                     _init_ultrasonic:
  4716                           	opt stack 30
  4717                           
  4718                           ;obstacle_avoidance.c: 229: TRISBbits.RB2=0;
  4719                           
  4720                           ;incstack = 0
  4721  005A98  9493               	bcf	3987,2,c	;volatile
  4722                           
  4723                           ;obstacle_avoidance.c: 230: TRISAbits.RA0=1;
  4724  005A9A  8092               	bsf	3986,0,c	;volatile
  4725                           
  4726                           ;obstacle_avoidance.c: 231: TRISBbits.RB3=0;
  4727  005A9C  9693               	bcf	3987,3,c	;volatile
  4728                           
  4729                           ;obstacle_avoidance.c: 232: TRISAbits.RA1=1;
  4730  005A9E  8292               	bsf	3986,1,c	;volatile
  4731                           
  4732                           ;obstacle_avoidance.c: 233: TRISBbits.RB4=0;
  4733  005AA0  9893               	bcf	3987,4,c	;volatile
  4734                           
  4735                           ;obstacle_avoidance.c: 234: TRISDbits.RD4=1;
  4736  005AA2  8895               	bsf	3989,4,c	;volatile
  4737                           
  4738                           ;obstacle_avoidance.c: 235: TRISBbits.RB5=0;
  4739  005AA4  9A93               	bcf	3987,5,c	;volatile
  4740                           
  4741                           ;obstacle_avoidance.c: 236: TRISDbits.RD5=1;
  4742  005AA6  8A95               	bsf	3989,5,c	;volatile
  4743                           
  4744                           ;obstacle_avoidance.c: 237: TRISBbits.RB6=0;
  4745  005AA8  9C93               	bcf	3987,6,c	;volatile
  4746                           
  4747                           ;obstacle_avoidance.c: 238: TRISDbits.RD6=1;
  4748  005AAA  8C95               	bsf	3989,6,c	;volatile
  4749                           
  4750                           ;obstacle_avoidance.c: 239: TRISBbits.RB7=0;
  4751  005AAC  9E93               	bcf	3987,7,c	;volatile
  4752                           
  4753                           ;obstacle_avoidance.c: 240: TRISDbits.RD7=1;
  4754  005AAE  8E95               	bsf	3989,7,c	;volatile
  4755                           
  4756                           ;obstacle_avoidance.c: 243: PORTBbits.RB2=0;
  4757  005AB0  9481               	bcf	3969,2,c	;volatile
  4758                           
  4759                           ;obstacle_avoidance.c: 244: PORTAbits.RA0=0;
  4760  005AB2  9080               	bcf	3968,0,c	;volatile
  4761                           
  4762                           ;obstacle_avoidance.c: 245: PORTBbits.RB3=0;
  4763  005AB4  9681               	bcf	3969,3,c	;volatile
  4764                           
  4765                           ;obstacle_avoidance.c: 246: PORTAbits.RA1=0;
  4766  005AB6  9280               	bcf	3968,1,c	;volatile
  4767                           
  4768                           ;obstacle_avoidance.c: 247: PORTBbits.RB4=0;
  4769  005AB8  9881               	bcf	3969,4,c	;volatile
  4770                           
  4771                           ;obstacle_avoidance.c: 248: PORTDbits.RD4=0;
  4772  005ABA  9883               	bcf	3971,4,c	;volatile
  4773                           
  4774                           ;obstacle_avoidance.c: 249: PORTBbits.RB5=0;
  4775  005ABC  9A81               	bcf	3969,5,c	;volatile
  4776                           
  4777                           ;obstacle_avoidance.c: 250: PORTDbits.RD5=0;
  4778  005ABE  9A83               	bcf	3971,5,c	;volatile
  4779                           
  4780                           ;obstacle_avoidance.c: 251: PORTBbits.RB6=0;
  4781  005AC0  9C81               	bcf	3969,6,c	;volatile
  4782                           
  4783                           ;obstacle_avoidance.c: 252: PORTDbits.RD6=0;
  4784  005AC2  9C83               	bcf	3971,6,c	;volatile
  4785                           
  4786                           ;obstacle_avoidance.c: 253: PORTBbits.RB7=0;
  4787  005AC4  9E81               	bcf	3969,7,c	;volatile
  4788                           
  4789                           ;obstacle_avoidance.c: 254: PORTDbits.RD7=0;
  4790  005AC6  9E83               	bcf	3971,7,c	;volatile
  4791                           
  4792                           ;obstacle_avoidance.c: 257: T1CON=0xB0;
  4793  005AC8  0EB0               	movlw	176
  4794  005ACA  6ECD               	movwf	4045,c	;volatile
  4795                           
  4796                           ;obstacle_avoidance.c: 258: T3CON=0x48;
  4797  005ACC  0E48               	movlw	72
  4798  005ACE  6EB1               	movwf	4017,c	;volatile
  4799                           
  4800                           ;obstacle_avoidance.c: 259: TMR1=0x0000;
  4801  005AD0  0E00               	movlw	0
  4802  005AD2  6ECF               	movwf	4047,c	;volatile
  4803  005AD4  0E00               	movlw	0
  4804  005AD6  6ECE               	movwf	4046,c	;volatile
  4805                           
  4806                           ;obstacle_avoidance.c: 260: ADCON0=0x00;
  4807  005AD8  0E00               	movlw	0
  4808  005ADA  6EC2               	movwf	4034,c	;volatile
  4809                           
  4810                           ;obstacle_avoidance.c: 261: ADCON1=0x0F;
  4811  005ADC  0E0F               	movlw	15
  4812  005ADE  6EC1               	movwf	4033,c	;volatile
  4813  005AE0  0012               	return	
  4814  005AE2                     __end_of_init_ultrasonic:
  4815                           	opt stack 0
  4816                           tblptru	equ	0xFF8
  4817                           tblptrh	equ	0xFF7
  4818                           tblptrl	equ	0xFF6
  4819                           tablat	equ	0xFF5
  4820                           prodh	equ	0xFF4
  4821                           prodl	equ	0xFF3
  4822                           postinc0	equ	0xFEE
  4823                           wreg	equ	0xFE8
  4824                           postinc1	equ	0xFE6
  4825                           postdec1	equ	0xFE5
  4826                           fsr1h	equ	0xFE2
  4827                           fsr1l	equ	0xFE1
  4828                           indf2	equ	0xFDF
  4829                           postinc2	equ	0xFDE
  4830                           postdec2	equ	0xFDD
  4831                           fsr2h	equ	0xFDA
  4832                           fsr2l	equ	0xFD9
  4833                           status	equ	0xFD8
  4834                           
  4835 ;; *************** function _init_lcd *****************
  4836 ;; Defined at:
  4837 ;;		line 614 in file "obstacle_avoidance.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;		None
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;		None
  4842 ;; Return value:  Size  Location     Type
  4843 ;;		None               void
  4844 ;; Registers used:
  4845 ;;		wreg, status,2, status,0, cstack
  4846 ;; Tracked objects:
  4847 ;;		On entry : 0/0
  4848 ;;		On exit  : 0/0
  4849 ;;		Unchanged: 0/0
  4850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4851 ;;      Params:         0       0       0       0       0       0       0       0       0
  4852 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4853 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4854 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4855 ;;Total ram usage:        0 bytes
  4856 ;; Hardware stack levels used:    1
  4857 ;; Hardware stack levels required when called:    2
  4858 ;; This function calls:
  4859 ;;		_lcdcmd
  4860 ;;		_lcdcmd_4bit
  4861 ;;		_long_delay
  4862 ;; This function is called by:
  4863 ;;		_main
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           	psect	text19
  4868  005D38                     __ptext19:
  4869                           	opt stack 0
  4870  005D38                     _init_lcd:
  4871                           	opt stack 28
  4872                           
  4873                           ;obstacle_avoidance.c: 616: TRISD=0;
  4874                           
  4875                           ;incstack = 0
  4876  005D38  0E00               	movlw	0
  4877  005D3A  6E95               	movwf	3989,c	;volatile
  4878                           
  4879                           ;obstacle_avoidance.c: 617: TRISC=0;
  4880  005D3C  0E00               	movlw	0
  4881  005D3E  6E94               	movwf	3988,c	;volatile
  4882                           
  4883                           ;obstacle_avoidance.c: 618: PORTCbits.RC1=0;
  4884  005D40  9282               	bcf	3970,1,c	;volatile
  4885                           
  4886                           ;obstacle_avoidance.c: 619: PORTCbits.RC2=0;
  4887  005D42  9482               	bcf	3970,2,c	;volatile
  4888                           
  4889                           ;obstacle_avoidance.c: 620: long_delay(200);
  4890  005D44  0E00               	movlw	0
  4891  005D46  6E02               	movwf	long_delay@a+1,c
  4892  005D48  0EC8               	movlw	200
  4893  005D4A  6E01               	movwf	long_delay@a,c
  4894  005D4C  EC87  F02C         	call	_long_delay	;wreg free
  4895                           
  4896                           ;obstacle_avoidance.c: 621: lcdcmd(0x30);
  4897  005D50  0E30               	movlw	48
  4898  005D52  EC24  F02C         	call	_lcdcmd
  4899                           
  4900                           ;obstacle_avoidance.c: 622: long_delay(80);
  4901  005D56  0E00               	movlw	0
  4902  005D58  6E02               	movwf	long_delay@a+1,c
  4903  005D5A  0E50               	movlw	80
  4904  005D5C  6E01               	movwf	long_delay@a,c
  4905  005D5E  EC87  F02C         	call	_long_delay	;wreg free
  4906                           
  4907                           ;obstacle_avoidance.c: 623: lcdcmd(0x30);
  4908  005D62  0E30               	movlw	48
  4909  005D64  EC24  F02C         	call	_lcdcmd
  4910                           
  4911                           ;obstacle_avoidance.c: 624: long_delay(1);
  4912  005D68  0E00               	movlw	0
  4913  005D6A  6E02               	movwf	long_delay@a+1,c
  4914  005D6C  0E01               	movlw	1
  4915  005D6E  6E01               	movwf	long_delay@a,c
  4916  005D70  EC87  F02C         	call	_long_delay	;wreg free
  4917                           
  4918                           ;obstacle_avoidance.c: 625: lcdcmd(0x30);
  4919  005D74  0E30               	movlw	48
  4920  005D76  EC24  F02C         	call	_lcdcmd
  4921                           
  4922                           ;obstacle_avoidance.c: 626: long_delay(41);
  4923  005D7A  0E00               	movlw	0
  4924  005D7C  6E02               	movwf	long_delay@a+1,c
  4925  005D7E  0E29               	movlw	41
  4926  005D80  6E01               	movwf	long_delay@a,c
  4927  005D82  EC87  F02C         	call	_long_delay	;wreg free
  4928                           
  4929                           ;obstacle_avoidance.c: 627: lcdcmd(0x20);
  4930  005D86  0E20               	movlw	32
  4931  005D88  EC24  F02C         	call	_lcdcmd
  4932                           
  4933                           ;obstacle_avoidance.c: 628: long_delay(100);
  4934  005D8C  0E00               	movlw	0
  4935  005D8E  6E02               	movwf	long_delay@a+1,c
  4936  005D90  0E64               	movlw	100
  4937  005D92  6E01               	movwf	long_delay@a,c
  4938  005D94  EC87  F02C         	call	_long_delay	;wreg free
  4939                           
  4940                           ;obstacle_avoidance.c: 629: lcdcmd_4bit(0x0E);
  4941  005D98  0E0E               	movlw	14
  4942  005D9A  ECC2  F02C         	call	_lcdcmd_4bit
  4943                           
  4944                           ;obstacle_avoidance.c: 630: lcdcmd_4bit(0x01);
  4945  005D9E  0E01               	movlw	1
  4946  005DA0  ECC2  F02C         	call	_lcdcmd_4bit
  4947                           
  4948                           ;obstacle_avoidance.c: 631: long_delay(17);
  4949  005DA4  0E00               	movlw	0
  4950  005DA6  6E02               	movwf	long_delay@a+1,c
  4951  005DA8  0E11               	movlw	17
  4952  005DAA  6E01               	movwf	long_delay@a,c
  4953  005DAC  EC87  F02C         	call	_long_delay	;wreg free
  4954                           
  4955                           ;obstacle_avoidance.c: 632: lcdcmd_4bit(0x06);
  4956  005DB0  0E06               	movlw	6
  4957  005DB2  ECC2  F02C         	call	_lcdcmd_4bit
  4958                           
  4959                           ;obstacle_avoidance.c: 633: lcdcmd_4bit(0x28);
  4960  005DB6  0E28               	movlw	40
  4961  005DB8  ECC2  F02C         	call	_lcdcmd_4bit
  4962                           
  4963                           ;obstacle_avoidance.c: 634: lcdcmd_4bit(0x80);
  4964  005DBC  0E80               	movlw	128
  4965  005DBE  ECC2  F02C         	call	_lcdcmd_4bit
  4966  005DC2  0012               	return	
  4967  005DC4                     __end_of_init_lcd:
  4968                           	opt stack 0
  4969                           tblptru	equ	0xFF8
  4970                           tblptrh	equ	0xFF7
  4971                           tblptrl	equ	0xFF6
  4972                           tablat	equ	0xFF5
  4973                           prodh	equ	0xFF4
  4974                           prodl	equ	0xFF3
  4975                           postinc0	equ	0xFEE
  4976                           wreg	equ	0xFE8
  4977                           postinc1	equ	0xFE6
  4978                           postdec1	equ	0xFE5
  4979                           fsr1h	equ	0xFE2
  4980                           fsr1l	equ	0xFE1
  4981                           indf2	equ	0xFDF
  4982                           postinc2	equ	0xFDE
  4983                           postdec2	equ	0xFDD
  4984                           fsr2h	equ	0xFDA
  4985                           fsr2l	equ	0xFD9
  4986                           status	equ	0xFD8
  4987                           
  4988 ;; *************** function _long_delay *****************
  4989 ;; Defined at:
  4990 ;;		line 675 in file "obstacle_avoidance.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;  a               2    0[COMRAM] int 
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;  x               2    3[COMRAM] int 
  4995 ;; Return value:  Size  Location     Type
  4996 ;;		None               void
  4997 ;; Registers used:
  4998 ;;		wreg, status,2, status,0
  4999 ;; Tracked objects:
  5000 ;;		On entry : 0/0
  5001 ;;		On exit  : 0/0
  5002 ;;		Unchanged: 0/0
  5003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5004 ;;      Params:         2       0       0       0       0       0       0       0       0
  5005 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5006 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5007 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5008 ;;Total ram usage:        5 bytes
  5009 ;; Hardware stack levels used:    1
  5010 ;; This function calls:
  5011 ;;		Nothing
  5012 ;; This function is called by:
  5013 ;;		_init_lcd
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           
  5017                           	psect	text20
  5018  00590E                     __ptext20:
  5019                           	opt stack 0
  5020  00590E                     _long_delay:
  5021                           	opt stack 29
  5022                           
  5023                           ;obstacle_avoidance.c: 678: T0CON=0X08;
  5024                           
  5025                           ;incstack = 0
  5026  00590E  0E08               	movlw	8
  5027  005910  6ED5               	movwf	4053,c	;volatile
  5028                           
  5029                           ;obstacle_avoidance.c: 679: for (int x=1; x<=a; x++ )
  5030  005912  0E00               	movlw	0
  5031  005914  6E05               	movwf	long_delay@x+1,c
  5032  005916  0E01               	movlw	1
  5033  005918  6E04               	movwf	long_delay@x,c
  5034  00591A  D00B               	goto	l2359
  5035  00591C                     l2353:
  5036                           
  5037                           ;obstacle_avoidance.c: 680: {
  5038                           ;obstacle_avoidance.c: 681: TMR0H=0XFE;
  5039  00591C  0EFE               	movlw	254
  5040  00591E  6ED7               	movwf	4055,c	;volatile
  5041                           
  5042                           ;obstacle_avoidance.c: 682: TMR0L=0X0C;
  5043  005920  0E0C               	movlw	12
  5044  005922  6ED6               	movwf	4054,c	;volatile
  5045                           
  5046                           ;obstacle_avoidance.c: 684: T0CONbits.TMR0ON=1;
  5047  005924  8ED5               	bsf	4053,7,c	;volatile
  5048  005926                     l345:
  5049  005926  A4F2               	btfss	intcon,2,c	;volatile
  5050  005928  D7FE               	goto	l345
  5051                           
  5052                           ;obstacle_avoidance.c: 686: T0CONbits.TMR0ON=0;
  5053  00592A  9ED5               	bcf	4053,7,c	;volatile
  5054                           
  5055                           ;obstacle_avoidance.c: 687: INTCONbits.TMR0IF=0;
  5056  00592C  94F2               	bcf	intcon,2,c	;volatile
  5057  00592E  4A04               	infsnz	long_delay@x,f,c
  5058  005930  2A05               	incf	long_delay@x+1,f,c
  5059  005932                     l2359:
  5060  005932  5002               	movf	long_delay@a+1,w,c
  5061  005934  0A80               	xorlw	128
  5062  005936  6E03               	movwf	??_long_delay& (0+255),c
  5063  005938  5004               	movf	long_delay@x,w,c
  5064  00593A  5C01               	subwf	long_delay@a,w,c
  5065  00593C  5005               	movf	long_delay@x+1,w,c
  5066  00593E  0A80               	xorlw	128
  5067  005940  5803               	subwfb	??_long_delay& (0+255),w,c
  5068  005942  A0D8               	btfss	status,0,c
  5069  005944  0012               	return	
  5070  005946  D7EA               	goto	l2353
  5071  005948                     __end_of_long_delay:
  5072                           	opt stack 0
  5073                           tblptru	equ	0xFF8
  5074                           tblptrh	equ	0xFF7
  5075                           tblptrl	equ	0xFF6
  5076                           tablat	equ	0xFF5
  5077                           prodh	equ	0xFF4
  5078                           prodl	equ	0xFF3
  5079                           intcon	equ	0xFF2
  5080                           postinc0	equ	0xFEE
  5081                           wreg	equ	0xFE8
  5082                           postinc1	equ	0xFE6
  5083                           postdec1	equ	0xFE5
  5084                           fsr1h	equ	0xFE2
  5085                           fsr1l	equ	0xFE1
  5086                           indf2	equ	0xFDF
  5087                           postinc2	equ	0xFDE
  5088                           postdec2	equ	0xFDD
  5089                           fsr2h	equ	0xFDA
  5090                           fsr2l	equ	0xFD9
  5091                           status	equ	0xFD8
  5092                           
  5093 ;; *************** function _lcdcmd_4bit *****************
  5094 ;; Defined at:
  5095 ;;		line 647 in file "obstacle_avoidance.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;  value           1    wreg     unsigned char 
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;  value           1    5[COMRAM] unsigned char 
  5100 ;; Return value:  Size  Location     Type
  5101 ;;		None               void
  5102 ;; Registers used:
  5103 ;;		wreg, status,2, status,0, cstack
  5104 ;; Tracked objects:
  5105 ;;		On entry : 0/0
  5106 ;;		On exit  : 0/0
  5107 ;;		Unchanged: 0/0
  5108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5109 ;;      Params:         0       0       0       0       0       0       0       0       0
  5110 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5112 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5113 ;;Total ram usage:        1 bytes
  5114 ;; Hardware stack levels used:    1
  5115 ;; Hardware stack levels required when called:    1
  5116 ;; This function calls:
  5117 ;;		_s_delay
  5118 ;; This function is called by:
  5119 ;;		_main
  5120 ;;		_init_lcd
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           	psect	text21
  5125  005984                     __ptext21:
  5126                           	opt stack 0
  5127  005984                     _lcdcmd_4bit:
  5128                           	opt stack 29
  5129                           
  5130                           ;incstack = 0
  5131                           ;lcdcmd_4bit@value stored from wreg
  5132  005984  6E06               	movwf	lcdcmd_4bit@value,c
  5133                           
  5134                           ;obstacle_avoidance.c: 649: PORTD=(value & 0xF0)>>4;
  5135  005986  3806               	swapf	lcdcmd_4bit@value,w,c
  5136  005988  0B0F               	andlw	15
  5137  00598A  0B0F               	andlw	15
  5138  00598C  6E83               	movwf	3971,c	;volatile
  5139                           
  5140                           ;obstacle_avoidance.c: 650: PORTCbits.RC0=0;
  5141  00598E  9082               	bcf	3970,0,c	;volatile
  5142                           
  5143                           ;obstacle_avoidance.c: 651: PORTCbits.RC2=1;
  5144  005990  8482               	bsf	3970,2,c	;volatile
  5145                           
  5146                           ;obstacle_avoidance.c: 652: s_delay(1);
  5147  005992  0E00               	movlw	0
  5148  005994  6E02               	movwf	s_delay@a+1,c
  5149  005996  0E01               	movlw	1
  5150  005998  6E01               	movwf	s_delay@a,c
  5151  00599A  EC6B  F02C         	call	_s_delay	;wreg free
  5152                           
  5153                           ;obstacle_avoidance.c: 653: PORTCbits.RC2=0;
  5154  00599E  9482               	bcf	3970,2,c	;volatile
  5155                           
  5156                           ;obstacle_avoidance.c: 654: PORTD=(value & 0x0F);
  5157  0059A0  5006               	movf	lcdcmd_4bit@value,w,c
  5158  0059A2  0B0F               	andlw	15
  5159  0059A4  6E83               	movwf	3971,c	;volatile
  5160                           
  5161                           ;obstacle_avoidance.c: 655: PORTCbits.RC0=0;
  5162  0059A6  9082               	bcf	3970,0,c	;volatile
  5163                           
  5164                           ;obstacle_avoidance.c: 656: PORTCbits.RC2=1;
  5165  0059A8  8482               	bsf	3970,2,c	;volatile
  5166                           
  5167                           ;obstacle_avoidance.c: 657: s_delay(1);
  5168  0059AA  0E00               	movlw	0
  5169  0059AC  6E02               	movwf	s_delay@a+1,c
  5170  0059AE  0E01               	movlw	1
  5171  0059B0  6E01               	movwf	s_delay@a,c
  5172  0059B2  EC6B  F02C         	call	_s_delay	;wreg free
  5173                           
  5174                           ;obstacle_avoidance.c: 658: PORTCbits.RC2=0;
  5175  0059B6  9482               	bcf	3970,2,c	;volatile
  5176                           
  5177                           ;obstacle_avoidance.c: 659: s_delay(41);
  5178  0059B8  0E00               	movlw	0
  5179  0059BA  6E02               	movwf	s_delay@a+1,c
  5180  0059BC  0E29               	movlw	41
  5181  0059BE  6E01               	movwf	s_delay@a,c
  5182  0059C0  EC6B  F02C         	call	_s_delay	;wreg free
  5183  0059C4  0012               	return	
  5184  0059C6                     __end_of_lcdcmd_4bit:
  5185                           	opt stack 0
  5186                           tblptru	equ	0xFF8
  5187                           tblptrh	equ	0xFF7
  5188                           tblptrl	equ	0xFF6
  5189                           tablat	equ	0xFF5
  5190                           prodh	equ	0xFF4
  5191                           prodl	equ	0xFF3
  5192                           intcon	equ	0xFF2
  5193                           postinc0	equ	0xFEE
  5194                           wreg	equ	0xFE8
  5195                           postinc1	equ	0xFE6
  5196                           postdec1	equ	0xFE5
  5197                           fsr1h	equ	0xFE2
  5198                           fsr1l	equ	0xFE1
  5199                           indf2	equ	0xFDF
  5200                           postinc2	equ	0xFDE
  5201                           postdec2	equ	0xFDD
  5202                           fsr2h	equ	0xFDA
  5203                           fsr2l	equ	0xFD9
  5204                           status	equ	0xFD8
  5205                           
  5206 ;; *************** function _lcdcmd *****************
  5207 ;; Defined at:
  5208 ;;		line 638 in file "obstacle_avoidance.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  value           1    wreg     unsigned char 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  value           1    5[COMRAM] unsigned char 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;		None               void
  5215 ;; Registers used:
  5216 ;;		wreg, status,2, status,0, cstack
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5222 ;;      Params:         0       0       0       0       0       0       0       0       0
  5223 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5224 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5225 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5226 ;;Total ram usage:        1 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:    1
  5229 ;; This function calls:
  5230 ;;		_s_delay
  5231 ;; This function is called by:
  5232 ;;		_init_lcd
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text22
  5237  005848                     __ptext22:
  5238                           	opt stack 0
  5239  005848                     _lcdcmd:
  5240                           	opt stack 28
  5241                           
  5242                           ;incstack = 0
  5243                           ;lcdcmd@value stored from wreg
  5244  005848  6E06               	movwf	lcdcmd@value,c
  5245                           
  5246                           ;obstacle_avoidance.c: 640: PORTD=(value & 0xF0)>>4;
  5247  00584A  3806               	swapf	lcdcmd@value,w,c
  5248  00584C  0B0F               	andlw	15
  5249  00584E  0B0F               	andlw	15
  5250  005850  6E83               	movwf	3971,c	;volatile
  5251                           
  5252                           ;obstacle_avoidance.c: 641: PORTCbits.RC0=0;
  5253  005852  9082               	bcf	3970,0,c	;volatile
  5254                           
  5255                           ;obstacle_avoidance.c: 642: PORTCbits.RC2=1;
  5256  005854  8482               	bsf	3970,2,c	;volatile
  5257                           
  5258                           ;obstacle_avoidance.c: 643: s_delay(1);
  5259  005856  0E00               	movlw	0
  5260  005858  6E02               	movwf	s_delay@a+1,c
  5261  00585A  0E01               	movlw	1
  5262  00585C  6E01               	movwf	s_delay@a,c
  5263  00585E  EC6B  F02C         	call	_s_delay	;wreg free
  5264                           
  5265                           ;obstacle_avoidance.c: 644: PORTCbits.RC2=0;
  5266  005862  9482               	bcf	3970,2,c	;volatile
  5267  005864  0012               	return	
  5268  005866                     __end_of_lcdcmd:
  5269                           	opt stack 0
  5270                           tblptru	equ	0xFF8
  5271                           tblptrh	equ	0xFF7
  5272                           tblptrl	equ	0xFF6
  5273                           tablat	equ	0xFF5
  5274                           prodh	equ	0xFF4
  5275                           prodl	equ	0xFF3
  5276                           intcon	equ	0xFF2
  5277                           postinc0	equ	0xFEE
  5278                           wreg	equ	0xFE8
  5279                           postinc1	equ	0xFE6
  5280                           postdec1	equ	0xFE5
  5281                           fsr1h	equ	0xFE2
  5282                           fsr1l	equ	0xFE1
  5283                           indf2	equ	0xFDF
  5284                           postinc2	equ	0xFDE
  5285                           postdec2	equ	0xFDD
  5286                           fsr2h	equ	0xFDA
  5287                           fsr2l	equ	0xFD9
  5288                           status	equ	0xFD8
  5289                           
  5290 ;; *************** function _s_delay *****************
  5291 ;; Defined at:
  5292 ;;		line 598 in file "obstacle_avoidance.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;  a               2    0[COMRAM] int 
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;  x               2    3[COMRAM] int 
  5297 ;; Return value:  Size  Location     Type
  5298 ;;		None               void
  5299 ;; Registers used:
  5300 ;;		wreg, status,2, status,0
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/0
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5306 ;;      Params:         2       0       0       0       0       0       0       0       0
  5307 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5308 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5309 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5310 ;;Total ram usage:        5 bytes
  5311 ;; Hardware stack levels used:    1
  5312 ;; This function calls:
  5313 ;;		Nothing
  5314 ;; This function is called by:
  5315 ;;		_read_ultrasonic_s4
  5316 ;;		_read_ultrasonic_s5
  5317 ;;		_read_ultrasonic_s6
  5318 ;;		_read_ultrasonic_s7
  5319 ;;		_read_ultrasonic_s8
  5320 ;;		_lcdcmd
  5321 ;;		_lcdcmd_4bit
  5322 ;;		_lcddata_4bit
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           	psect	text23
  5327  0058D6                     __ptext23:
  5328                           	opt stack 0
  5329  0058D6                     _s_delay:
  5330                           	opt stack 28
  5331                           
  5332                           ;obstacle_avoidance.c: 600: T0CON=0X08;
  5333                           
  5334                           ;incstack = 0
  5335  0058D6  0E08               	movlw	8
  5336  0058D8  6ED5               	movwf	4053,c	;volatile
  5337                           
  5338                           ;obstacle_avoidance.c: 601: for (int x=1; x<=a; x++ )
  5339  0058DA  0E00               	movlw	0
  5340  0058DC  6E05               	movwf	s_delay@x+1,c
  5341  0058DE  0E01               	movlw	1
  5342  0058E0  6E04               	movwf	s_delay@x,c
  5343  0058E2  D00A               	goto	l1911
  5344  0058E4                     l323:
  5345                           
  5346                           ;obstacle_avoidance.c: 602: {
  5347                           ;obstacle_avoidance.c: 603: TMR0H=0XFF;
  5348  0058E4  68D7               	setf	4055,c	;volatile
  5349                           
  5350                           ;obstacle_avoidance.c: 604: TMR0L=0XFE;
  5351  0058E6  0EFE               	movlw	254
  5352  0058E8  6ED6               	movwf	4054,c	;volatile
  5353                           
  5354                           ;obstacle_avoidance.c: 606: T0CONbits.TMR0ON=1;
  5355  0058EA  8ED5               	bsf	4053,7,c	;volatile
  5356  0058EC                     l324:
  5357  0058EC  A4F2               	btfss	intcon,2,c	;volatile
  5358  0058EE  D7FE               	goto	l324
  5359                           
  5360                           ;obstacle_avoidance.c: 608: T0CONbits.TMR0ON=0;
  5361  0058F0  9ED5               	bcf	4053,7,c	;volatile
  5362                           
  5363                           ;obstacle_avoidance.c: 609: INTCONbits.TMR0IF=0;
  5364  0058F2  94F2               	bcf	intcon,2,c	;volatile
  5365  0058F4  4A04               	infsnz	s_delay@x,f,c
  5366  0058F6  2A05               	incf	s_delay@x+1,f,c
  5367  0058F8                     l1911:
  5368  0058F8  5002               	movf	s_delay@a+1,w,c
  5369  0058FA  0A80               	xorlw	128
  5370  0058FC  6E03               	movwf	??_s_delay& (0+255),c
  5371  0058FE  5004               	movf	s_delay@x,w,c
  5372  005900  5C01               	subwf	s_delay@a,w,c
  5373  005902  5005               	movf	s_delay@x+1,w,c
  5374  005904  0A80               	xorlw	128
  5375  005906  5803               	subwfb	??_s_delay& (0+255),w,c
  5376  005908  A0D8               	btfss	status,0,c
  5377  00590A  0012               	return	
  5378  00590C  D7EB               	goto	l323
  5379  00590E                     __end_of_s_delay:
  5380                           	opt stack 0
  5381                           tblptru	equ	0xFF8
  5382                           tblptrh	equ	0xFF7
  5383                           tblptrl	equ	0xFF6
  5384                           tablat	equ	0xFF5
  5385                           prodh	equ	0xFF4
  5386                           prodl	equ	0xFF3
  5387                           intcon	equ	0xFF2
  5388                           postinc0	equ	0xFEE
  5389                           wreg	equ	0xFE8
  5390                           postinc1	equ	0xFE6
  5391                           postdec1	equ	0xFE5
  5392                           fsr1h	equ	0xFE2
  5393                           fsr1l	equ	0xFE1
  5394                           indf2	equ	0xFDF
  5395                           postinc2	equ	0xFDE
  5396                           postdec2	equ	0xFDD
  5397                           fsr2h	equ	0xFDA
  5398                           fsr2l	equ	0xFD9
  5399                           status	equ	0xFD8
  5400                           
  5401 ;; *************** function _SetWheelSpeed *****************
  5402 ;; Defined at:
  5403 ;;		line 575 in file "obstacle_avoidance.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;  lw              2    3[COMRAM] int 
  5406 ;;  rw              2    5[COMRAM] int 
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;		None
  5409 ;; Return value:  Size  Location     Type
  5410 ;;		None               void
  5411 ;; Registers used:
  5412 ;;		wreg, status,2, status,0, cstack
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5418 ;;      Params:         4       0       0       0       0       0       0       0       0
  5419 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5420 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5421 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5422 ;;Total ram usage:        4 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; Hardware stack levels required when called:    2
  5425 ;; This function calls:
  5426 ;;		_IdleI2C
  5427 ;;		_WriteI2C
  5428 ;; This function is called by:
  5429 ;;		_main
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433                           	psect	text24
  5434  005B84                     __ptext24:
  5435                           	opt stack 0
  5436  005B84                     _SetWheelSpeed:
  5437                           	opt stack 28
  5438                           
  5439                           ;obstacle_avoidance.c: 578: IdleI2C();
  5440                           
  5441                           ;incstack = 0
  5442  005B84  EC0D  F02C         	call	_IdleI2C	;wreg free
  5443                           
  5444                           ;obstacle_avoidance.c: 579: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  5445  005B88  80C5               	bsf	4037,0,c	;volatile
  5446  005B8A                     l307:
  5447  005B8A  B0C5               	btfsc	4037,0,c	;volatile
  5448  005B8C  D7FE               	goto	l307
  5449                           
  5450                           ;obstacle_avoidance.c: 580: IdleI2C();
  5451  005B8E  EC0D  F02C         	call	_IdleI2C	;wreg free
  5452                           
  5453                           ;obstacle_avoidance.c: 581: WriteI2C(slave_lw);
  5454  005B92  0100               	movlb	0	; () banked
  5455  005B94  51E7               	movf	_slave_lw& (0+255),w,b
  5456  005B96  ECEC  F02D         	call	_WriteI2C
  5457                           
  5458                           ;obstacle_avoidance.c: 582: IdleI2C();
  5459  005B9A  EC0D  F02C         	call	_IdleI2C	;wreg free
  5460                           
  5461                           ;obstacle_avoidance.c: 583: WriteI2C(lw);
  5462  005B9E  5004               	movf	SetWheelSpeed@lw,w,c
  5463  005BA0  ECEC  F02D         	call	_WriteI2C
  5464                           
  5465                           ;obstacle_avoidance.c: 584: IdleI2C();
  5466  005BA4  EC0D  F02C         	call	_IdleI2C	;wreg free
  5467                           
  5468                           ;obstacle_avoidance.c: 585: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  5469  005BA8  84C5               	bsf	4037,2,c	;volatile
  5470  005BAA                     l310:
  5471  005BAA  B4C5               	btfsc	4037,2,c	;volatile
  5472  005BAC  D7FE               	goto	l310
  5473                           
  5474                           ;obstacle_avoidance.c: 587: IdleI2C();
  5475  005BAE  EC0D  F02C         	call	_IdleI2C	;wreg free
  5476                           
  5477                           ;obstacle_avoidance.c: 588: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  5478  005BB2  80C5               	bsf	4037,0,c	;volatile
  5479  005BB4                     l313:
  5480  005BB4  B0C5               	btfsc	4037,0,c	;volatile
  5481  005BB6  D7FE               	goto	l313
  5482                           
  5483                           ;obstacle_avoidance.c: 589: IdleI2C();
  5484  005BB8  EC0D  F02C         	call	_IdleI2C	;wreg free
  5485                           
  5486                           ;obstacle_avoidance.c: 590: WriteI2C(slave_rw);
  5487  005BBC  505F               	movf	_slave_rw,w,c
  5488  005BBE  ECEC  F02D         	call	_WriteI2C
  5489                           
  5490                           ;obstacle_avoidance.c: 591: IdleI2C();
  5491  005BC2  EC0D  F02C         	call	_IdleI2C	;wreg free
  5492                           
  5493                           ;obstacle_avoidance.c: 592: WriteI2C(rw);
  5494  005BC6  5006               	movf	SetWheelSpeed@rw,w,c
  5495  005BC8  ECEC  F02D         	call	_WriteI2C
  5496                           
  5497                           ;obstacle_avoidance.c: 593: IdleI2C();
  5498  005BCC  EC0D  F02C         	call	_IdleI2C	;wreg free
  5499                           
  5500                           ;obstacle_avoidance.c: 594: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  5501  005BD0  84C5               	bsf	4037,2,c	;volatile
  5502  005BD2                     l316:
  5503  005BD2  A4C5               	btfss	4037,2,c	;volatile
  5504  005BD4  0012               	return	
  5505  005BD6  D7FD               	goto	l316
  5506  005BD8                     __end_of_SetWheelSpeed:
  5507                           	opt stack 0
  5508                           tblptru	equ	0xFF8
  5509                           tblptrh	equ	0xFF7
  5510                           tblptrl	equ	0xFF6
  5511                           tablat	equ	0xFF5
  5512                           prodh	equ	0xFF4
  5513                           prodl	equ	0xFF3
  5514                           intcon	equ	0xFF2
  5515                           postinc0	equ	0xFEE
  5516                           wreg	equ	0xFE8
  5517                           postinc1	equ	0xFE6
  5518                           postdec1	equ	0xFE5
  5519                           fsr1h	equ	0xFE2
  5520                           fsr1l	equ	0xFE1
  5521                           indf2	equ	0xFDF
  5522                           postinc2	equ	0xFDE
  5523                           postdec2	equ	0xFDD
  5524                           fsr2h	equ	0xFDA
  5525                           fsr2l	equ	0xFD9
  5526                           status	equ	0xFD8
  5527                           
  5528 ;; *************** function _WriteI2C *****************
  5529 ;; Defined at:
  5530 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_writ.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;  data_out        1    wreg     unsigned char 
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;  data_out        1    2[COMRAM] unsigned char 
  5535 ;; Return value:  Size  Location     Type
  5536 ;;                  1    wreg      char 
  5537 ;; Registers used:
  5538 ;;		wreg, status,2, status,0, cstack
  5539 ;; Tracked objects:
  5540 ;;		On entry : 0/0
  5541 ;;		On exit  : 0/0
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5544 ;;      Params:         0       0       0       0       0       0       0       0       0
  5545 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5546 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5547 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5548 ;;Total ram usage:        2 bytes
  5549 ;; Hardware stack levels used:    1
  5550 ;; Hardware stack levels required when called:    1
  5551 ;; This function calls:
  5552 ;;		_IdleI2C
  5553 ;; This function is called by:
  5554 ;;		_SetWheelSpeed
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           	psect	text25
  5559  005BD8                     __ptext25:
  5560                           	opt stack 0
  5561  005BD8                     _WriteI2C:
  5562                           	opt stack 28
  5563                           
  5564                           ;incstack = 0
  5565                           ;WriteI2C@data_out stored from wreg
  5566  005BD8  6E03               	movwf	WriteI2C@data_out,c
  5567  005BDA  C003  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  5568  005BDE  BEC6               	btfsc	4038,7,c	;volatile
  5569  005BE0  D02C               	goto	l393
  5570                           
  5571                           ;	Return value of _WriteI2C is never used
  5572  005BE2  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  5573  005BE6  0E0F               	movlw	15
  5574  005BE8  1602               	andwf	??_WriteI2C,f,c
  5575  005BEA  5002               	movf	??_WriteI2C,w,c
  5576  005BEC  0A08               	xorlw	8
  5577  005BEE  B4D8               	btfsc	status,2,c
  5578  005BF0  D00F               	goto	l2339
  5579  005BF2  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  5580  005BF6  0E0F               	movlw	15
  5581  005BF8  1602               	andwf	??_WriteI2C,f,c
  5582  005BFA  5002               	movf	??_WriteI2C,w,c
  5583  005BFC  0A0B               	xorlw	11
  5584  005BFE  B4D8               	btfsc	status,2,c
  5585  005C00  D007               	goto	l2339
  5586  005C02  88C6               	bsf	4038,4,c	;volatile
  5587  005C04                     l396:
  5588  005C04  A69E               	btfss	3998,3,c	;volatile
  5589  005C06  D7FE               	goto	l396
  5590  005C08  B4C7               	btfsc	4039,2,c	;volatile
  5591  005C0A  D017               	goto	l393
  5592  005C0C  50C7               	movf	4039,w,c	;volatile
  5593  005C0E  D015               	goto	l393
  5594  005C10                     l2339:
  5595  005C10  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  5596  005C14  0E0F               	movlw	15
  5597  005C16  1602               	andwf	??_WriteI2C,f,c
  5598  005C18  5002               	movf	??_WriteI2C,w,c
  5599  005C1A  0A08               	xorlw	8
  5600  005C1C  B4D8               	btfsc	status,2,c
  5601  005C1E  D008               	goto	l405
  5602  005C20  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  5603  005C24  0E0F               	movlw	15
  5604  005C26  1602               	andwf	??_WriteI2C,f,c
  5605  005C28  5002               	movf	??_WriteI2C,w,c
  5606  005C2A  0A0B               	xorlw	11
  5607  005C2C  A4D8               	btfss	status,2,c
  5608  005C2E  D005               	goto	l393
  5609  005C30                     l405:
  5610  005C30  B0C7               	btfsc	4039,0,c	;volatile
  5611  005C32  D7FE               	goto	l405
  5612  005C34  EC0D  F02C         	call	_IdleI2C	;wreg free
  5613  005C38  50C5               	movf	4037,w,c	;volatile
  5614  005C3A                     l393:
  5615  005C3A  0012               	return	
  5616  005C3C                     __end_of_WriteI2C:
  5617                           	opt stack 0
  5618                           tblptru	equ	0xFF8
  5619                           tblptrh	equ	0xFF7
  5620                           tblptrl	equ	0xFF6
  5621                           tablat	equ	0xFF5
  5622                           prodh	equ	0xFF4
  5623                           prodl	equ	0xFF3
  5624                           intcon	equ	0xFF2
  5625                           postinc0	equ	0xFEE
  5626                           wreg	equ	0xFE8
  5627                           postinc1	equ	0xFE6
  5628                           postdec1	equ	0xFE5
  5629                           fsr1h	equ	0xFE2
  5630                           fsr1l	equ	0xFE1
  5631                           indf2	equ	0xFDF
  5632                           postinc2	equ	0xFDE
  5633                           postdec2	equ	0xFDD
  5634                           fsr2h	equ	0xFDA
  5635                           fsr2l	equ	0xFD9
  5636                           status	equ	0xFD8
  5637                           
  5638 ;; *************** function _IdleI2C *****************
  5639 ;; Defined at:
  5640 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_idle.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;		None
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;		None
  5645 ;; Return value:  Size  Location     Type
  5646 ;;		None               void
  5647 ;; Registers used:
  5648 ;;		wreg, status,2, status,0
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5654 ;;      Params:         0       0       0       0       0       0       0       0       0
  5655 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5656 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5657 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5658 ;;Total ram usage:        1 bytes
  5659 ;; Hardware stack levels used:    1
  5660 ;; This function calls:
  5661 ;;		Nothing
  5662 ;; This function is called by:
  5663 ;;		_SetWheelSpeed
  5664 ;;		_WriteI2C
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	text26
  5669  00581A                     __ptext26:
  5670                           	opt stack 0
  5671  00581A                     _IdleI2C:
  5672                           	opt stack 28
  5673  00581A                     l1925:
  5674  00581A  CFC5 F001          	movff	4037,??_IdleI2C	;volatile
  5675  00581E  0E1F               	movlw	31
  5676  005820  1601               	andwf	??_IdleI2C,f,c
  5677  005822  B4D8               	btfsc	status,2,c
  5678  005824  B4C7               	btfsc	4039,2,c	;volatile
  5679  005826  D7F9               	goto	l1925
  5680  005828  0012               	return	
  5681  00582A                     __end_of_IdleI2C:
  5682                           	opt stack 0
  5683                           tblptru	equ	0xFF8
  5684                           tblptrh	equ	0xFF7
  5685                           tblptrl	equ	0xFF6
  5686                           tablat	equ	0xFF5
  5687                           prodh	equ	0xFF4
  5688                           prodl	equ	0xFF3
  5689                           intcon	equ	0xFF2
  5690                           postinc0	equ	0xFEE
  5691                           wreg	equ	0xFE8
  5692                           postinc1	equ	0xFE6
  5693                           postdec1	equ	0xFE5
  5694                           fsr1h	equ	0xFE2
  5695                           fsr1l	equ	0xFE1
  5696                           indf2	equ	0xFDF
  5697                           postinc2	equ	0xFDE
  5698                           postdec2	equ	0xFDD
  5699                           fsr2h	equ	0xFDA
  5700                           fsr2l	equ	0xFD9
  5701                           status	equ	0xFD8
  5702                           
  5703 ;; *************** function _OpenI2C *****************
  5704 ;; Defined at:
  5705 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_open.c"
  5706 ;; Parameters:    Size  Location     Type
  5707 ;;  sync_mode       1    wreg     unsigned char 
  5708 ;;  slew            1    0[COMRAM] unsigned char 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  sync_mode       1    1[COMRAM] unsigned char 
  5711 ;; Return value:  Size  Location     Type
  5712 ;;		None               void
  5713 ;; Registers used:
  5714 ;;		wreg, status,2, status,0
  5715 ;; Tracked objects:
  5716 ;;		On entry : 0/0
  5717 ;;		On exit  : 0/0
  5718 ;;		Unchanged: 0/0
  5719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5720 ;;      Params:         1       0       0       0       0       0       0       0       0
  5721 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5722 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5723 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5724 ;;Total ram usage:        2 bytes
  5725 ;; Hardware stack levels used:    1
  5726 ;; This function calls:
  5727 ;;		Nothing
  5728 ;; This function is called by:
  5729 ;;		_main
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           
  5733                           	psect	text27
  5734  00582A                     __ptext27:
  5735                           	opt stack 0
  5736  00582A                     _OpenI2C:
  5737                           	opt stack 30
  5738                           
  5739                           ;incstack = 0
  5740                           ;OpenI2C@sync_mode stored from wreg
  5741  00582A  6E02               	movwf	OpenI2C@sync_mode,c
  5742  00582C  0E3F               	movlw	63
  5743  00582E  16C7               	andwf	4039,f,c	;volatile
  5744  005830  0E00               	movlw	0
  5745  005832  6EC6               	movwf	4038,c	;volatile
  5746  005834  0E00               	movlw	0
  5747  005836  6EC5               	movwf	4037,c	;volatile
  5748  005838  5002               	movf	OpenI2C@sync_mode,w,c
  5749  00583A  12C6               	iorwf	4038,f,c	;volatile
  5750  00583C  5001               	movf	OpenI2C@slew,w,c
  5751  00583E  12C7               	iorwf	4039,f,c	;volatile
  5752  005840  8293               	bsf	3987,1,c	;volatile
  5753  005842  8093               	bsf	3987,0,c	;volatile
  5754  005844  8AC6               	bsf	4038,5,c	;volatile
  5755  005846  0012               	return	
  5756  005848                     __end_of_OpenI2C:
  5757                           	opt stack 0
  5758                           tblptru	equ	0xFF8
  5759                           tblptrh	equ	0xFF7
  5760                           tblptrl	equ	0xFF6
  5761                           tablat	equ	0xFF5
  5762                           prodh	equ	0xFF4
  5763                           prodl	equ	0xFF3
  5764                           intcon	equ	0xFF2
  5765                           postinc0	equ	0xFEE
  5766                           wreg	equ	0xFE8
  5767                           postinc1	equ	0xFE6
  5768                           postdec1	equ	0xFE5
  5769                           fsr1h	equ	0xFE2
  5770                           fsr1l	equ	0xFE1
  5771                           indf2	equ	0xFDF
  5772                           postinc2	equ	0xFDE
  5773                           postdec2	equ	0xFDD
  5774                           fsr2h	equ	0xFDA
  5775                           fsr2l	equ	0xFD9
  5776                           status	equ	0xFD8
  5777                           
  5778 ;; *************** function _Mem_values_obs *****************
  5779 ;; Defined at:
  5780 ;;		line 480 in file "obstacle_avoidance.c"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;		None
  5783 ;; Auto vars:     Size  Location     Type
  5784 ;;		None
  5785 ;; Return value:  Size  Location     Type
  5786 ;;		None               void
  5787 ;; Registers used:
  5788 ;;		wreg, status,2, status,0, prodl, cstack
  5789 ;; Tracked objects:
  5790 ;;		On entry : 0/0
  5791 ;;		On exit  : 0/0
  5792 ;;		Unchanged: 0/0
  5793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5794 ;;      Params:         0       0       0       0       0       0       0       0       0
  5795 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5796 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5797 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5798 ;;Total ram usage:        0 bytes
  5799 ;; Hardware stack levels used:    1
  5800 ;; Hardware stack levels required when called:    3
  5801 ;; This function calls:
  5802 ;;		_Pos_Centre_Mem
  5803 ;;		_Pos_Right_Mem
  5804 ;;		_Pos_left_Mem
  5805 ;;		___awtoft
  5806 ;; This function is called by:
  5807 ;;		_main
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810                           
  5811                           	psect	text28
  5812  00700E                     __ptext28:
  5813                           	opt stack 0
  5814  00700E                     _Mem_values_obs:
  5815                           	opt stack 27
  5816                           
  5817                           ;obstacle_avoidance.c: 484: Mem_front[0] =Pos_left_Mem( 0,1*mul_obs,s_front);
  5818                           
  5819                           ;incstack = 0
  5820  00700E  0E00               	movlw	0
  5821  007010  6E3F               	movwf	Pos_left_Mem@y1,c
  5822  007012  0E00               	movlw	0
  5823  007014  6E40               	movwf	Pos_left_Mem@y1+1,c
  5824  007016  0E00               	movlw	0
  5825  007018  6E41               	movwf	Pos_left_Mem@y1+2,c
  5826  00701A  C05D  F009         	movff	_mul_obs,___awtoft@c
  5827  00701E  C05E  F00A         	movff	_mul_obs+1,___awtoft@c+1
  5828  007022  EC04  F02D         	call	___awtoft	;wreg free
  5829  007026  C009  F042         	movff	?___awtoft,Pos_left_Mem@z1
  5830  00702A  C00A  F043         	movff	?___awtoft+1,Pos_left_Mem@z1+1
  5831  00702E  C00B  F044         	movff	?___awtoft+2,Pos_left_Mem@z1+2
  5832  007032  C099  F045         	movff	_s_front,Pos_left_Mem@d
  5833  007036  C09A  F046         	movff	_s_front+1,Pos_left_Mem@d+1
  5834  00703A  C09B  F047         	movff	_s_front+2,Pos_left_Mem@d+2
  5835  00703E  EC41  F035         	call	_Pos_left_Mem	;wreg free
  5836  007042  C03F  F060         	movff	?_Pos_left_Mem,_Mem_front
  5837  007046  C040  F061         	movff	?_Pos_left_Mem+1,_Mem_front+1
  5838  00704A  C041  F062         	movff	?_Pos_left_Mem+2,_Mem_front+2
  5839                           
  5840                           ;obstacle_avoidance.c: 485: Mem_front[1] =Pos_Centre_Mem(0,1*mul_obs,2*mul_obs,s_front);
  5841  00704E  0E00               	movlw	0
  5842  007050  6E3F               	movwf	Pos_Centre_Mem@x2,c
  5843  007052  0E00               	movlw	0
  5844  007054  6E40               	movwf	Pos_Centre_Mem@x2+1,c
  5845  007056  0E00               	movlw	0
  5846  007058  6E41               	movwf	Pos_Centre_Mem@x2+2,c
  5847  00705A  C05D  F009         	movff	_mul_obs,___awtoft@c
  5848  00705E  C05E  F00A         	movff	_mul_obs+1,___awtoft@c+1
  5849  007062  EC04  F02D         	call	___awtoft	;wreg free
  5850  007066  C009  F042         	movff	?___awtoft,Pos_Centre_Mem@y2
  5851  00706A  C00A  F043         	movff	?___awtoft+1,Pos_Centre_Mem@y2+1
  5852  00706E  C00B  F044         	movff	?___awtoft+2,Pos_Centre_Mem@y2+2
  5853  007072  90D8               	bcf	status,0,c
  5854  007074  345D               	rlcf	_mul_obs,w,c
  5855  007076  6E09               	movwf	___awtoft@c,c
  5856  007078  345E               	rlcf	_mul_obs+1,w,c
  5857  00707A  6E0A               	movwf	___awtoft@c+1,c
  5858  00707C  EC04  F02D         	call	___awtoft	;wreg free
  5859  007080  C009  F045         	movff	?___awtoft,Pos_Centre_Mem@z2
  5860  007084  C00A  F046         	movff	?___awtoft+1,Pos_Centre_Mem@z2+1
  5861  007088  C00B  F047         	movff	?___awtoft+2,Pos_Centre_Mem@z2+2
  5862  00708C  C099  F048         	movff	_s_front,Pos_Centre_Mem@d
  5863  007090  C09A  F049         	movff	_s_front+1,Pos_Centre_Mem@d+1
  5864  007094  C09B  F04A         	movff	_s_front+2,Pos_Centre_Mem@d+2
  5865  007098  EC64  F039         	call	_Pos_Centre_Mem	;wreg free
  5866  00709C  C03F  F063         	movff	?_Pos_Centre_Mem,_Mem_front+3
  5867  0070A0  C040  F064         	movff	?_Pos_Centre_Mem+1,_Mem_front+4
  5868  0070A4  C041  F065         	movff	?_Pos_Centre_Mem+2,_Mem_front+5
  5869                           
  5870                           ;obstacle_avoidance.c: 486: Mem_front[2] =Pos_Right_Mem(1*mul_obs,2*mul_obs,s_front);
  5871  0070A8  C05D  F009         	movff	_mul_obs,___awtoft@c
  5872  0070AC  C05E  F00A         	movff	_mul_obs+1,___awtoft@c+1
  5873  0070B0  EC04  F02D         	call	___awtoft	;wreg free
  5874  0070B4  C009  F03F         	movff	?___awtoft,Pos_Right_Mem@x3
  5875  0070B8  C00A  F040         	movff	?___awtoft+1,Pos_Right_Mem@x3+1
  5876  0070BC  C00B  F041         	movff	?___awtoft+2,Pos_Right_Mem@x3+2
  5877  0070C0  90D8               	bcf	status,0,c
  5878  0070C2  345D               	rlcf	_mul_obs,w,c
  5879  0070C4  6E09               	movwf	___awtoft@c,c
  5880  0070C6  345E               	rlcf	_mul_obs+1,w,c
  5881  0070C8  6E0A               	movwf	___awtoft@c+1,c
  5882  0070CA  EC04  F02D         	call	___awtoft	;wreg free
  5883  0070CE  C009  F042         	movff	?___awtoft,Pos_Right_Mem@y3
  5884  0070D2  C00A  F043         	movff	?___awtoft+1,Pos_Right_Mem@y3+1
  5885  0070D6  C00B  F044         	movff	?___awtoft+2,Pos_Right_Mem@y3+2
  5886  0070DA  C099  F045         	movff	_s_front,Pos_Right_Mem@d
  5887  0070DE  C09A  F046         	movff	_s_front+1,Pos_Right_Mem@d+1
  5888  0070E2  C09B  F047         	movff	_s_front+2,Pos_Right_Mem@d+2
  5889  0070E6  ECDE  F036         	call	_Pos_Right_Mem	;wreg free
  5890  0070EA  C03F  F066         	movff	?_Pos_Right_Mem,_Mem_front+6
  5891  0070EE  C040  F067         	movff	?_Pos_Right_Mem+1,_Mem_front+7
  5892  0070F2  C041  F068         	movff	?_Pos_Right_Mem+2,_Mem_front+8
  5893                           
  5894                           ;obstacle_avoidance.c: 489: Mem_left[0] =Pos_left_Mem(0,1*mul_obs,s_front_left );
  5895  0070F6  0E00               	movlw	0
  5896  0070F8  6E3F               	movwf	Pos_left_Mem@y1,c
  5897  0070FA  0E00               	movlw	0
  5898  0070FC  6E40               	movwf	Pos_left_Mem@y1+1,c
  5899  0070FE  0E00               	movlw	0
  5900  007100  6E41               	movwf	Pos_left_Mem@y1+2,c
  5901  007102  C05D  F009         	movff	_mul_obs,___awtoft@c
  5902  007106  C05E  F00A         	movff	_mul_obs+1,___awtoft@c+1
  5903  00710A  EC04  F02D         	call	___awtoft	;wreg free
  5904  00710E  C009  F042         	movff	?___awtoft,Pos_left_Mem@z1
  5905  007112  C00A  F043         	movff	?___awtoft+1,Pos_left_Mem@z1+1
  5906  007116  C00B  F044         	movff	?___awtoft+2,Pos_left_Mem@z1+2
  5907  00711A  C09C  F045         	movff	_s_front_left,Pos_left_Mem@d
  5908  00711E  C09D  F046         	movff	_s_front_left+1,Pos_left_Mem@d+1
  5909  007122  C09E  F047         	movff	_s_front_left+2,Pos_left_Mem@d+2
  5910  007126  EC41  F035         	call	_Pos_left_Mem	;wreg free
  5911  00712A  C03F  F069         	movff	?_Pos_left_Mem,_Mem_left
  5912  00712E  C040  F06A         	movff	?_Pos_left_Mem+1,_Mem_left+1
  5913  007132  C041  F06B         	movff	?_Pos_left_Mem+2,_Mem_left+2
  5914                           
  5915                           ;obstacle_avoidance.c: 490: Mem_left[1] =Pos_Centre_Mem(0,1*mul_obs,2*mul_obs,s_front_le
      +                          ft);
  5916  007136  0E00               	movlw	0
  5917  007138  6E3F               	movwf	Pos_Centre_Mem@x2,c
  5918  00713A  0E00               	movlw	0
  5919  00713C  6E40               	movwf	Pos_Centre_Mem@x2+1,c
  5920  00713E  0E00               	movlw	0
  5921  007140  6E41               	movwf	Pos_Centre_Mem@x2+2,c
  5922  007142  C05D  F009         	movff	_mul_obs,___awtoft@c
  5923  007146  C05E  F00A         	movff	_mul_obs+1,___awtoft@c+1
  5924  00714A  EC04  F02D         	call	___awtoft	;wreg free
  5925  00714E  C009  F042         	movff	?___awtoft,Pos_Centre_Mem@y2
  5926  007152  C00A  F043         	movff	?___awtoft+1,Pos_Centre_Mem@y2+1
  5927  007156  C00B  F044         	movff	?___awtoft+2,Pos_Centre_Mem@y2+2
  5928  00715A  90D8               	bcf	status,0,c
  5929  00715C  345D               	rlcf	_mul_obs,w,c
  5930  00715E  6E09               	movwf	___awtoft@c,c
  5931  007160  345E               	rlcf	_mul_obs+1,w,c
  5932  007162  6E0A               	movwf	___awtoft@c+1,c
  5933  007164  EC04  F02D         	call	___awtoft	;wreg free
  5934  007168  C009  F045         	movff	?___awtoft,Pos_Centre_Mem@z2
  5935  00716C  C00A  F046         	movff	?___awtoft+1,Pos_Centre_Mem@z2+1
  5936  007170  C00B  F047         	movff	?___awtoft+2,Pos_Centre_Mem@z2+2
  5937  007174  C09C  F048         	movff	_s_front_left,Pos_Centre_Mem@d
  5938  007178  C09D  F049         	movff	_s_front_left+1,Pos_Centre_Mem@d+1
  5939  00717C  C09E  F04A         	movff	_s_front_left+2,Pos_Centre_Mem@d+2
  5940  007180  EC64  F039         	call	_Pos_Centre_Mem	;wreg free
  5941  007184  C03F  F06C         	movff	?_Pos_Centre_Mem,_Mem_left+3
  5942  007188  C040  F06D         	movff	?_Pos_Centre_Mem+1,_Mem_left+4
  5943  00718C  C041  F06E         	movff	?_Pos_Centre_Mem+2,_Mem_left+5
  5944                           
  5945                           ;obstacle_avoidance.c: 491: Mem_left[2] =Pos_Right_Mem(1*mul_obs,2*mul_obs,s_front_left)
      +                          ;
  5946  007190  C05D  F009         	movff	_mul_obs,___awtoft@c
  5947  007194  C05E  F00A         	movff	_mul_obs+1,___awtoft@c+1
  5948  007198  EC04  F02D         	call	___awtoft	;wreg free
  5949  00719C  C009  F03F         	movff	?___awtoft,Pos_Right_Mem@x3
  5950  0071A0  C00A  F040         	movff	?___awtoft+1,Pos_Right_Mem@x3+1
  5951  0071A4  C00B  F041         	movff	?___awtoft+2,Pos_Right_Mem@x3+2
  5952  0071A8  90D8               	bcf	status,0,c
  5953  0071AA  345D               	rlcf	_mul_obs,w,c
  5954  0071AC  6E09               	movwf	___awtoft@c,c
  5955  0071AE  345E               	rlcf	_mul_obs+1,w,c
  5956  0071B0  6E0A               	movwf	___awtoft@c+1,c
  5957  0071B2  EC04  F02D         	call	___awtoft	;wreg free
  5958  0071B6  C009  F042         	movff	?___awtoft,Pos_Right_Mem@y3
  5959  0071BA  C00A  F043         	movff	?___awtoft+1,Pos_Right_Mem@y3+1
  5960  0071BE  C00B  F044         	movff	?___awtoft+2,Pos_Right_Mem@y3+2
  5961  0071C2  C09C  F045         	movff	_s_front_left,Pos_Right_Mem@d
  5962  0071C6  C09D  F046         	movff	_s_front_left+1,Pos_Right_Mem@d+1
  5963  0071CA  C09E  F047         	movff	_s_front_left+2,Pos_Right_Mem@d+2
  5964  0071CE  ECDE  F036         	call	_Pos_Right_Mem	;wreg free
  5965  0071D2  C03F  F06F         	movff	?_Pos_Right_Mem,_Mem_left+6
  5966  0071D6  C040  F070         	movff	?_Pos_Right_Mem+1,_Mem_left+7
  5967  0071DA  C041  F071         	movff	?_Pos_Right_Mem+2,_Mem_left+8
  5968                           
  5969                           ;obstacle_avoidance.c: 494: Mem_right[0] =Pos_left_Mem(0,1*mul_obs,s_front_right );
  5970  0071DE  0E00               	movlw	0
  5971  0071E0  6E3F               	movwf	Pos_left_Mem@y1,c
  5972  0071E2  0E00               	movlw	0
  5973  0071E4  6E40               	movwf	Pos_left_Mem@y1+1,c
  5974  0071E6  0E00               	movlw	0
  5975  0071E8  6E41               	movwf	Pos_left_Mem@y1+2,c
  5976  0071EA  C05D  F009         	movff	_mul_obs,___awtoft@c
  5977  0071EE  C05E  F00A         	movff	_mul_obs+1,___awtoft@c+1
  5978  0071F2  EC04  F02D         	call	___awtoft	;wreg free
  5979  0071F6  C009  F042         	movff	?___awtoft,Pos_left_Mem@z1
  5980  0071FA  C00A  F043         	movff	?___awtoft+1,Pos_left_Mem@z1+1
  5981  0071FE  C00B  F044         	movff	?___awtoft+2,Pos_left_Mem@z1+2
  5982  007202  C09F  F045         	movff	_s_front_right,Pos_left_Mem@d
  5983  007206  C0A0  F046         	movff	_s_front_right+1,Pos_left_Mem@d+1
  5984  00720A  C0A1  F047         	movff	_s_front_right+2,Pos_left_Mem@d+2
  5985  00720E  EC41  F035         	call	_Pos_left_Mem	;wreg free
  5986  007212  C03F  F072         	movff	?_Pos_left_Mem,_Mem_right
  5987  007216  C040  F073         	movff	?_Pos_left_Mem+1,_Mem_right+1
  5988  00721A  C041  F074         	movff	?_Pos_left_Mem+2,_Mem_right+2
  5989                           
  5990                           ;obstacle_avoidance.c: 495: Mem_right[1] =Pos_Centre_Mem(0,1*mul_obs,2*mul_obs,s_front_r
      +                          ight);
  5991  00721E  0E00               	movlw	0
  5992  007220  6E3F               	movwf	Pos_Centre_Mem@x2,c
  5993  007222  0E00               	movlw	0
  5994  007224  6E40               	movwf	Pos_Centre_Mem@x2+1,c
  5995  007226  0E00               	movlw	0
  5996  007228  6E41               	movwf	Pos_Centre_Mem@x2+2,c
  5997  00722A  C05D  F009         	movff	_mul_obs,___awtoft@c
  5998  00722E  C05E  F00A         	movff	_mul_obs+1,___awtoft@c+1
  5999  007232  EC04  F02D         	call	___awtoft	;wreg free
  6000  007236  C009  F042         	movff	?___awtoft,Pos_Centre_Mem@y2
  6001  00723A  C00A  F043         	movff	?___awtoft+1,Pos_Centre_Mem@y2+1
  6002  00723E  C00B  F044         	movff	?___awtoft+2,Pos_Centre_Mem@y2+2
  6003  007242  90D8               	bcf	status,0,c
  6004  007244  345D               	rlcf	_mul_obs,w,c
  6005  007246  6E09               	movwf	___awtoft@c,c
  6006  007248  345E               	rlcf	_mul_obs+1,w,c
  6007  00724A  6E0A               	movwf	___awtoft@c+1,c
  6008  00724C  EC04  F02D         	call	___awtoft	;wreg free
  6009  007250  C009  F045         	movff	?___awtoft,Pos_Centre_Mem@z2
  6010  007254  C00A  F046         	movff	?___awtoft+1,Pos_Centre_Mem@z2+1
  6011  007258  C00B  F047         	movff	?___awtoft+2,Pos_Centre_Mem@z2+2
  6012  00725C  C09F  F048         	movff	_s_front_right,Pos_Centre_Mem@d
  6013  007260  C0A0  F049         	movff	_s_front_right+1,Pos_Centre_Mem@d+1
  6014  007264  C0A1  F04A         	movff	_s_front_right+2,Pos_Centre_Mem@d+2
  6015  007268  EC64  F039         	call	_Pos_Centre_Mem	;wreg free
  6016  00726C  C03F  F075         	movff	?_Pos_Centre_Mem,_Mem_right+3
  6017  007270  C040  F076         	movff	?_Pos_Centre_Mem+1,_Mem_right+4
  6018  007274  C041  F077         	movff	?_Pos_Centre_Mem+2,_Mem_right+5
  6019                           
  6020                           ;obstacle_avoidance.c: 496: Mem_right[2] =Pos_Right_Mem(1*mul_obs,2*mul_obs,s_front_righ
      +                          t);
  6021  007278  C05D  F009         	movff	_mul_obs,___awtoft@c
  6022  00727C  C05E  F00A         	movff	_mul_obs+1,___awtoft@c+1
  6023  007280  EC04  F02D         	call	___awtoft	;wreg free
  6024  007284  C009  F03F         	movff	?___awtoft,Pos_Right_Mem@x3
  6025  007288  C00A  F040         	movff	?___awtoft+1,Pos_Right_Mem@x3+1
  6026  00728C  C00B  F041         	movff	?___awtoft+2,Pos_Right_Mem@x3+2
  6027  007290  90D8               	bcf	status,0,c
  6028  007292  345D               	rlcf	_mul_obs,w,c
  6029  007294  6E09               	movwf	___awtoft@c,c
  6030  007296  345E               	rlcf	_mul_obs+1,w,c
  6031  007298  6E0A               	movwf	___awtoft@c+1,c
  6032  00729A  EC04  F02D         	call	___awtoft	;wreg free
  6033  00729E  C009  F042         	movff	?___awtoft,Pos_Right_Mem@y3
  6034  0072A2  C00A  F043         	movff	?___awtoft+1,Pos_Right_Mem@y3+1
  6035  0072A6  C00B  F044         	movff	?___awtoft+2,Pos_Right_Mem@y3+2
  6036  0072AA  C09F  F045         	movff	_s_front_right,Pos_Right_Mem@d
  6037  0072AE  C0A0  F046         	movff	_s_front_right+1,Pos_Right_Mem@d+1
  6038  0072B2  C0A1  F047         	movff	_s_front_right+2,Pos_Right_Mem@d+2
  6039  0072B6  ECDE  F036         	call	_Pos_Right_Mem	;wreg free
  6040  0072BA  C03F  F078         	movff	?_Pos_Right_Mem,_Mem_right+6
  6041  0072BE  C040  F079         	movff	?_Pos_Right_Mem+1,_Mem_right+7
  6042  0072C2  C041  F07A         	movff	?_Pos_Right_Mem+2,_Mem_right+8
  6043  0072C6  0012               	return	
  6044  0072C8                     __end_of_Mem_values_obs:
  6045                           	opt stack 0
  6046                           tblptru	equ	0xFF8
  6047                           tblptrh	equ	0xFF7
  6048                           tblptrl	equ	0xFF6
  6049                           tablat	equ	0xFF5
  6050                           prodh	equ	0xFF4
  6051                           prodl	equ	0xFF3
  6052                           intcon	equ	0xFF2
  6053                           postinc0	equ	0xFEE
  6054                           wreg	equ	0xFE8
  6055                           postinc1	equ	0xFE6
  6056                           postdec1	equ	0xFE5
  6057                           fsr1h	equ	0xFE2
  6058                           fsr1l	equ	0xFE1
  6059                           indf2	equ	0xFDF
  6060                           postinc2	equ	0xFDE
  6061                           postdec2	equ	0xFDD
  6062                           fsr2h	equ	0xFDA
  6063                           fsr2l	equ	0xFD9
  6064                           status	equ	0xFD8
  6065                           
  6066 ;; *************** function ___awtoft *****************
  6067 ;; Defined at:
  6068 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;  c               2    8[COMRAM] int 
  6071 ;; Auto vars:     Size  Location     Type
  6072 ;;  sign            1   11[COMRAM] unsigned char 
  6073 ;; Return value:  Size  Location     Type
  6074 ;;                  3    8[COMRAM] float 
  6075 ;; Registers used:
  6076 ;;		wreg, status,2, status,0, prodl, cstack
  6077 ;; Tracked objects:
  6078 ;;		On entry : 0/0
  6079 ;;		On exit  : 0/0
  6080 ;;		Unchanged: 0/0
  6081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6082 ;;      Params:         3       0       0       0       0       0       0       0       0
  6083 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6084 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6085 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6086 ;;Total ram usage:        4 bytes
  6087 ;; Hardware stack levels used:    1
  6088 ;; Hardware stack levels required when called:    1
  6089 ;; This function calls:
  6090 ;;		___ftpack
  6091 ;; This function is called by:
  6092 ;;		_read_ultrasonic_s3
  6093 ;;		_read_ultrasonic_s4
  6094 ;;		_read_ultrasonic_s5
  6095 ;;		_read_ultrasonic_s6
  6096 ;;		_read_ultrasonic_s7
  6097 ;;		_read_ultrasonic_s8
  6098 ;;		_Mem_values_obs
  6099 ;;		_obstacle_avoid_controller
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           	psect	text29
  6104  005A08                     __ptext29:
  6105                           	opt stack 0
  6106  005A08                     ___awtoft:
  6107                           	opt stack 27
  6108                           
  6109                           ;incstack = 0
  6110  005A08  0E00               	movlw	0
  6111  005A0A  6E0C               	movwf	___awtoft@sign,c
  6112  005A0C  500A               	movf	___awtoft@c+1,w,c
  6113  005A0E  0A80               	xorlw	128
  6114  005A10  6EF3               	movwf	prodl,c
  6115  005A12  0E80               	movlw	128
  6116  005A14  5CF3               	subwf	prodl,w,c
  6117  005A16  0E00               	movlw	0
  6118  005A18  B4D8               	btfsc	status,2,c
  6119  005A1A  5C09               	subwf	___awtoft@c,w,c
  6120  005A1C  B0D8               	btfsc	status,0,c
  6121  005A1E  D006               	goto	l2101
  6122  005A20  6C09               	negf	___awtoft@c,c
  6123  005A22  1E0A               	comf	___awtoft@c+1,f,c
  6124  005A24  B0D8               	btfsc	status,0,c
  6125  005A26  2A0A               	incf	___awtoft@c+1,f,c
  6126  005A28  0E01               	movlw	1
  6127  005A2A  6E0C               	movwf	___awtoft@sign,c
  6128  005A2C                     l2101:
  6129  005A2C  C009  F001         	movff	___awtoft@c,___ftpack@arg
  6130  005A30  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  6131  005A34  6A03               	clrf	___ftpack@arg+2,c
  6132  005A36  0E8E               	movlw	142
  6133  005A38  6E04               	movwf	___ftpack@exp,c
  6134  005A3A  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  6135  005A3E  EC18  F030         	call	___ftpack	;wreg free
  6136  005A42  C001  F009         	movff	?___ftpack,?___awtoft
  6137  005A46  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  6138  005A4A  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  6139  005A4E  0012               	return	
  6140  005A50                     __end_of___awtoft:
  6141                           	opt stack 0
  6142                           tblptru	equ	0xFF8
  6143                           tblptrh	equ	0xFF7
  6144                           tblptrl	equ	0xFF6
  6145                           tablat	equ	0xFF5
  6146                           prodh	equ	0xFF4
  6147                           prodl	equ	0xFF3
  6148                           intcon	equ	0xFF2
  6149                           postinc0	equ	0xFEE
  6150                           wreg	equ	0xFE8
  6151                           postinc1	equ	0xFE6
  6152                           postdec1	equ	0xFE5
  6153                           fsr1h	equ	0xFE2
  6154                           fsr1l	equ	0xFE1
  6155                           indf2	equ	0xFDF
  6156                           postinc2	equ	0xFDE
  6157                           postdec2	equ	0xFDD
  6158                           fsr2h	equ	0xFDA
  6159                           fsr2l	equ	0xFD9
  6160                           status	equ	0xFD8
  6161                           
  6162 ;; *************** function _Pos_left_Mem *****************
  6163 ;; Defined at:
  6164 ;;		line 458 in file "obstacle_avoidance.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;  y1              3   62[COMRAM] float 
  6167 ;;  z1              3   65[COMRAM] float 
  6168 ;;  d               3   68[COMRAM] float 
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;  Pos_left_Mem    3   71[COMRAM] float 
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  3   62[COMRAM] float 
  6173 ;; Registers used:
  6174 ;;		wreg, status,2, status,0, cstack
  6175 ;; Tracked objects:
  6176 ;;		On entry : 0/0
  6177 ;;		On exit  : 0/0
  6178 ;;		Unchanged: 0/0
  6179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6180 ;;      Params:         9       0       0       0       0       0       0       0       0
  6181 ;;      Locals:        12       0       0       0       0       0       0       0       0
  6182 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6183 ;;      Totals:        21       0       0       0       0       0       0       0       0
  6184 ;;Total ram usage:       21 bytes
  6185 ;; Hardware stack levels used:    1
  6186 ;; Hardware stack levels required when called:    2
  6187 ;; This function calls:
  6188 ;;		___ftadd
  6189 ;;		___ftdiv
  6190 ;;		___ftmul
  6191 ;;		___ftneg
  6192 ;;		_step_func
  6193 ;; This function is called by:
  6194 ;;		_Mem_values_obs
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           
  6198                           	psect	text30
  6199  006A82                     __ptext30:
  6200                           	opt stack 0
  6201  006A82                     _Pos_left_Mem:
  6202                           	opt stack 27
  6203                           
  6204                           ;obstacle_avoidance.c: 460: float Pos_left_Mem;
  6205                           ;obstacle_avoidance.c: 461: Pos_left_Mem=(((y1-d)/(z1-y1))+1)*((step_func(d-y1)-step_fun
      +                          c(d-z1)));
  6206                           
  6207                           ;incstack = 0
  6208  006A82  C042  F030         	movff	Pos_left_Mem@z1,___ftadd@f2
  6209  006A86  C043  F031         	movff	Pos_left_Mem@z1+1,___ftadd@f2+1
  6210  006A8A  C044  F032         	movff	Pos_left_Mem@z1+2,___ftadd@f2+2
  6211  006A8E  C03F  F02A         	movff	Pos_left_Mem@y1,___ftneg@f1
  6212  006A92  C040  F02B         	movff	Pos_left_Mem@y1+1,___ftneg@f1+1
  6213  006A96  C041  F02C         	movff	Pos_left_Mem@y1+2,___ftneg@f1+2
  6214  006A9A  EC45  F02C         	call	___ftneg	;wreg free
  6215  006A9E  C02A  F02D         	movff	?___ftneg,___ftadd@f1
  6216  006AA2  C02B  F02E         	movff	?___ftneg+1,___ftadd@f1+1
  6217  006AA6  C02C  F02F         	movff	?___ftneg+2,___ftadd@f1+2
  6218  006AAA  EC08  F036         	call	___ftadd	;wreg free
  6219  006AAE  C02D  F01E         	movff	?___ftadd,___ftdiv@f2
  6220  006AB2  C02E  F01F         	movff	?___ftadd+1,___ftdiv@f2+1
  6221  006AB6  C02F  F020         	movff	?___ftadd+2,___ftdiv@f2+2
  6222  006ABA  C03F  F030         	movff	Pos_left_Mem@y1,___ftadd@f2
  6223  006ABE  C040  F031         	movff	Pos_left_Mem@y1+1,___ftadd@f2+1
  6224  006AC2  C041  F032         	movff	Pos_left_Mem@y1+2,___ftadd@f2+2
  6225  006AC6  C045  F02A         	movff	Pos_left_Mem@d,___ftneg@f1
  6226  006ACA  C046  F02B         	movff	Pos_left_Mem@d+1,___ftneg@f1+1
  6227  006ACE  C047  F02C         	movff	Pos_left_Mem@d+2,___ftneg@f1+2
  6228  006AD2  EC45  F02C         	call	___ftneg	;wreg free
  6229  006AD6  C02A  F02D         	movff	?___ftneg,___ftadd@f1
  6230  006ADA  C02B  F02E         	movff	?___ftneg+1,___ftadd@f1+1
  6231  006ADE  C02C  F02F         	movff	?___ftneg+2,___ftadd@f1+2
  6232  006AE2  EC08  F036         	call	___ftadd	;wreg free
  6233  006AE6  C02D  F01B         	movff	?___ftadd,___ftdiv@f1
  6234  006AEA  C02E  F01C         	movff	?___ftadd+1,___ftdiv@f1+1
  6235  006AEE  C02F  F01D         	movff	?___ftadd+2,___ftdiv@f1+2
  6236  006AF2  ECD6  F030         	call	___ftdiv	;wreg free
  6237  006AF6  C01B  F04B         	movff	?___ftdiv,_Pos_left_Mem$1815
  6238  006AFA  C01C  F04C         	movff	?___ftdiv+1,_Pos_left_Mem$1815+1
  6239  006AFE  C01D  F04D         	movff	?___ftdiv+2,_Pos_left_Mem$1815+2
  6240                           
  6241                           ;obstacle_avoidance.c: 460: float Pos_left_Mem;
  6242                           ;obstacle_avoidance.c: 461: Pos_left_Mem=(((y1-d)/(z1-y1))+1)*((step_func(d-y1)-step_fun
      +                          c(d-z1)));
  6243  006B02  C045  F030         	movff	Pos_left_Mem@d,___ftadd@f2
  6244  006B06  C046  F031         	movff	Pos_left_Mem@d+1,___ftadd@f2+1
  6245  006B0A  C047  F032         	movff	Pos_left_Mem@d+2,___ftadd@f2+2
  6246  006B0E  C042  F02A         	movff	Pos_left_Mem@z1,___ftneg@f1
  6247  006B12  C043  F02B         	movff	Pos_left_Mem@z1+1,___ftneg@f1+1
  6248  006B16  C044  F02C         	movff	Pos_left_Mem@z1+2,___ftneg@f1+2
  6249  006B1A  EC45  F02C         	call	___ftneg	;wreg free
  6250  006B1E  C02A  F02D         	movff	?___ftneg,___ftadd@f1
  6251  006B22  C02B  F02E         	movff	?___ftneg+1,___ftadd@f1+1
  6252  006B26  C02C  F02F         	movff	?___ftneg+2,___ftadd@f1+2
  6253  006B2A  EC08  F036         	call	___ftadd	;wreg free
  6254  006B2E  C02D  F039         	movff	?___ftadd,step_func@x
  6255  006B32  C02E  F03A         	movff	?___ftadd+1,step_func@x+1
  6256  006B36  C02F  F03B         	movff	?___ftadd+2,step_func@x+2
  6257  006B3A  ECA4  F02C         	call	_step_func	;wreg free
  6258  006B3E  C039  F04E         	movff	?_step_func,_Pos_left_Mem$1816
  6259  006B42  C03A  F04F         	movff	?_step_func+1,_Pos_left_Mem$1816+1
  6260  006B46  C03B  F050         	movff	?_step_func+2,_Pos_left_Mem$1816+2
  6261                           
  6262                           ;obstacle_avoidance.c: 460: float Pos_left_Mem;
  6263                           ;obstacle_avoidance.c: 461: Pos_left_Mem=(((y1-d)/(z1-y1))+1)*((step_func(d-y1)-step_fun
      +                          c(d-z1)));
  6264  006B4A  C045  F030         	movff	Pos_left_Mem@d,___ftadd@f2
  6265  006B4E  C046  F031         	movff	Pos_left_Mem@d+1,___ftadd@f2+1
  6266  006B52  C047  F032         	movff	Pos_left_Mem@d+2,___ftadd@f2+2
  6267  006B56  C03F  F02A         	movff	Pos_left_Mem@y1,___ftneg@f1
  6268  006B5A  C040  F02B         	movff	Pos_left_Mem@y1+1,___ftneg@f1+1
  6269  006B5E  C041  F02C         	movff	Pos_left_Mem@y1+2,___ftneg@f1+2
  6270  006B62  EC45  F02C         	call	___ftneg	;wreg free
  6271  006B66  C02A  F02D         	movff	?___ftneg,___ftadd@f1
  6272  006B6A  C02B  F02E         	movff	?___ftneg+1,___ftadd@f1+1
  6273  006B6E  C02C  F02F         	movff	?___ftneg+2,___ftadd@f1+2
  6274  006B72  EC08  F036         	call	___ftadd	;wreg free
  6275  006B76  C02D  F039         	movff	?___ftadd,step_func@x
  6276  006B7A  C02E  F03A         	movff	?___ftadd+1,step_func@x+1
  6277  006B7E  C02F  F03B         	movff	?___ftadd+2,step_func@x+2
  6278  006B82  ECA4  F02C         	call	_step_func	;wreg free
  6279  006B86  C039  F051         	movff	?_step_func,_Pos_left_Mem$1817
  6280  006B8A  C03A  F052         	movff	?_step_func+1,_Pos_left_Mem$1817+1
  6281  006B8E  C03B  F053         	movff	?_step_func+2,_Pos_left_Mem$1817+2
  6282                           
  6283                           ;obstacle_avoidance.c: 460: float Pos_left_Mem;
  6284                           ;obstacle_avoidance.c: 461: Pos_left_Mem=(((y1-d)/(z1-y1))+1)*((step_func(d-y1)-step_fun
      +                          c(d-z1)));
  6285  006B92  0E00               	movlw	0
  6286  006B94  6E30               	movwf	___ftadd@f2,c
  6287  006B96  0E80               	movlw	128
  6288  006B98  6E31               	movwf	___ftadd@f2+1,c
  6289  006B9A  0E3F               	movlw	63
  6290  006B9C  6E32               	movwf	___ftadd@f2+2,c
  6291  006B9E  C04B  F02D         	movff	_Pos_left_Mem$1815,___ftadd@f1
  6292  006BA2  C04C  F02E         	movff	_Pos_left_Mem$1815+1,___ftadd@f1+1
  6293  006BA6  C04D  F02F         	movff	_Pos_left_Mem$1815+2,___ftadd@f1+2
  6294  006BAA  EC08  F036         	call	___ftadd	;wreg free
  6295  006BAE  C02D  F00C         	movff	?___ftadd,___ftmul@f1
  6296  006BB2  C02E  F00D         	movff	?___ftadd+1,___ftmul@f1+1
  6297  006BB6  C02F  F00E         	movff	?___ftadd+2,___ftmul@f1+2
  6298  006BBA  C04E  F02A         	movff	_Pos_left_Mem$1816,___ftneg@f1
  6299  006BBE  C04F  F02B         	movff	_Pos_left_Mem$1816+1,___ftneg@f1+1
  6300  006BC2  C050  F02C         	movff	_Pos_left_Mem$1816+2,___ftneg@f1+2
  6301  006BC6  EC45  F02C         	call	___ftneg	;wreg free
  6302  006BCA  C02A  F030         	movff	?___ftneg,___ftadd@f2
  6303  006BCE  C02B  F031         	movff	?___ftneg+1,___ftadd@f2+1
  6304  006BD2  C02C  F032         	movff	?___ftneg+2,___ftadd@f2+2
  6305  006BD6  C051  F02D         	movff	_Pos_left_Mem$1817,___ftadd@f1
  6306  006BDA  C052  F02E         	movff	_Pos_left_Mem$1817+1,___ftadd@f1+1
  6307  006BDE  C053  F02F         	movff	_Pos_left_Mem$1817+2,___ftadd@f1+2
  6308  006BE2  EC08  F036         	call	___ftadd	;wreg free
  6309  006BE6  C02D  F00F         	movff	?___ftadd,___ftmul@f2
  6310  006BEA  C02E  F010         	movff	?___ftadd+1,___ftmul@f2+1
  6311  006BEE  C02F  F011         	movff	?___ftadd+2,___ftmul@f2+2
  6312  006BF2  EC41  F031         	call	___ftmul	;wreg free
  6313  006BF6  C00C  F048         	movff	?___ftmul,Pos_left_Mem@Pos_left_Mem
  6314  006BFA  C00D  F049         	movff	?___ftmul+1,Pos_left_Mem@Pos_left_Mem+1
  6315  006BFE  C00E  F04A         	movff	?___ftmul+2,Pos_left_Mem@Pos_left_Mem+2
  6316                           
  6317                           ;obstacle_avoidance.c: 462: return Pos_left_Mem;
  6318  006C02  C048  F03F         	movff	Pos_left_Mem@Pos_left_Mem,?_Pos_left_Mem
  6319  006C06  C049  F040         	movff	Pos_left_Mem@Pos_left_Mem+1,?_Pos_left_Mem+1
  6320  006C0A  C04A  F041         	movff	Pos_left_Mem@Pos_left_Mem+2,?_Pos_left_Mem+2
  6321  006C0E  0012               	return	
  6322  006C10                     __end_of_Pos_left_Mem:
  6323                           	opt stack 0
  6324                           tblptru	equ	0xFF8
  6325                           tblptrh	equ	0xFF7
  6326                           tblptrl	equ	0xFF6
  6327                           tablat	equ	0xFF5
  6328                           prodh	equ	0xFF4
  6329                           prodl	equ	0xFF3
  6330                           intcon	equ	0xFF2
  6331                           postinc0	equ	0xFEE
  6332                           wreg	equ	0xFE8
  6333                           postinc1	equ	0xFE6
  6334                           postdec1	equ	0xFE5
  6335                           fsr1h	equ	0xFE2
  6336                           fsr1l	equ	0xFE1
  6337                           indf2	equ	0xFDF
  6338                           postinc2	equ	0xFDE
  6339                           postdec2	equ	0xFDD
  6340                           fsr2h	equ	0xFDA
  6341                           fsr2l	equ	0xFD9
  6342                           status	equ	0xFD8
  6343                           
  6344 ;; *************** function _Pos_Right_Mem *****************
  6345 ;; Defined at:
  6346 ;;		line 472 in file "obstacle_avoidance.c"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;  x3              3   62[COMRAM] float 
  6349 ;;  y3              3   65[COMRAM] float 
  6350 ;;  d               3   68[COMRAM] float 
  6351 ;; Auto vars:     Size  Location     Type
  6352 ;;  Pos_Right_Me    3   71[COMRAM] float 
  6353 ;; Return value:  Size  Location     Type
  6354 ;;                  3   62[COMRAM] float 
  6355 ;; Registers used:
  6356 ;;		wreg, status,2, status,0, cstack
  6357 ;; Tracked objects:
  6358 ;;		On entry : 0/0
  6359 ;;		On exit  : 0/0
  6360 ;;		Unchanged: 0/0
  6361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6362 ;;      Params:         9       0       0       0       0       0       0       0       0
  6363 ;;      Locals:        21       0       0       0       0       0       0       0       0
  6364 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6365 ;;      Totals:        30       0       0       0       0       0       0       0       0
  6366 ;;Total ram usage:       30 bytes
  6367 ;; Hardware stack levels used:    1
  6368 ;; Hardware stack levels required when called:    2
  6369 ;; This function calls:
  6370 ;;		___ftadd
  6371 ;;		___ftdiv
  6372 ;;		___ftmul
  6373 ;;		___ftneg
  6374 ;;		_step_func
  6375 ;; This function is called by:
  6376 ;;		_Mem_values_obs
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379                           
  6380                           	psect	text31
  6381  006DBC                     __ptext31:
  6382                           	opt stack 0
  6383  006DBC                     _Pos_Right_Mem:
  6384                           	opt stack 27
  6385                           
  6386                           ;obstacle_avoidance.c: 474: float Pos_Right_Mem;
  6387                           ;obstacle_avoidance.c: 475: Pos_Right_Mem=(((1/(y3-x3))*d - (x3/(y3-x3)))* (step_func(d-
      +                          x3)-step_func(d-y3)))+ step_func(d-y3);
  6388                           
  6389                           ;incstack = 0
  6390  006DBC  C045  F030         	movff	Pos_Right_Mem@d,___ftadd@f2
  6391  006DC0  C046  F031         	movff	Pos_Right_Mem@d+1,___ftadd@f2+1
  6392  006DC4  C047  F032         	movff	Pos_Right_Mem@d+2,___ftadd@f2+2
  6393  006DC8  C042  F02A         	movff	Pos_Right_Mem@y3,___ftneg@f1
  6394  006DCC  C043  F02B         	movff	Pos_Right_Mem@y3+1,___ftneg@f1+1
  6395  006DD0  C044  F02C         	movff	Pos_Right_Mem@y3+2,___ftneg@f1+2
  6396  006DD4  EC45  F02C         	call	___ftneg	;wreg free
  6397  006DD8  C02A  F02D         	movff	?___ftneg,___ftadd@f1
  6398  006DDC  C02B  F02E         	movff	?___ftneg+1,___ftadd@f1+1
  6399  006DE0  C02C  F02F         	movff	?___ftneg+2,___ftadd@f1+2
  6400  006DE4  EC08  F036         	call	___ftadd	;wreg free
  6401  006DE8  C02D  F039         	movff	?___ftadd,step_func@x
  6402  006DEC  C02E  F03A         	movff	?___ftadd+1,step_func@x+1
  6403  006DF0  C02F  F03B         	movff	?___ftadd+2,step_func@x+2
  6404  006DF4  ECA4  F02C         	call	_step_func	;wreg free
  6405  006DF8  C039  F04B         	movff	?_step_func,_Pos_Right_Mem$1826
  6406  006DFC  C03A  F04C         	movff	?_step_func+1,_Pos_Right_Mem$1826+1
  6407  006E00  C03B  F04D         	movff	?_step_func+2,_Pos_Right_Mem$1826+2
  6408                           
  6409                           ;obstacle_avoidance.c: 474: float Pos_Right_Mem;
  6410                           ;obstacle_avoidance.c: 475: Pos_Right_Mem=(((1/(y3-x3))*d - (x3/(y3-x3)))* (step_func(d-
      +                          x3)-step_func(d-y3)))+ step_func(d-y3);
  6411  006E04  C045  F030         	movff	Pos_Right_Mem@d,___ftadd@f2
  6412  006E08  C046  F031         	movff	Pos_Right_Mem@d+1,___ftadd@f2+1
  6413  006E0C  C047  F032         	movff	Pos_Right_Mem@d+2,___ftadd@f2+2
  6414  006E10  C03F  F02A         	movff	Pos_Right_Mem@x3,___ftneg@f1
  6415  006E14  C040  F02B         	movff	Pos_Right_Mem@x3+1,___ftneg@f1+1
  6416  006E18  C041  F02C         	movff	Pos_Right_Mem@x3+2,___ftneg@f1+2
  6417  006E1C  EC45  F02C         	call	___ftneg	;wreg free
  6418  006E20  C02A  F02D         	movff	?___ftneg,___ftadd@f1
  6419  006E24  C02B  F02E         	movff	?___ftneg+1,___ftadd@f1+1
  6420  006E28  C02C  F02F         	movff	?___ftneg+2,___ftadd@f1+2
  6421  006E2C  EC08  F036         	call	___ftadd	;wreg free
  6422  006E30  C02D  F039         	movff	?___ftadd,step_func@x
  6423  006E34  C02E  F03A         	movff	?___ftadd+1,step_func@x+1
  6424  006E38  C02F  F03B         	movff	?___ftadd+2,step_func@x+2
  6425  006E3C  ECA4  F02C         	call	_step_func	;wreg free
  6426  006E40  C039  F04E         	movff	?_step_func,_Pos_Right_Mem$1827
  6427  006E44  C03A  F04F         	movff	?_step_func+1,_Pos_Right_Mem$1827+1
  6428  006E48  C03B  F050         	movff	?_step_func+2,_Pos_Right_Mem$1827+2
  6429                           
  6430                           ;obstacle_avoidance.c: 474: float Pos_Right_Mem;
  6431                           ;obstacle_avoidance.c: 475: Pos_Right_Mem=(((1/(y3-x3))*d - (x3/(y3-x3)))* (step_func(d-
      +                          x3)-step_func(d-y3)))+ step_func(d-y3);
  6432  006E4C  C042  F030         	movff	Pos_Right_Mem@y3,___ftadd@f2
  6433  006E50  C043  F031         	movff	Pos_Right_Mem@y3+1,___ftadd@f2+1
  6434  006E54  C044  F032         	movff	Pos_Right_Mem@y3+2,___ftadd@f2+2
  6435  006E58  C03F  F02A         	movff	Pos_Right_Mem@x3,___ftneg@f1
  6436  006E5C  C040  F02B         	movff	Pos_Right_Mem@x3+1,___ftneg@f1+1
  6437  006E60  C041  F02C         	movff	Pos_Right_Mem@x3+2,___ftneg@f1+2
  6438  006E64  EC45  F02C         	call	___ftneg	;wreg free
  6439  006E68  C02A  F02D         	movff	?___ftneg,___ftadd@f1
  6440  006E6C  C02B  F02E         	movff	?___ftneg+1,___ftadd@f1+1
  6441  006E70  C02C  F02F         	movff	?___ftneg+2,___ftadd@f1+2
  6442  006E74  EC08  F036         	call	___ftadd	;wreg free
  6443  006E78  C02D  F01E         	movff	?___ftadd,___ftdiv@f2
  6444  006E7C  C02E  F01F         	movff	?___ftadd+1,___ftdiv@f2+1
  6445  006E80  C02F  F020         	movff	?___ftadd+2,___ftdiv@f2+2
  6446  006E84  C03F  F01B         	movff	Pos_Right_Mem@x3,___ftdiv@f1
  6447  006E88  C040  F01C         	movff	Pos_Right_Mem@x3+1,___ftdiv@f1+1
  6448  006E8C  C041  F01D         	movff	Pos_Right_Mem@x3+2,___ftdiv@f1+2
  6449  006E90  ECD6  F030         	call	___ftdiv	;wreg free
  6450  006E94  C01B  F051         	movff	?___ftdiv,_Pos_Right_Mem$1828
  6451  006E98  C01C  F052         	movff	?___ftdiv+1,_Pos_Right_Mem$1828+1
  6452  006E9C  C01D  F053         	movff	?___ftdiv+2,_Pos_Right_Mem$1828+2
  6453                           
  6454                           ;obstacle_avoidance.c: 474: float Pos_Right_Mem;
  6455                           ;obstacle_avoidance.c: 475: Pos_Right_Mem=(((1/(y3-x3))*d - (x3/(y3-x3)))* (step_func(d-
      +                          x3)-step_func(d-y3)))+ step_func(d-y3);
  6456  006EA0  C045  F00F         	movff	Pos_Right_Mem@d,___ftmul@f2
  6457  006EA4  C046  F010         	movff	Pos_Right_Mem@d+1,___ftmul@f2+1
  6458  006EA8  C047  F011         	movff	Pos_Right_Mem@d+2,___ftmul@f2+2
  6459  006EAC  C042  F030         	movff	Pos_Right_Mem@y3,___ftadd@f2
  6460  006EB0  C043  F031         	movff	Pos_Right_Mem@y3+1,___ftadd@f2+1
  6461  006EB4  C044  F032         	movff	Pos_Right_Mem@y3+2,___ftadd@f2+2
  6462  006EB8  C03F  F02A         	movff	Pos_Right_Mem@x3,___ftneg@f1
  6463  006EBC  C040  F02B         	movff	Pos_Right_Mem@x3+1,___ftneg@f1+1
  6464  006EC0  C041  F02C         	movff	Pos_Right_Mem@x3+2,___ftneg@f1+2
  6465  006EC4  EC45  F02C         	call	___ftneg	;wreg free
  6466  006EC8  C02A  F02D         	movff	?___ftneg,___ftadd@f1
  6467  006ECC  C02B  F02E         	movff	?___ftneg+1,___ftadd@f1+1
  6468  006ED0  C02C  F02F         	movff	?___ftneg+2,___ftadd@f1+2
  6469  006ED4  EC08  F036         	call	___ftadd	;wreg free
  6470  006ED8  C02D  F01E         	movff	?___ftadd,___ftdiv@f2
  6471  006EDC  C02E  F01F         	movff	?___ftadd+1,___ftdiv@f2+1
  6472  006EE0  C02F  F020         	movff	?___ftadd+2,___ftdiv@f2+2
  6473  006EE4  0E00               	movlw	0
  6474  006EE6  6E1B               	movwf	___ftdiv@f1,c
  6475  006EE8  0E80               	movlw	128
  6476  006EEA  6E1C               	movwf	___ftdiv@f1+1,c
  6477  006EEC  0E3F               	movlw	63
  6478  006EEE  6E1D               	movwf	___ftdiv@f1+2,c
  6479  006EF0  ECD6  F030         	call	___ftdiv	;wreg free
  6480  006EF4  C01B  F00C         	movff	?___ftdiv,___ftmul@f1
  6481  006EF8  C01C  F00D         	movff	?___ftdiv+1,___ftmul@f1+1
  6482  006EFC  C01D  F00E         	movff	?___ftdiv+2,___ftmul@f1+2
  6483  006F00  EC41  F031         	call	___ftmul	;wreg free
  6484  006F04  C00C  F054         	movff	?___ftmul,_Pos_Right_Mem$1829
  6485  006F08  C00D  F055         	movff	?___ftmul+1,_Pos_Right_Mem$1829+1
  6486  006F0C  C00E  F056         	movff	?___ftmul+2,_Pos_Right_Mem$1829+2
  6487                           
  6488                           ;obstacle_avoidance.c: 474: float Pos_Right_Mem;
  6489                           ;obstacle_avoidance.c: 475: Pos_Right_Mem=(((1/(y3-x3))*d - (x3/(y3-x3)))* (step_func(d-
      +                          x3)-step_func(d-y3)))+ step_func(d-y3);
  6490  006F10  C04B  F02A         	movff	_Pos_Right_Mem$1826,___ftneg@f1
  6491  006F14  C04C  F02B         	movff	_Pos_Right_Mem$1826+1,___ftneg@f1+1
  6492  006F18  C04D  F02C         	movff	_Pos_Right_Mem$1826+2,___ftneg@f1+2
  6493  006F1C  EC45  F02C         	call	___ftneg	;wreg free
  6494  006F20  C02A  F030         	movff	?___ftneg,___ftadd@f2
  6495  006F24  C02B  F031         	movff	?___ftneg+1,___ftadd@f2+1
  6496  006F28  C02C  F032         	movff	?___ftneg+2,___ftadd@f2+2
  6497  006F2C  C04E  F02D         	movff	_Pos_Right_Mem$1827,___ftadd@f1
  6498  006F30  C04F  F02E         	movff	_Pos_Right_Mem$1827+1,___ftadd@f1+1
  6499  006F34  C050  F02F         	movff	_Pos_Right_Mem$1827+2,___ftadd@f1+2
  6500  006F38  EC08  F036         	call	___ftadd	;wreg free
  6501  006F3C  C02D  F00F         	movff	?___ftadd,___ftmul@f2
  6502  006F40  C02E  F010         	movff	?___ftadd+1,___ftmul@f2+1
  6503  006F44  C02F  F011         	movff	?___ftadd+2,___ftmul@f2+2
  6504  006F48  C051  F02A         	movff	_Pos_Right_Mem$1828,___ftneg@f1
  6505  006F4C  C052  F02B         	movff	_Pos_Right_Mem$1828+1,___ftneg@f1+1
  6506  006F50  C053  F02C         	movff	_Pos_Right_Mem$1828+2,___ftneg@f1+2
  6507  006F54  EC45  F02C         	call	___ftneg	;wreg free
  6508  006F58  C02A  F030         	movff	?___ftneg,___ftadd@f2
  6509  006F5C  C02B  F031         	movff	?___ftneg+1,___ftadd@f2+1
  6510  006F60  C02C  F032         	movff	?___ftneg+2,___ftadd@f2+2
  6511  006F64  C054  F02D         	movff	_Pos_Right_Mem$1829,___ftadd@f1
  6512  006F68  C055  F02E         	movff	_Pos_Right_Mem$1829+1,___ftadd@f1+1
  6513  006F6C  C056  F02F         	movff	_Pos_Right_Mem$1829+2,___ftadd@f1+2
  6514  006F70  EC08  F036         	call	___ftadd	;wreg free
  6515  006F74  C02D  F00C         	movff	?___ftadd,___ftmul@f1
  6516  006F78  C02E  F00D         	movff	?___ftadd+1,___ftmul@f1+1
  6517  006F7C  C02F  F00E         	movff	?___ftadd+2,___ftmul@f1+2
  6518  006F80  EC41  F031         	call	___ftmul	;wreg free
  6519  006F84  C00C  F057         	movff	?___ftmul,_Pos_Right_Mem$1830
  6520  006F88  C00D  F058         	movff	?___ftmul+1,_Pos_Right_Mem$1830+1
  6521  006F8C  C00E  F059         	movff	?___ftmul+2,_Pos_Right_Mem$1830+2
  6522                           
  6523                           ;obstacle_avoidance.c: 474: float Pos_Right_Mem;
  6524                           ;obstacle_avoidance.c: 475: Pos_Right_Mem=(((1/(y3-x3))*d - (x3/(y3-x3)))* (step_func(d-
      +                          x3)-step_func(d-y3)))+ step_func(d-y3);
  6525  006F90  C045  F030         	movff	Pos_Right_Mem@d,___ftadd@f2
  6526  006F94  C046  F031         	movff	Pos_Right_Mem@d+1,___ftadd@f2+1
  6527  006F98  C047  F032         	movff	Pos_Right_Mem@d+2,___ftadd@f2+2
  6528  006F9C  C042  F02A         	movff	Pos_Right_Mem@y3,___ftneg@f1
  6529  006FA0  C043  F02B         	movff	Pos_Right_Mem@y3+1,___ftneg@f1+1
  6530  006FA4  C044  F02C         	movff	Pos_Right_Mem@y3+2,___ftneg@f1+2
  6531  006FA8  EC45  F02C         	call	___ftneg	;wreg free
  6532  006FAC  C02A  F02D         	movff	?___ftneg,___ftadd@f1
  6533  006FB0  C02B  F02E         	movff	?___ftneg+1,___ftadd@f1+1
  6534  006FB4  C02C  F02F         	movff	?___ftneg+2,___ftadd@f1+2
  6535  006FB8  EC08  F036         	call	___ftadd	;wreg free
  6536  006FBC  C02D  F039         	movff	?___ftadd,step_func@x
  6537  006FC0  C02E  F03A         	movff	?___ftadd+1,step_func@x+1
  6538  006FC4  C02F  F03B         	movff	?___ftadd+2,step_func@x+2
  6539  006FC8  ECA4  F02C         	call	_step_func	;wreg free
  6540  006FCC  C039  F05A         	movff	?_step_func,_Pos_Right_Mem$1831
  6541  006FD0  C03A  F05B         	movff	?_step_func+1,_Pos_Right_Mem$1831+1
  6542  006FD4  C03B  F05C         	movff	?_step_func+2,_Pos_Right_Mem$1831+2
  6543                           
  6544                           ;obstacle_avoidance.c: 474: float Pos_Right_Mem;
  6545                           ;obstacle_avoidance.c: 475: Pos_Right_Mem=(((1/(y3-x3))*d - (x3/(y3-x3)))* (step_func(d-
      +                          x3)-step_func(d-y3)))+ step_func(d-y3);
  6546  006FD8  C057  F02D         	movff	_Pos_Right_Mem$1830,___ftadd@f1
  6547  006FDC  C058  F02E         	movff	_Pos_Right_Mem$1830+1,___ftadd@f1+1
  6548  006FE0  C059  F02F         	movff	_Pos_Right_Mem$1830+2,___ftadd@f1+2
  6549  006FE4  C05A  F030         	movff	_Pos_Right_Mem$1831,___ftadd@f2
  6550  006FE8  C05B  F031         	movff	_Pos_Right_Mem$1831+1,___ftadd@f2+1
  6551  006FEC  C05C  F032         	movff	_Pos_Right_Mem$1831+2,___ftadd@f2+2
  6552  006FF0  EC08  F036         	call	___ftadd	;wreg free
  6553  006FF4  C02D  F048         	movff	?___ftadd,Pos_Right_Mem@Pos_Right_Mem
  6554  006FF8  C02E  F049         	movff	?___ftadd+1,Pos_Right_Mem@Pos_Right_Mem+1
  6555  006FFC  C02F  F04A         	movff	?___ftadd+2,Pos_Right_Mem@Pos_Right_Mem+2
  6556                           
  6557                           ;obstacle_avoidance.c: 476: return Pos_Right_Mem;
  6558  007000  C048  F03F         	movff	Pos_Right_Mem@Pos_Right_Mem,?_Pos_Right_Mem
  6559  007004  C049  F040         	movff	Pos_Right_Mem@Pos_Right_Mem+1,?_Pos_Right_Mem+1
  6560  007008  C04A  F041         	movff	Pos_Right_Mem@Pos_Right_Mem+2,?_Pos_Right_Mem+2
  6561  00700C  0012               	return	
  6562  00700E                     __end_of_Pos_Right_Mem:
  6563                           	opt stack 0
  6564                           tblptru	equ	0xFF8
  6565                           tblptrh	equ	0xFF7
  6566                           tblptrl	equ	0xFF6
  6567                           tablat	equ	0xFF5
  6568                           prodh	equ	0xFF4
  6569                           prodl	equ	0xFF3
  6570                           intcon	equ	0xFF2
  6571                           postinc0	equ	0xFEE
  6572                           wreg	equ	0xFE8
  6573                           postinc1	equ	0xFE6
  6574                           postdec1	equ	0xFE5
  6575                           fsr1h	equ	0xFE2
  6576                           fsr1l	equ	0xFE1
  6577                           indf2	equ	0xFDF
  6578                           postinc2	equ	0xFDE
  6579                           postdec2	equ	0xFDD
  6580                           fsr2h	equ	0xFDA
  6581                           fsr2l	equ	0xFD9
  6582                           status	equ	0xFD8
  6583                           
  6584 ;; *************** function _Pos_Centre_Mem *****************
  6585 ;; Defined at:
  6586 ;;		line 464 in file "obstacle_avoidance.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;  x2              3   62[COMRAM] float 
  6589 ;;  y2              3   65[COMRAM] float 
  6590 ;;  z2              3   68[COMRAM] float 
  6591 ;;  d               3   71[COMRAM] float 
  6592 ;; Auto vars:     Size  Location     Type
  6593 ;;  temp            3    3[BANK0 ] float 
  6594 ;;  Pos_Centre_M    3    0[BANK0 ] float 
  6595 ;; Return value:  Size  Location     Type
  6596 ;;                  3   62[COMRAM] float 
  6597 ;; Registers used:
  6598 ;;		wreg, status,2, status,0, cstack
  6599 ;; Tracked objects:
  6600 ;;		On entry : 0/0
  6601 ;;		On exit  : 0/0
  6602 ;;		Unchanged: 0/0
  6603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6604 ;;      Params:        12       0       0       0       0       0       0       0       0
  6605 ;;      Locals:         0      30       0       0       0       0       0       0       0
  6606 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6607 ;;      Totals:        12      30       0       0       0       0       0       0       0
  6608 ;;Total ram usage:       42 bytes
  6609 ;; Hardware stack levels used:    1
  6610 ;; Hardware stack levels required when called:    2
  6611 ;; This function calls:
  6612 ;;		___ftadd
  6613 ;;		___ftdiv
  6614 ;;		___ftmul
  6615 ;;		___ftneg
  6616 ;;		_step_func
  6617 ;; This function is called by:
  6618 ;;		_Mem_values_obs
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622                           	psect	text32
  6623  0072C8                     __ptext32:
  6624                           	opt stack 0
  6625  0072C8                     _Pos_Centre_Mem:
  6626                           	opt stack 27
  6627                           
  6628                           ;obstacle_avoidance.c: 466: float Pos_Centre_Mem;
  6629                           ;obstacle_avoidance.c: 467: float temp=(((-1/(z2-y2))*d + (1*y2/(z2-y2)) + 1)* (step_fun
      +                          c(d-y2)-step_func(d-z2)));
  6630                           
  6631                           ;incstack = 0
  6632  0072C8  C045  F030         	movff	Pos_Centre_Mem@z2,___ftadd@f2
  6633  0072CC  C046  F031         	movff	Pos_Centre_Mem@z2+1,___ftadd@f2+1
  6634  0072D0  C047  F032         	movff	Pos_Centre_Mem@z2+2,___ftadd@f2+2
  6635  0072D4  C042  F02A         	movff	Pos_Centre_Mem@y2,___ftneg@f1
  6636  0072D8  C043  F02B         	movff	Pos_Centre_Mem@y2+1,___ftneg@f1+1
  6637  0072DC  C044  F02C         	movff	Pos_Centre_Mem@y2+2,___ftneg@f1+2
  6638  0072E0  EC45  F02C         	call	___ftneg	;wreg free
  6639  0072E4  C02A  F02D         	movff	?___ftneg,___ftadd@f1
  6640  0072E8  C02B  F02E         	movff	?___ftneg+1,___ftadd@f1+1
  6641  0072EC  C02C  F02F         	movff	?___ftneg+2,___ftadd@f1+2
  6642  0072F0  EC08  F036         	call	___ftadd	;wreg free
  6643  0072F4  C02D  F01E         	movff	?___ftadd,___ftdiv@f2
  6644  0072F8  C02E  F01F         	movff	?___ftadd+1,___ftdiv@f2+1
  6645  0072FC  C02F  F020         	movff	?___ftadd+2,___ftdiv@f2+2
  6646  007300  0E00               	movlw	0
  6647  007302  6E0F               	movwf	___ftmul@f2,c
  6648  007304  0E80               	movlw	128
  6649  007306  6E10               	movwf	___ftmul@f2+1,c
  6650  007308  0E3F               	movlw	63
  6651  00730A  6E11               	movwf	___ftmul@f2+2,c
  6652  00730C  C042  F00C         	movff	Pos_Centre_Mem@y2,___ftmul@f1
  6653  007310  C043  F00D         	movff	Pos_Centre_Mem@y2+1,___ftmul@f1+1
  6654  007314  C044  F00E         	movff	Pos_Centre_Mem@y2+2,___ftmul@f1+2
  6655  007318  EC41  F031         	call	___ftmul	;wreg free
  6656  00731C  C00C  F01B         	movff	?___ftmul,___ftdiv@f1
  6657  007320  C00D  F01C         	movff	?___ftmul+1,___ftdiv@f1+1
  6658  007324  C00E  F01D         	movff	?___ftmul+2,___ftdiv@f1+2
  6659  007328  ECD6  F030         	call	___ftdiv	;wreg free
  6660  00732C  C01B  F0BC         	movff	?___ftdiv,_Pos_Centre_Mem$1818
  6661  007330  C01C  F0BD         	movff	?___ftdiv+1,_Pos_Centre_Mem$1818+1
  6662  007334  C01D  F0BE         	movff	?___ftdiv+2,_Pos_Centre_Mem$1818+2
  6663                           
  6664                           ;obstacle_avoidance.c: 466: float Pos_Centre_Mem;
  6665                           ;obstacle_avoidance.c: 467: float temp=(((-1/(z2-y2))*d + (1*y2/(z2-y2)) + 1)* (step_fun
      +                          c(d-y2)-step_func(d-z2)));
  6666  007338  C048  F00F         	movff	Pos_Centre_Mem@d,___ftmul@f2
  6667  00733C  C049  F010         	movff	Pos_Centre_Mem@d+1,___ftmul@f2+1
  6668  007340  C04A  F011         	movff	Pos_Centre_Mem@d+2,___ftmul@f2+2
  6669  007344  C045  F030         	movff	Pos_Centre_Mem@z2,___ftadd@f2
  6670  007348  C046  F031         	movff	Pos_Centre_Mem@z2+1,___ftadd@f2+1
  6671  00734C  C047  F032         	movff	Pos_Centre_Mem@z2+2,___ftadd@f2+2
  6672  007350  C042  F02A         	movff	Pos_Centre_Mem@y2,___ftneg@f1
  6673  007354  C043  F02B         	movff	Pos_Centre_Mem@y2+1,___ftneg@f1+1
  6674  007358  C044  F02C         	movff	Pos_Centre_Mem@y2+2,___ftneg@f1+2
  6675  00735C  EC45  F02C         	call	___ftneg	;wreg free
  6676  007360  C02A  F02D         	movff	?___ftneg,___ftadd@f1
  6677  007364  C02B  F02E         	movff	?___ftneg+1,___ftadd@f1+1
  6678  007368  C02C  F02F         	movff	?___ftneg+2,___ftadd@f1+2
  6679  00736C  EC08  F036         	call	___ftadd	;wreg free
  6680  007370  C02D  F01E         	movff	?___ftadd,___ftdiv@f2
  6681  007374  C02E  F01F         	movff	?___ftadd+1,___ftdiv@f2+1
  6682  007378  C02F  F020         	movff	?___ftadd+2,___ftdiv@f2+2
  6683  00737C  0E00               	movlw	0
  6684  00737E  6E1B               	movwf	___ftdiv@f1,c
  6685  007380  0E80               	movlw	128
  6686  007382  6E1C               	movwf	___ftdiv@f1+1,c
  6687  007384  0EBF               	movlw	191
  6688  007386  6E1D               	movwf	___ftdiv@f1+2,c
  6689  007388  ECD6  F030         	call	___ftdiv	;wreg free
  6690  00738C  C01B  F00C         	movff	?___ftdiv,___ftmul@f1
  6691  007390  C01C  F00D         	movff	?___ftdiv+1,___ftmul@f1+1
  6692  007394  C01D  F00E         	movff	?___ftdiv+2,___ftmul@f1+2
  6693  007398  EC41  F031         	call	___ftmul	;wreg free
  6694  00739C  C00C  F0CE         	movff	?___ftmul,_Pos_Centre_Mem$1819
  6695  0073A0  C00D  F0CF         	movff	?___ftmul+1,_Pos_Centre_Mem$1819+1
  6696  0073A4  C00E  F0D0         	movff	?___ftmul+2,_Pos_Centre_Mem$1819+2
  6697                           
  6698                           ;obstacle_avoidance.c: 466: float Pos_Centre_Mem;
  6699                           ;obstacle_avoidance.c: 467: float temp=(((-1/(z2-y2))*d + (1*y2/(z2-y2)) + 1)* (step_fun
      +                          c(d-y2)-step_func(d-z2)));
  6700  0073A8  C0BC  F030         	movff	_Pos_Centre_Mem$1818,___ftadd@f2
  6701  0073AC  C0BD  F031         	movff	_Pos_Centre_Mem$1818+1,___ftadd@f2+1
  6702  0073B0  C0BE  F032         	movff	_Pos_Centre_Mem$1818+2,___ftadd@f2+2
  6703  0073B4  C0CE  F02D         	movff	_Pos_Centre_Mem$1819,___ftadd@f1
  6704  0073B8  C0CF  F02E         	movff	_Pos_Centre_Mem$1819+1,___ftadd@f1+1
  6705  0073BC  C0D0  F02F         	movff	_Pos_Centre_Mem$1819+2,___ftadd@f1+2
  6706  0073C0  EC08  F036         	call	___ftadd	;wreg free
  6707  0073C4  C02D  F0BF         	movff	?___ftadd,_Pos_Centre_Mem$1820
  6708  0073C8  C02E  F0C0         	movff	?___ftadd+1,_Pos_Centre_Mem$1820+1
  6709  0073CC  C02F  F0C1         	movff	?___ftadd+2,_Pos_Centre_Mem$1820+2
  6710                           
  6711                           ;obstacle_avoidance.c: 466: float Pos_Centre_Mem;
  6712                           ;obstacle_avoidance.c: 467: float temp=(((-1/(z2-y2))*d + (1*y2/(z2-y2)) + 1)* (step_fun
      +                          c(d-y2)-step_func(d-z2)));
  6713  0073D0  C048  F030         	movff	Pos_Centre_Mem@d,___ftadd@f2
  6714  0073D4  C049  F031         	movff	Pos_Centre_Mem@d+1,___ftadd@f2+1
  6715  0073D8  C04A  F032         	movff	Pos_Centre_Mem@d+2,___ftadd@f2+2
  6716  0073DC  C045  F02A         	movff	Pos_Centre_Mem@z2,___ftneg@f1
  6717  0073E0  C046  F02B         	movff	Pos_Centre_Mem@z2+1,___ftneg@f1+1
  6718  0073E4  C047  F02C         	movff	Pos_Centre_Mem@z2+2,___ftneg@f1+2
  6719  0073E8  EC45  F02C         	call	___ftneg	;wreg free
  6720  0073EC  C02A  F02D         	movff	?___ftneg,___ftadd@f1
  6721  0073F0  C02B  F02E         	movff	?___ftneg+1,___ftadd@f1+1
  6722  0073F4  C02C  F02F         	movff	?___ftneg+2,___ftadd@f1+2
  6723  0073F8  EC08  F036         	call	___ftadd	;wreg free
  6724  0073FC  C02D  F039         	movff	?___ftadd,step_func@x
  6725  007400  C02E  F03A         	movff	?___ftadd+1,step_func@x+1
  6726  007404  C02F  F03B         	movff	?___ftadd+2,step_func@x+2
  6727  007408  ECA4  F02C         	call	_step_func	;wreg free
  6728  00740C  C039  F0C2         	movff	?_step_func,_Pos_Centre_Mem$1821
  6729  007410  C03A  F0C3         	movff	?_step_func+1,_Pos_Centre_Mem$1821+1
  6730  007414  C03B  F0C4         	movff	?_step_func+2,_Pos_Centre_Mem$1821+2
  6731                           
  6732                           ;obstacle_avoidance.c: 466: float Pos_Centre_Mem;
  6733                           ;obstacle_avoidance.c: 467: float temp=(((-1/(z2-y2))*d + (1*y2/(z2-y2)) + 1)* (step_fun
      +                          c(d-y2)-step_func(d-z2)));
  6734  007418  C048  F030         	movff	Pos_Centre_Mem@d,___ftadd@f2
  6735  00741C  C049  F031         	movff	Pos_Centre_Mem@d+1,___ftadd@f2+1
  6736  007420  C04A  F032         	movff	Pos_Centre_Mem@d+2,___ftadd@f2+2
  6737  007424  C042  F02A         	movff	Pos_Centre_Mem@y2,___ftneg@f1
  6738  007428  C043  F02B         	movff	Pos_Centre_Mem@y2+1,___ftneg@f1+1
  6739  00742C  C044  F02C         	movff	Pos_Centre_Mem@y2+2,___ftneg@f1+2
  6740  007430  EC45  F02C         	call	___ftneg	;wreg free
  6741  007434  C02A  F02D         	movff	?___ftneg,___ftadd@f1
  6742  007438  C02B  F02E         	movff	?___ftneg+1,___ftadd@f1+1
  6743  00743C  C02C  F02F         	movff	?___ftneg+2,___ftadd@f1+2
  6744  007440  EC08  F036         	call	___ftadd	;wreg free
  6745  007444  C02D  F039         	movff	?___ftadd,step_func@x
  6746  007448  C02E  F03A         	movff	?___ftadd+1,step_func@x+1
  6747  00744C  C02F  F03B         	movff	?___ftadd+2,step_func@x+2
  6748  007450  ECA4  F02C         	call	_step_func	;wreg free
  6749  007454  C039  F0D1         	movff	?_step_func,_Pos_Centre_Mem$1822
  6750  007458  C03A  F0D2         	movff	?_step_func+1,_Pos_Centre_Mem$1822+1
  6751  00745C  C03B  F0D3         	movff	?_step_func+2,_Pos_Centre_Mem$1822+2
  6752                           
  6753                           ;obstacle_avoidance.c: 466: float Pos_Centre_Mem;
  6754                           ;obstacle_avoidance.c: 467: float temp=(((-1/(z2-y2))*d + (1*y2/(z2-y2)) + 1)* (step_fun
      +                          c(d-y2)-step_func(d-z2)));
  6755  007460  0E00               	movlw	0
  6756  007462  6E30               	movwf	___ftadd@f2,c
  6757  007464  0E80               	movlw	128
  6758  007466  6E31               	movwf	___ftadd@f2+1,c
  6759  007468  0E3F               	movlw	63
  6760  00746A  6E32               	movwf	___ftadd@f2+2,c
  6761  00746C  C0BF  F02D         	movff	_Pos_Centre_Mem$1820,___ftadd@f1
  6762  007470  C0C0  F02E         	movff	_Pos_Centre_Mem$1820+1,___ftadd@f1+1
  6763  007474  C0C1  F02F         	movff	_Pos_Centre_Mem$1820+2,___ftadd@f1+2
  6764  007478  EC08  F036         	call	___ftadd	;wreg free
  6765  00747C  C02D  F00C         	movff	?___ftadd,___ftmul@f1
  6766  007480  C02E  F00D         	movff	?___ftadd+1,___ftmul@f1+1
  6767  007484  C02F  F00E         	movff	?___ftadd+2,___ftmul@f1+2
  6768  007488  C0C2  F02A         	movff	_Pos_Centre_Mem$1821,___ftneg@f1
  6769  00748C  C0C3  F02B         	movff	_Pos_Centre_Mem$1821+1,___ftneg@f1+1
  6770  007490  C0C4  F02C         	movff	_Pos_Centre_Mem$1821+2,___ftneg@f1+2
  6771  007494  EC45  F02C         	call	___ftneg	;wreg free
  6772  007498  C02A  F030         	movff	?___ftneg,___ftadd@f2
  6773  00749C  C02B  F031         	movff	?___ftneg+1,___ftadd@f2+1
  6774  0074A0  C02C  F032         	movff	?___ftneg+2,___ftadd@f2+2
  6775  0074A4  C0D1  F02D         	movff	_Pos_Centre_Mem$1822,___ftadd@f1
  6776  0074A8  C0D2  F02E         	movff	_Pos_Centre_Mem$1822+1,___ftadd@f1+1
  6777  0074AC  C0D3  F02F         	movff	_Pos_Centre_Mem$1822+2,___ftadd@f1+2
  6778  0074B0  EC08  F036         	call	___ftadd	;wreg free
  6779  0074B4  C02D  F00F         	movff	?___ftadd,___ftmul@f2
  6780  0074B8  C02E  F010         	movff	?___ftadd+1,___ftmul@f2+1
  6781  0074BC  C02F  F011         	movff	?___ftadd+2,___ftmul@f2+2
  6782  0074C0  EC41  F031         	call	___ftmul	;wreg free
  6783  0074C4  C00C  F0B9         	movff	?___ftmul,Pos_Centre_Mem@temp
  6784  0074C8  C00D  F0BA         	movff	?___ftmul+1,Pos_Centre_Mem@temp+1
  6785  0074CC  C00E  F0BB         	movff	?___ftmul+2,Pos_Centre_Mem@temp+2
  6786                           
  6787                           ;obstacle_avoidance.c: 468: Pos_Centre_Mem=(((1/(y2-x2))*d - (x2*y2/(y2-x2)))* (step_fun
      +                          c(d-x2)-step_func(d-y2)))+ temp;
  6788  0074D0  C048  F030         	movff	Pos_Centre_Mem@d,___ftadd@f2
  6789  0074D4  C049  F031         	movff	Pos_Centre_Mem@d+1,___ftadd@f2+1
  6790  0074D8  C04A  F032         	movff	Pos_Centre_Mem@d+2,___ftadd@f2+2
  6791  0074DC  C042  F02A         	movff	Pos_Centre_Mem@y2,___ftneg@f1
  6792  0074E0  C043  F02B         	movff	Pos_Centre_Mem@y2+1,___ftneg@f1+1
  6793  0074E4  C044  F02C         	movff	Pos_Centre_Mem@y2+2,___ftneg@f1+2
  6794  0074E8  EC45  F02C         	call	___ftneg	;wreg free
  6795  0074EC  C02A  F02D         	movff	?___ftneg,___ftadd@f1
  6796  0074F0  C02B  F02E         	movff	?___ftneg+1,___ftadd@f1+1
  6797  0074F4  C02C  F02F         	movff	?___ftneg+2,___ftadd@f1+2
  6798  0074F8  EC08  F036         	call	___ftadd	;wreg free
  6799  0074FC  C02D  F039         	movff	?___ftadd,step_func@x
  6800  007500  C02E  F03A         	movff	?___ftadd+1,step_func@x+1
  6801  007504  C02F  F03B         	movff	?___ftadd+2,step_func@x+2
  6802  007508  ECA4  F02C         	call	_step_func	;wreg free
  6803  00750C  C039  F0C5         	movff	?_step_func,_Pos_Centre_Mem$1823
  6804  007510  C03A  F0C6         	movff	?_step_func+1,_Pos_Centre_Mem$1823+1
  6805  007514  C03B  F0C7         	movff	?_step_func+2,_Pos_Centre_Mem$1823+2
  6806                           
  6807                           ;obstacle_avoidance.c: 468: Pos_Centre_Mem=(((1/(y2-x2))*d - (x2*y2/(y2-x2)))* (step_fun
      +                          c(d-x2)-step_func(d-y2)))+ temp;
  6808  007518  C048  F030         	movff	Pos_Centre_Mem@d,___ftadd@f2
  6809  00751C  C049  F031         	movff	Pos_Centre_Mem@d+1,___ftadd@f2+1
  6810  007520  C04A  F032         	movff	Pos_Centre_Mem@d+2,___ftadd@f2+2
  6811  007524  C03F  F02A         	movff	Pos_Centre_Mem@x2,___ftneg@f1
  6812  007528  C040  F02B         	movff	Pos_Centre_Mem@x2+1,___ftneg@f1+1
  6813  00752C  C041  F02C         	movff	Pos_Centre_Mem@x2+2,___ftneg@f1+2
  6814  007530  EC45  F02C         	call	___ftneg	;wreg free
  6815  007534  C02A  F02D         	movff	?___ftneg,___ftadd@f1
  6816  007538  C02B  F02E         	movff	?___ftneg+1,___ftadd@f1+1
  6817  00753C  C02C  F02F         	movff	?___ftneg+2,___ftadd@f1+2
  6818  007540  EC08  F036         	call	___ftadd	;wreg free
  6819  007544  C02D  F039         	movff	?___ftadd,step_func@x
  6820  007548  C02E  F03A         	movff	?___ftadd+1,step_func@x+1
  6821  00754C  C02F  F03B         	movff	?___ftadd+2,step_func@x+2
  6822  007550  ECA4  F02C         	call	_step_func	;wreg free
  6823  007554  C039  F0CE         	movff	?_step_func,_Pos_Centre_Mem$1819
  6824  007558  C03A  F0CF         	movff	?_step_func+1,_Pos_Centre_Mem$1819+1
  6825  00755C  C03B  F0D0         	movff	?_step_func+2,_Pos_Centre_Mem$1819+2
  6826                           
  6827                           ;obstacle_avoidance.c: 468: Pos_Centre_Mem=(((1/(y2-x2))*d - (x2*y2/(y2-x2)))* (step_fun
      +                          c(d-x2)-step_func(d-y2)))+ temp;
  6828  007560  C042  F030         	movff	Pos_Centre_Mem@y2,___ftadd@f2
  6829  007564  C043  F031         	movff	Pos_Centre_Mem@y2+1,___ftadd@f2+1
  6830  007568  C044  F032         	movff	Pos_Centre_Mem@y2+2,___ftadd@f2+2
  6831  00756C  C03F  F02A         	movff	Pos_Centre_Mem@x2,___ftneg@f1
  6832  007570  C040  F02B         	movff	Pos_Centre_Mem@x2+1,___ftneg@f1+1
  6833  007574  C041  F02C         	movff	Pos_Centre_Mem@x2+2,___ftneg@f1+2
  6834  007578  EC45  F02C         	call	___ftneg	;wreg free
  6835  00757C  C02A  F02D         	movff	?___ftneg,___ftadd@f1
  6836  007580  C02B  F02E         	movff	?___ftneg+1,___ftadd@f1+1
  6837  007584  C02C  F02F         	movff	?___ftneg+2,___ftadd@f1+2
  6838  007588  EC08  F036         	call	___ftadd	;wreg free
  6839  00758C  C02D  F01E         	movff	?___ftadd,___ftdiv@f2
  6840  007590  C02E  F01F         	movff	?___ftadd+1,___ftdiv@f2+1
  6841  007594  C02F  F020         	movff	?___ftadd+2,___ftdiv@f2+2
  6842  007598  C042  F00F         	movff	Pos_Centre_Mem@y2,___ftmul@f2
  6843  00759C  C043  F010         	movff	Pos_Centre_Mem@y2+1,___ftmul@f2+1
  6844  0075A0  C044  F011         	movff	Pos_Centre_Mem@y2+2,___ftmul@f2+2
  6845  0075A4  C03F  F00C         	movff	Pos_Centre_Mem@x2,___ftmul@f1
  6846  0075A8  C040  F00D         	movff	Pos_Centre_Mem@x2+1,___ftmul@f1+1
  6847  0075AC  C041  F00E         	movff	Pos_Centre_Mem@x2+2,___ftmul@f1+2
  6848  0075B0  EC41  F031         	call	___ftmul	;wreg free
  6849  0075B4  C00C  F01B         	movff	?___ftmul,___ftdiv@f1
  6850  0075B8  C00D  F01C         	movff	?___ftmul+1,___ftdiv@f1+1
  6851  0075BC  C00E  F01D         	movff	?___ftmul+2,___ftdiv@f1+2
  6852  0075C0  ECD6  F030         	call	___ftdiv	;wreg free
  6853  0075C4  C01B  F0C8         	movff	?___ftdiv,_Pos_Centre_Mem$1824
  6854  0075C8  C01C  F0C9         	movff	?___ftdiv+1,_Pos_Centre_Mem$1824+1
  6855  0075CC  C01D  F0CA         	movff	?___ftdiv+2,_Pos_Centre_Mem$1824+2
  6856                           
  6857                           ;obstacle_avoidance.c: 468: Pos_Centre_Mem=(((1/(y2-x2))*d - (x2*y2/(y2-x2)))* (step_fun
      +                          c(d-x2)-step_func(d-y2)))+ temp;
  6858  0075D0  C048  F00F         	movff	Pos_Centre_Mem@d,___ftmul@f2
  6859  0075D4  C049  F010         	movff	Pos_Centre_Mem@d+1,___ftmul@f2+1
  6860  0075D8  C04A  F011         	movff	Pos_Centre_Mem@d+2,___ftmul@f2+2
  6861  0075DC  C042  F030         	movff	Pos_Centre_Mem@y2,___ftadd@f2
  6862  0075E0  C043  F031         	movff	Pos_Centre_Mem@y2+1,___ftadd@f2+1
  6863  0075E4  C044  F032         	movff	Pos_Centre_Mem@y2+2,___ftadd@f2+2
  6864  0075E8  C03F  F02A         	movff	Pos_Centre_Mem@x2,___ftneg@f1
  6865  0075EC  C040  F02B         	movff	Pos_Centre_Mem@x2+1,___ftneg@f1+1
  6866  0075F0  C041  F02C         	movff	Pos_Centre_Mem@x2+2,___ftneg@f1+2
  6867  0075F4  EC45  F02C         	call	___ftneg	;wreg free
  6868  0075F8  C02A  F02D         	movff	?___ftneg,___ftadd@f1
  6869  0075FC  C02B  F02E         	movff	?___ftneg+1,___ftadd@f1+1
  6870  007600  C02C  F02F         	movff	?___ftneg+2,___ftadd@f1+2
  6871  007604  EC08  F036         	call	___ftadd	;wreg free
  6872  007608  C02D  F01E         	movff	?___ftadd,___ftdiv@f2
  6873  00760C  C02E  F01F         	movff	?___ftadd+1,___ftdiv@f2+1
  6874  007610  C02F  F020         	movff	?___ftadd+2,___ftdiv@f2+2
  6875  007614  0E00               	movlw	0
  6876  007616  6E1B               	movwf	___ftdiv@f1,c
  6877  007618  0E80               	movlw	128
  6878  00761A  6E1C               	movwf	___ftdiv@f1+1,c
  6879  00761C  0E3F               	movlw	63
  6880  00761E  6E1D               	movwf	___ftdiv@f1+2,c
  6881  007620  ECD6  F030         	call	___ftdiv	;wreg free
  6882  007624  C01B  F00C         	movff	?___ftdiv,___ftmul@f1
  6883  007628  C01C  F00D         	movff	?___ftdiv+1,___ftmul@f1+1
  6884  00762C  C01D  F00E         	movff	?___ftdiv+2,___ftmul@f1+2
  6885  007630  EC41  F031         	call	___ftmul	;wreg free
  6886  007634  C00C  F0CB         	movff	?___ftmul,_Pos_Centre_Mem$1825
  6887  007638  C00D  F0CC         	movff	?___ftmul+1,_Pos_Centre_Mem$1825+1
  6888  00763C  C00E  F0CD         	movff	?___ftmul+2,_Pos_Centre_Mem$1825+2
  6889                           
  6890                           ;obstacle_avoidance.c: 468: Pos_Centre_Mem=(((1/(y2-x2))*d - (x2*y2/(y2-x2)))* (step_fun
      +                          c(d-x2)-step_func(d-y2)))+ temp;
  6891  007640  C0C5  F02A         	movff	_Pos_Centre_Mem$1823,___ftneg@f1
  6892  007644  C0C6  F02B         	movff	_Pos_Centre_Mem$1823+1,___ftneg@f1+1
  6893  007648  C0C7  F02C         	movff	_Pos_Centre_Mem$1823+2,___ftneg@f1+2
  6894  00764C  EC45  F02C         	call	___ftneg	;wreg free
  6895  007650  C02A  F030         	movff	?___ftneg,___ftadd@f2
  6896  007654  C02B  F031         	movff	?___ftneg+1,___ftadd@f2+1
  6897  007658  C02C  F032         	movff	?___ftneg+2,___ftadd@f2+2
  6898  00765C  C0CE  F02D         	movff	_Pos_Centre_Mem$1819,___ftadd@f1
  6899  007660  C0CF  F02E         	movff	_Pos_Centre_Mem$1819+1,___ftadd@f1+1
  6900  007664  C0D0  F02F         	movff	_Pos_Centre_Mem$1819+2,___ftadd@f1+2
  6901  007668  EC08  F036         	call	___ftadd	;wreg free
  6902  00766C  C02D  F00F         	movff	?___ftadd,___ftmul@f2
  6903  007670  C02E  F010         	movff	?___ftadd+1,___ftmul@f2+1
  6904  007674  C02F  F011         	movff	?___ftadd+2,___ftmul@f2+2
  6905  007678  C0C8  F02A         	movff	_Pos_Centre_Mem$1824,___ftneg@f1
  6906  00767C  C0C9  F02B         	movff	_Pos_Centre_Mem$1824+1,___ftneg@f1+1
  6907  007680  C0CA  F02C         	movff	_Pos_Centre_Mem$1824+2,___ftneg@f1+2
  6908  007684  EC45  F02C         	call	___ftneg	;wreg free
  6909  007688  C02A  F030         	movff	?___ftneg,___ftadd@f2
  6910  00768C  C02B  F031         	movff	?___ftneg+1,___ftadd@f2+1
  6911  007690  C02C  F032         	movff	?___ftneg+2,___ftadd@f2+2
  6912  007694  C0CB  F02D         	movff	_Pos_Centre_Mem$1825,___ftadd@f1
  6913  007698  C0CC  F02E         	movff	_Pos_Centre_Mem$1825+1,___ftadd@f1+1
  6914  00769C  C0CD  F02F         	movff	_Pos_Centre_Mem$1825+2,___ftadd@f1+2
  6915  0076A0  EC08  F036         	call	___ftadd	;wreg free
  6916  0076A4  C02D  F00C         	movff	?___ftadd,___ftmul@f1
  6917  0076A8  C02E  F00D         	movff	?___ftadd+1,___ftmul@f1+1
  6918  0076AC  C02F  F00E         	movff	?___ftadd+2,___ftmul@f1+2
  6919  0076B0  EC41  F031         	call	___ftmul	;wreg free
  6920  0076B4  C00C  F0D1         	movff	?___ftmul,_Pos_Centre_Mem$1822
  6921  0076B8  C00D  F0D2         	movff	?___ftmul+1,_Pos_Centre_Mem$1822+1
  6922  0076BC  C00E  F0D3         	movff	?___ftmul+2,_Pos_Centre_Mem$1822+2
  6923                           
  6924                           ;obstacle_avoidance.c: 468: Pos_Centre_Mem=(((1/(y2-x2))*d - (x2*y2/(y2-x2)))* (step_fun
      +                          c(d-x2)-step_func(d-y2)))+ temp;
  6925  0076C0  C0D1  F02D         	movff	_Pos_Centre_Mem$1822,___ftadd@f1
  6926  0076C4  C0D2  F02E         	movff	_Pos_Centre_Mem$1822+1,___ftadd@f1+1
  6927  0076C8  C0D3  F02F         	movff	_Pos_Centre_Mem$1822+2,___ftadd@f1+2
  6928  0076CC  C0B9  F030         	movff	Pos_Centre_Mem@temp,___ftadd@f2
  6929  0076D0  C0BA  F031         	movff	Pos_Centre_Mem@temp+1,___ftadd@f2+1
  6930  0076D4  C0BB  F032         	movff	Pos_Centre_Mem@temp+2,___ftadd@f2+2
  6931  0076D8  EC08  F036         	call	___ftadd	;wreg free
  6932  0076DC  C02D  F0B6         	movff	?___ftadd,Pos_Centre_Mem@Pos_Centre_Mem
  6933  0076E0  C02E  F0B7         	movff	?___ftadd+1,Pos_Centre_Mem@Pos_Centre_Mem+1
  6934  0076E4  C02F  F0B8         	movff	?___ftadd+2,Pos_Centre_Mem@Pos_Centre_Mem+2
  6935                           
  6936                           ;obstacle_avoidance.c: 469: return Pos_Centre_Mem;
  6937  0076E8  C0B6  F03F         	movff	Pos_Centre_Mem@Pos_Centre_Mem,?_Pos_Centre_Mem
  6938  0076EC  C0B7  F040         	movff	Pos_Centre_Mem@Pos_Centre_Mem+1,?_Pos_Centre_Mem+1
  6939  0076F0  C0B8  F041         	movff	Pos_Centre_Mem@Pos_Centre_Mem+2,?_Pos_Centre_Mem+2
  6940  0076F4  0012               	return	
  6941  0076F6                     __end_of_Pos_Centre_Mem:
  6942                           	opt stack 0
  6943                           tblptru	equ	0xFF8
  6944                           tblptrh	equ	0xFF7
  6945                           tblptrl	equ	0xFF6
  6946                           tablat	equ	0xFF5
  6947                           prodh	equ	0xFF4
  6948                           prodl	equ	0xFF3
  6949                           intcon	equ	0xFF2
  6950                           postinc0	equ	0xFEE
  6951                           wreg	equ	0xFE8
  6952                           postinc1	equ	0xFE6
  6953                           postdec1	equ	0xFE5
  6954                           fsr1h	equ	0xFE2
  6955                           fsr1l	equ	0xFE1
  6956                           indf2	equ	0xFDF
  6957                           postinc2	equ	0xFDE
  6958                           postdec2	equ	0xFDD
  6959                           fsr2h	equ	0xFDA
  6960                           fsr2l	equ	0xFD9
  6961                           status	equ	0xFD8
  6962                           
  6963 ;; *************** function _step_func *****************
  6964 ;; Defined at:
  6965 ;;		line 445 in file "obstacle_avoidance.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;  x               3   56[COMRAM] float 
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;  temp            3   59[COMRAM] float 
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  3   56[COMRAM] float 
  6972 ;; Registers used:
  6973 ;;		wreg, status,2, status,0
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6979 ;;      Params:         3       0       0       0       0       0       0       0       0
  6980 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6981 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6982 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6983 ;;Total ram usage:        6 bytes
  6984 ;; Hardware stack levels used:    1
  6985 ;; This function calls:
  6986 ;;		Nothing
  6987 ;; This function is called by:
  6988 ;;		_Pos_left_Mem
  6989 ;;		_Pos_Centre_Mem
  6990 ;;		_Pos_Right_Mem
  6991 ;; This function uses a non-reentrant model
  6992 ;;
  6993                           
  6994                           	psect	text33
  6995  005948                     __ptext33:
  6996                           	opt stack 0
  6997  005948                     _step_func:
  6998                           	opt stack 28
  6999                           
  7000                           ;obstacle_avoidance.c: 447: float temp;
  7001                           ;obstacle_avoidance.c: 448: if (x<0)
  7002                           
  7003                           ;incstack = 0
  7004  005948  503B               	movf	step_func@x+2,w,c
  7005  00594A  0A80               	xorlw	128
  7006  00594C  0F80               	addlw	128
  7007  00594E  E105               	bnz	u1405
  7008  005950  0E00               	movlw	0
  7009  005952  5C3A               	subwf	step_func@x+1,w,c
  7010  005954  E102               	bnz	u1405
  7011  005956  0E00               	movlw	0
  7012  005958  5C39               	subwf	step_func@x,w,c
  7013  00595A                     u1405:
  7014  00595A  B0D8               	btfsc	status,0,c
  7015  00595C  D006               	goto	l1917
  7016                           
  7017                           ;obstacle_avoidance.c: 449: temp=0;
  7018  00595E  0E00               	movlw	0
  7019  005960  6E3C               	movwf	step_func@temp,c
  7020  005962  0E00               	movlw	0
  7021  005964  6E3D               	movwf	step_func@temp+1,c
  7022  005966  0E00               	movlw	0
  7023  005968  D005               	goto	L14
  7024  00596A                     l1917:
  7025                           
  7026                           ;obstacle_avoidance.c: 450: else
  7027                           ;obstacle_avoidance.c: 451: temp=1;
  7028  00596A  0E00               	movlw	0
  7029  00596C  6E3C               	movwf	step_func@temp,c
  7030  00596E  0E80               	movlw	128
  7031  005970  6E3D               	movwf	step_func@temp+1,c
  7032  005972  0E3F               	movlw	63
  7033  005974                     L14:
  7034  005974  6E3E               	movwf	step_func@temp+2,c
  7035                           
  7036                           ;obstacle_avoidance.c: 452: return temp;
  7037  005976  C03C  F039         	movff	step_func@temp,?_step_func
  7038  00597A  C03D  F03A         	movff	step_func@temp+1,?_step_func+1
  7039  00597E  C03E  F03B         	movff	step_func@temp+2,?_step_func+2
  7040  005982  0012               	return	
  7041  005984                     __end_of_step_func:
  7042                           	opt stack 0
  7043                           tblptru	equ	0xFF8
  7044                           tblptrh	equ	0xFF7
  7045                           tblptrl	equ	0xFF6
  7046                           tablat	equ	0xFF5
  7047                           prodh	equ	0xFF4
  7048                           prodl	equ	0xFF3
  7049                           intcon	equ	0xFF2
  7050                           postinc0	equ	0xFEE
  7051                           wreg	equ	0xFE8
  7052                           postinc1	equ	0xFE6
  7053                           postdec1	equ	0xFE5
  7054                           fsr1h	equ	0xFE2
  7055                           fsr1l	equ	0xFE1
  7056                           indf2	equ	0xFDF
  7057                           postinc2	equ	0xFDE
  7058                           postdec2	equ	0xFDD
  7059                           fsr2h	equ	0xFDA
  7060                           fsr2l	equ	0xFD9
  7061                           status	equ	0xFD8
  7062                           
  7063 ;; *************** function ___ftneg *****************
  7064 ;; Defined at:
  7065 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;  f1              3   41[COMRAM] float 
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;		None
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  3   41[COMRAM] float 
  7072 ;; Registers used:
  7073 ;;		wreg, status,2, status,0
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7079 ;;      Params:         3       0       0       0       0       0       0       0       0
  7080 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7081 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7082 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7083 ;;Total ram usage:        3 bytes
  7084 ;; Hardware stack levels used:    1
  7085 ;; This function calls:
  7086 ;;		Nothing
  7087 ;; This function is called by:
  7088 ;;		_area
  7089 ;;		_Pos_left_Mem
  7090 ;;		_Pos_Centre_Mem
  7091 ;;		_Pos_Right_Mem
  7092 ;;		_obstacle_avoid_controller
  7093 ;; This function uses a non-reentrant model
  7094 ;;
  7095                           
  7096                           	psect	text34
  7097  00588A                     __ptext34:
  7098                           	opt stack 0
  7099  00588A                     ___ftneg:
  7100                           	opt stack 28
  7101                           
  7102                           ;incstack = 0
  7103  00588A  0E7F               	movlw	127
  7104  00588C  142C               	andwf	___ftneg@f1+2,w,c
  7105  00588E  102B               	iorwf	___ftneg@f1+1,w,c
  7106  005890  102A               	iorwf	___ftneg@f1,w,c
  7107  005892  B4D8               	btfsc	status,2,c
  7108  005894  D006               	goto	l812
  7109  005896  0E00               	movlw	0
  7110  005898  1A2A               	xorwf	___ftneg@f1,f,c
  7111  00589A  0E00               	movlw	0
  7112  00589C  1A2B               	xorwf	___ftneg@f1+1,f,c
  7113  00589E  0E80               	movlw	128
  7114  0058A0  1A2C               	xorwf	___ftneg@f1+2,f,c
  7115  0058A2                     l812:
  7116  0058A2  C02A  F02A         	movff	___ftneg@f1,?___ftneg
  7117  0058A6  C02B  F02B         	movff	___ftneg@f1+1,?___ftneg+1
  7118  0058AA  C02C  F02C         	movff	___ftneg@f1+2,?___ftneg+2
  7119  0058AE  0012               	return	
  7120  0058B0                     __end_of___ftneg:
  7121                           	opt stack 0
  7122                           tblptru	equ	0xFF8
  7123                           tblptrh	equ	0xFF7
  7124                           tblptrl	equ	0xFF6
  7125                           tablat	equ	0xFF5
  7126                           prodh	equ	0xFF4
  7127                           prodl	equ	0xFF3
  7128                           intcon	equ	0xFF2
  7129                           postinc0	equ	0xFEE
  7130                           wreg	equ	0xFE8
  7131                           postinc1	equ	0xFE6
  7132                           postdec1	equ	0xFE5
  7133                           fsr1h	equ	0xFE2
  7134                           fsr1l	equ	0xFE1
  7135                           indf2	equ	0xFDF
  7136                           postinc2	equ	0xFDE
  7137                           postdec2	equ	0xFDD
  7138                           fsr2h	equ	0xFDA
  7139                           fsr2l	equ	0xFD9
  7140                           status	equ	0xFD8
  7141                           
  7142 ;; *************** function ___ftmul *****************
  7143 ;; Defined at:
  7144 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  7145 ;; Parameters:    Size  Location     Type
  7146 ;;  f1              3   11[COMRAM] float 
  7147 ;;  f2              3   14[COMRAM] float 
  7148 ;; Auto vars:     Size  Location     Type
  7149 ;;  f3_as_produc    3   21[COMRAM] unsigned um
  7150 ;;  sign            1   25[COMRAM] unsigned char 
  7151 ;;  cntr            1   24[COMRAM] unsigned char 
  7152 ;;  exp             1   20[COMRAM] unsigned char 
  7153 ;; Return value:  Size  Location     Type
  7154 ;;                  3   11[COMRAM] float 
  7155 ;; Registers used:
  7156 ;;		wreg, status,2, status,0, cstack
  7157 ;; Tracked objects:
  7158 ;;		On entry : 0/0
  7159 ;;		On exit  : 0/0
  7160 ;;		Unchanged: 0/0
  7161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7162 ;;      Params:         6       0       0       0       0       0       0       0       0
  7163 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7164 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7165 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7166 ;;Total ram usage:       15 bytes
  7167 ;; Hardware stack levels used:    1
  7168 ;; Hardware stack levels required when called:    1
  7169 ;; This function calls:
  7170 ;;		___ftpack
  7171 ;; This function is called by:
  7172 ;;		_read_ultrasonic_s3
  7173 ;;		_read_ultrasonic_s4
  7174 ;;		_read_ultrasonic_s5
  7175 ;;		_read_ultrasonic_s6
  7176 ;;		_read_ultrasonic_s7
  7177 ;;		_read_ultrasonic_s8
  7178 ;;		_area
  7179 ;;		_Pos_left_Mem
  7180 ;;		_Pos_Centre_Mem
  7181 ;;		_Pos_Right_Mem
  7182 ;;		_obstacle_avoid_controller
  7183 ;; This function uses a non-reentrant model
  7184 ;;
  7185                           
  7186                           	psect	text35
  7187  006282                     __ptext35:
  7188                           	opt stack 0
  7189  006282                     ___ftmul:
  7190                           	opt stack 27
  7191                           
  7192                           ;incstack = 0
  7193  006282  C00E  F012         	movff	___ftmul@f1+2,??___ftmul
  7194  006286  6A13               	clrf	(??___ftmul+1)& (0+255),c
  7195  006288  6A14               	clrf	(??___ftmul+2)& (0+255),c
  7196  00628A  340D               	rlcf	___ftmul@f1+1,w,c
  7197  00628C  3612               	rlcf	??___ftmul& (0+255),f,c
  7198  00628E  E301               	bnc	u1691
  7199  006290  8013               	bsf	(??___ftmul+1)& (0+255),0,c
  7200  006292                     u1691:
  7201  006292  5012               	movf	??___ftmul,w,c
  7202  006294  6E15               	movwf	___ftmul@exp,c
  7203  006296  6615               	tstfsz	___ftmul@exp& (0+255),c
  7204  006298  D001               	goto	l2051
  7205  00629A  D00C               	goto	u1720
  7206  00629C                     l2051:
  7207  00629C  C011  F012         	movff	___ftmul@f2+2,??___ftmul
  7208  0062A0  6A13               	clrf	(??___ftmul+1)& (0+255),c
  7209  0062A2  6A14               	clrf	(??___ftmul+2)& (0+255),c
  7210  0062A4  3410               	rlcf	___ftmul@f2+1,w,c
  7211  0062A6  3612               	rlcf	??___ftmul& (0+255),f,c
  7212  0062A8  E301               	bnc	u1711
  7213  0062AA  8013               	bsf	(??___ftmul+1)& (0+255),0,c
  7214  0062AC                     u1711:
  7215  0062AC  5012               	movf	??___ftmul,w,c
  7216  0062AE  6E1A               	movwf	___ftmul@sign,c
  7217  0062B0  661A               	tstfsz	___ftmul@sign& (0+255),c
  7218  0062B2  D007               	goto	l2057
  7219  0062B4                     u1720:
  7220  0062B4  0E00               	movlw	0
  7221  0062B6  6E0C               	movwf	?___ftmul,c
  7222  0062B8  0E00               	movlw	0
  7223  0062BA  6E0D               	movwf	?___ftmul+1,c
  7224  0062BC  0E00               	movlw	0
  7225  0062BE  6E0E               	movwf	?___ftmul+2,c
  7226  0062C0  D051               	goto	l802
  7227  0062C2                     l2057:
  7228  0062C2  501A               	movf	___ftmul@sign,w,c
  7229  0062C4  0F7B               	addlw	123
  7230  0062C6  2615               	addwf	___ftmul@exp,f,c
  7231  0062C8  C00E  F01A         	movff	___ftmul@f1+2,___ftmul@sign
  7232  0062CC  5011               	movf	___ftmul@f2+2,w,c
  7233  0062CE  1A1A               	xorwf	___ftmul@sign,f,c
  7234  0062D0  0E80               	movlw	128
  7235  0062D2  161A               	andwf	___ftmul@sign,f,c
  7236  0062D4  8E0D               	bsf	___ftmul@f1+1,7,c
  7237  0062D6  8E10               	bsf	___ftmul@f2+1,7,c
  7238  0062D8  0EFF               	movlw	255
  7239  0062DA  160F               	andwf	___ftmul@f2,f,c
  7240  0062DC  0EFF               	movlw	255
  7241  0062DE  1610               	andwf	___ftmul@f2+1,f,c
  7242  0062E0  0E00               	movlw	0
  7243  0062E2  1611               	andwf	___ftmul@f2+2,f,c
  7244  0062E4  0E00               	movlw	0
  7245  0062E6  6E16               	movwf	___ftmul@f3_as_product,c
  7246  0062E8  0E00               	movlw	0
  7247  0062EA  6E17               	movwf	___ftmul@f3_as_product+1,c
  7248  0062EC  0E00               	movlw	0
  7249  0062EE  6E18               	movwf	___ftmul@f3_as_product+2,c
  7250  0062F0  0E07               	movlw	7
  7251  0062F2  6E19               	movwf	___ftmul@cntr,c
  7252  0062F4                     l2071:
  7253  0062F4  A00C               	btfss	___ftmul@f1,0,c
  7254  0062F6  D006               	goto	l2075
  7255  0062F8  500F               	movf	___ftmul@f2,w,c
  7256  0062FA  2616               	addwf	___ftmul@f3_as_product,f,c
  7257  0062FC  5010               	movf	___ftmul@f2+1,w,c
  7258  0062FE  2217               	addwfc	___ftmul@f3_as_product+1,f,c
  7259  006300  5011               	movf	___ftmul@f2+2,w,c
  7260  006302  2218               	addwfc	___ftmul@f3_as_product+2,f,c
  7261  006304                     l2075:
  7262  006304  90D8               	bcf	status,0,c
  7263  006306  320E               	rrcf	___ftmul@f1+2,f,c
  7264  006308  320D               	rrcf	___ftmul@f1+1,f,c
  7265  00630A  320C               	rrcf	___ftmul@f1,f,c
  7266  00630C  90D8               	bcf	status,0,c
  7267  00630E  360F               	rlcf	___ftmul@f2,f,c
  7268  006310  3610               	rlcf	___ftmul@f2+1,f,c
  7269  006312  3611               	rlcf	___ftmul@f2+2,f,c
  7270  006314  2E19               	decfsz	___ftmul@cntr,f,c
  7271  006316  D7EE               	goto	l2071
  7272  006318  0E09               	movlw	9
  7273  00631A  6E19               	movwf	___ftmul@cntr,c
  7274  00631C                     l2081:
  7275  00631C  A00C               	btfss	___ftmul@f1,0,c
  7276  00631E  D006               	goto	l2085
  7277  006320  500F               	movf	___ftmul@f2,w,c
  7278  006322  2616               	addwf	___ftmul@f3_as_product,f,c
  7279  006324  5010               	movf	___ftmul@f2+1,w,c
  7280  006326  2217               	addwfc	___ftmul@f3_as_product+1,f,c
  7281  006328  5011               	movf	___ftmul@f2+2,w,c
  7282  00632A  2218               	addwfc	___ftmul@f3_as_product+2,f,c
  7283  00632C                     l2085:
  7284  00632C  90D8               	bcf	status,0,c
  7285  00632E  320E               	rrcf	___ftmul@f1+2,f,c
  7286  006330  320D               	rrcf	___ftmul@f1+1,f,c
  7287  006332  320C               	rrcf	___ftmul@f1,f,c
  7288  006334  90D8               	bcf	status,0,c
  7289  006336  3218               	rrcf	___ftmul@f3_as_product+2,f,c
  7290  006338  3217               	rrcf	___ftmul@f3_as_product+1,f,c
  7291  00633A  3216               	rrcf	___ftmul@f3_as_product,f,c
  7292  00633C  2E19               	decfsz	___ftmul@cntr,f,c
  7293  00633E  D7EE               	goto	l2081
  7294  006340  C016  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  7295  006344  C017  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7296  006348  C018  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7297  00634C  C015  F004         	movff	___ftmul@exp,___ftpack@exp
  7298  006350  C01A  F005         	movff	___ftmul@sign,___ftpack@sign
  7299  006354  EC18  F030         	call	___ftpack	;wreg free
  7300  006358  C001  F00C         	movff	?___ftpack,?___ftmul
  7301  00635C  C002  F00D         	movff	?___ftpack+1,?___ftmul+1
  7302  006360  C003  F00E         	movff	?___ftpack+2,?___ftmul+2
  7303  006364                     l802:
  7304  006364  0012               	return	
  7305  006366                     __end_of___ftmul:
  7306                           	opt stack 0
  7307                           tblptru	equ	0xFF8
  7308                           tblptrh	equ	0xFF7
  7309                           tblptrl	equ	0xFF6
  7310                           tablat	equ	0xFF5
  7311                           prodh	equ	0xFF4
  7312                           prodl	equ	0xFF3
  7313                           intcon	equ	0xFF2
  7314                           postinc0	equ	0xFEE
  7315                           wreg	equ	0xFE8
  7316                           postinc1	equ	0xFE6
  7317                           postdec1	equ	0xFE5
  7318                           fsr1h	equ	0xFE2
  7319                           fsr1l	equ	0xFE1
  7320                           indf2	equ	0xFDF
  7321                           postinc2	equ	0xFDE
  7322                           postdec2	equ	0xFDD
  7323                           fsr2h	equ	0xFDA
  7324                           fsr2l	equ	0xFD9
  7325                           status	equ	0xFD8
  7326                           
  7327 ;; *************** function ___ftdiv *****************
  7328 ;; Defined at:
  7329 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdiv.c"
  7330 ;; Parameters:    Size  Location     Type
  7331 ;;  f1              3   26[COMRAM] float 
  7332 ;;  f2              3   29[COMRAM] float 
  7333 ;; Auto vars:     Size  Location     Type
  7334 ;;  f3              3   36[COMRAM] float 
  7335 ;;  sign            1   40[COMRAM] unsigned char 
  7336 ;;  exp             1   39[COMRAM] unsigned char 
  7337 ;;  cntr            1   35[COMRAM] unsigned char 
  7338 ;; Return value:  Size  Location     Type
  7339 ;;                  3   26[COMRAM] float 
  7340 ;; Registers used:
  7341 ;;		wreg, status,2, status,0, cstack
  7342 ;; Tracked objects:
  7343 ;;		On entry : 0/0
  7344 ;;		On exit  : 0/0
  7345 ;;		Unchanged: 0/0
  7346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7347 ;;      Params:         6       0       0       0       0       0       0       0       0
  7348 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7349 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7350 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7351 ;;Total ram usage:       15 bytes
  7352 ;; Hardware stack levels used:    1
  7353 ;; Hardware stack levels required when called:    1
  7354 ;; This function calls:
  7355 ;;		___ftpack
  7356 ;; This function is called by:
  7357 ;;		_area
  7358 ;;		_Pos_left_Mem
  7359 ;;		_Pos_Centre_Mem
  7360 ;;		_Pos_Right_Mem
  7361 ;;		_obstacle_avoid_controller
  7362 ;; This function uses a non-reentrant model
  7363 ;;
  7364                           
  7365                           	psect	text36
  7366  0061AC                     __ptext36:
  7367                           	opt stack 0
  7368  0061AC                     ___ftdiv:
  7369                           	opt stack 27
  7370                           
  7371                           ;incstack = 0
  7372  0061AC  C01D  F021         	movff	___ftdiv@f1+2,??___ftdiv
  7373  0061B0  6A22               	clrf	(??___ftdiv+1)& (0+255),c
  7374  0061B2  6A23               	clrf	(??___ftdiv+2)& (0+255),c
  7375  0061B4  341C               	rlcf	___ftdiv@f1+1,w,c
  7376  0061B6  3621               	rlcf	??___ftdiv& (0+255),f,c
  7377  0061B8  E301               	bnc	u1641
  7378  0061BA  8022               	bsf	(??___ftdiv+1)& (0+255),0,c
  7379  0061BC                     u1641:
  7380  0061BC  5021               	movf	??___ftdiv,w,c
  7381  0061BE  6E28               	movwf	___ftdiv@exp,c
  7382  0061C0  6628               	tstfsz	___ftdiv@exp& (0+255),c
  7383  0061C2  D001               	goto	l2005
  7384  0061C4  D00C               	goto	u1670
  7385  0061C6                     l2005:
  7386  0061C6  C020  F021         	movff	___ftdiv@f2+2,??___ftdiv
  7387  0061CA  6A22               	clrf	(??___ftdiv+1)& (0+255),c
  7388  0061CC  6A23               	clrf	(??___ftdiv+2)& (0+255),c
  7389  0061CE  341F               	rlcf	___ftdiv@f2+1,w,c
  7390  0061D0  3621               	rlcf	??___ftdiv& (0+255),f,c
  7391  0061D2  E301               	bnc	u1661
  7392  0061D4  8022               	bsf	(??___ftdiv+1)& (0+255),0,c
  7393  0061D6                     u1661:
  7394  0061D6  5021               	movf	??___ftdiv,w,c
  7395  0061D8  6E29               	movwf	___ftdiv@sign,c
  7396  0061DA  6629               	tstfsz	___ftdiv@sign& (0+255),c
  7397  0061DC  D007               	goto	l2011
  7398  0061DE                     u1670:
  7399  0061DE  0E00               	movlw	0
  7400  0061E0  6E1B               	movwf	?___ftdiv,c
  7401  0061E2  0E00               	movlw	0
  7402  0061E4  6E1C               	movwf	?___ftdiv+1,c
  7403  0061E6  0E00               	movlw	0
  7404  0061E8  6E1D               	movwf	?___ftdiv+2,c
  7405  0061EA  D04A               	goto	l787
  7406  0061EC                     l2011:
  7407  0061EC  0E00               	movlw	0
  7408  0061EE  6E25               	movwf	___ftdiv@f3,c
  7409  0061F0  0E00               	movlw	0
  7410  0061F2  6E26               	movwf	___ftdiv@f3+1,c
  7411  0061F4  0E00               	movlw	0
  7412  0061F6  6E27               	movwf	___ftdiv@f3+2,c
  7413  0061F8  5029               	movf	___ftdiv@sign,w,c
  7414  0061FA  0F89               	addlw	137
  7415  0061FC  5E28               	subwf	___ftdiv@exp,f,c
  7416  0061FE  C01D  F029         	movff	___ftdiv@f1+2,___ftdiv@sign
  7417  006202  5020               	movf	___ftdiv@f2+2,w,c
  7418  006204  1A29               	xorwf	___ftdiv@sign,f,c
  7419  006206  0E80               	movlw	128
  7420  006208  1629               	andwf	___ftdiv@sign,f,c
  7421  00620A  8E1C               	bsf	___ftdiv@f1+1,7,c
  7422  00620C  0EFF               	movlw	255
  7423  00620E  161B               	andwf	___ftdiv@f1,f,c
  7424  006210  0EFF               	movlw	255
  7425  006212  161C               	andwf	___ftdiv@f1+1,f,c
  7426  006214  0E00               	movlw	0
  7427  006216  161D               	andwf	___ftdiv@f1+2,f,c
  7428  006218  8E1F               	bsf	___ftdiv@f2+1,7,c
  7429  00621A  0EFF               	movlw	255
  7430  00621C  161E               	andwf	___ftdiv@f2,f,c
  7431  00621E  0EFF               	movlw	255
  7432  006220  161F               	andwf	___ftdiv@f2+1,f,c
  7433  006222  0E00               	movlw	0
  7434  006224  1620               	andwf	___ftdiv@f2+2,f,c
  7435  006226  0E18               	movlw	24
  7436  006228  6E24               	movwf	___ftdiv@cntr,c
  7437  00622A                     l2031:
  7438  00622A  90D8               	bcf	status,0,c
  7439  00622C  3625               	rlcf	___ftdiv@f3,f,c
  7440  00622E  3626               	rlcf	___ftdiv@f3+1,f,c
  7441  006230  3627               	rlcf	___ftdiv@f3+2,f,c
  7442  006232  501E               	movf	___ftdiv@f2,w,c
  7443  006234  5C1B               	subwf	___ftdiv@f1,w,c
  7444  006236  501F               	movf	___ftdiv@f2+1,w,c
  7445  006238  581C               	subwfb	___ftdiv@f1+1,w,c
  7446  00623A  5020               	movf	___ftdiv@f2+2,w,c
  7447  00623C  581D               	subwfb	___ftdiv@f1+2,w,c
  7448  00623E  A0D8               	btfss	status,0,c
  7449  006240  D007               	goto	l790
  7450  006242  501E               	movf	___ftdiv@f2,w,c
  7451  006244  5E1B               	subwf	___ftdiv@f1,f,c
  7452  006246  501F               	movf	___ftdiv@f2+1,w,c
  7453  006248  5A1C               	subwfb	___ftdiv@f1+1,f,c
  7454  00624A  5020               	movf	___ftdiv@f2+2,w,c
  7455  00624C  5A1D               	subwfb	___ftdiv@f1+2,f,c
  7456  00624E  8025               	bsf	___ftdiv@f3,0,c
  7457  006250                     l790:
  7458  006250  90D8               	bcf	status,0,c
  7459  006252  361B               	rlcf	___ftdiv@f1,f,c
  7460  006254  361C               	rlcf	___ftdiv@f1+1,f,c
  7461  006256  361D               	rlcf	___ftdiv@f1+2,f,c
  7462  006258  2E24               	decfsz	___ftdiv@cntr,f,c
  7463  00625A  D7E7               	goto	l2031
  7464  00625C  C025  F001         	movff	___ftdiv@f3,___ftpack@arg
  7465  006260  C026  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  7466  006264  C027  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  7467  006268  C028  F004         	movff	___ftdiv@exp,___ftpack@exp
  7468  00626C  C029  F005         	movff	___ftdiv@sign,___ftpack@sign
  7469  006270  EC18  F030         	call	___ftpack	;wreg free
  7470  006274  C001  F01B         	movff	?___ftpack,?___ftdiv
  7471  006278  C002  F01C         	movff	?___ftpack+1,?___ftdiv+1
  7472  00627C  C003  F01D         	movff	?___ftpack+2,?___ftdiv+2
  7473  006280                     l787:
  7474  006280  0012               	return	
  7475  006282                     __end_of___ftdiv:
  7476                           	opt stack 0
  7477                           tblptru	equ	0xFF8
  7478                           tblptrh	equ	0xFF7
  7479                           tblptrl	equ	0xFF6
  7480                           tablat	equ	0xFF5
  7481                           prodh	equ	0xFF4
  7482                           prodl	equ	0xFF3
  7483                           intcon	equ	0xFF2
  7484                           postinc0	equ	0xFEE
  7485                           wreg	equ	0xFE8
  7486                           postinc1	equ	0xFE6
  7487                           postdec1	equ	0xFE5
  7488                           fsr1h	equ	0xFE2
  7489                           fsr1l	equ	0xFE1
  7490                           indf2	equ	0xFDF
  7491                           postinc2	equ	0xFDE
  7492                           postdec2	equ	0xFDD
  7493                           fsr2h	equ	0xFDA
  7494                           fsr2l	equ	0xFD9
  7495                           status	equ	0xFD8
  7496                           
  7497 ;; *************** function ___ftadd *****************
  7498 ;; Defined at:
  7499 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  7500 ;; Parameters:    Size  Location     Type
  7501 ;;  f1              3   44[COMRAM] float 
  7502 ;;  f2              3   47[COMRAM] float 
  7503 ;; Auto vars:     Size  Location     Type
  7504 ;;  exp1            1   55[COMRAM] unsigned char 
  7505 ;;  exp2            1   54[COMRAM] unsigned char 
  7506 ;;  sign            1   53[COMRAM] unsigned char 
  7507 ;; Return value:  Size  Location     Type
  7508 ;;                  3   44[COMRAM] float 
  7509 ;; Registers used:
  7510 ;;		wreg, status,2, status,0, cstack
  7511 ;; Tracked objects:
  7512 ;;		On entry : 0/0
  7513 ;;		On exit  : 0/0
  7514 ;;		Unchanged: 0/0
  7515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7516 ;;      Params:         6       0       0       0       0       0       0       0       0
  7517 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7518 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7519 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7520 ;;Total ram usage:       12 bytes
  7521 ;; Hardware stack levels used:    1
  7522 ;; Hardware stack levels required when called:    1
  7523 ;; This function calls:
  7524 ;;		___ftpack
  7525 ;; This function is called by:
  7526 ;;		_read_ultrasonic_s3
  7527 ;;		_read_ultrasonic_s4
  7528 ;;		_read_ultrasonic_s5
  7529 ;;		_read_ultrasonic_s6
  7530 ;;		_read_ultrasonic_s7
  7531 ;;		_read_ultrasonic_s8
  7532 ;;		_area
  7533 ;;		_Pos_left_Mem
  7534 ;;		_Pos_Centre_Mem
  7535 ;;		_Pos_Right_Mem
  7536 ;;		_obstacle_avoid_controller
  7537 ;; This function uses a non-reentrant model
  7538 ;;
  7539                           
  7540                           	psect	text37
  7541  006C10                     __ptext37:
  7542                           	opt stack 0
  7543  006C10                     ___ftadd:
  7544                           	opt stack 27
  7545                           
  7546                           ;incstack = 0
  7547  006C10  C02F  F033         	movff	___ftadd@f1+2,??___ftadd
  7548  006C14  6A34               	clrf	(??___ftadd+1)& (0+255),c
  7549  006C16  6A35               	clrf	(??___ftadd+2)& (0+255),c
  7550  006C18  342E               	rlcf	___ftadd@f1+1,w,c
  7551  006C1A  3633               	rlcf	??___ftadd& (0+255),f,c
  7552  006C1C  E301               	bnc	u1431
  7553  006C1E  8034               	bsf	(??___ftadd+1)& (0+255),0,c
  7554  006C20                     u1431:
  7555  006C20  5033               	movf	??___ftadd,w,c
  7556  006C22  6E38               	movwf	___ftadd@exp1,c
  7557  006C24  C032  F033         	movff	___ftadd@f2+2,??___ftadd
  7558  006C28  6A34               	clrf	(??___ftadd+1)& (0+255),c
  7559  006C2A  6A35               	clrf	(??___ftadd+2)& (0+255),c
  7560  006C2C  3431               	rlcf	___ftadd@f2+1,w,c
  7561  006C2E  3633               	rlcf	??___ftadd& (0+255),f,c
  7562  006C30  E301               	bnc	u1441
  7563  006C32  8034               	bsf	(??___ftadd+1)& (0+255),0,c
  7564  006C34                     u1441:
  7565  006C34  5033               	movf	??___ftadd,w,c
  7566  006C36  6E37               	movwf	___ftadd@exp2,c
  7567  006C38  5038               	movf	___ftadd@exp1,w,c
  7568  006C3A  B4D8               	btfsc	status,2,c
  7569  006C3C  D00C               	goto	l755
  7570  006C3E  5037               	movf	___ftadd@exp2,w,c
  7571  006C40  5C38               	subwf	___ftadd@exp1,w,c
  7572  006C42  B0D8               	btfsc	status,0,c
  7573  006C44  D00F               	goto	l1937
  7574  006C46  5038               	movf	___ftadd@exp1,w,c
  7575  006C48  0800               	sublw	0
  7576  006C4A  2437               	addwf	___ftadd@exp2,w,c
  7577  006C4C  6E33               	movwf	??___ftadd& (0+255),c
  7578  006C4E  0E19               	movlw	25
  7579  006C50  5C33               	subwf	??___ftadd,w,c
  7580  006C52  A0D8               	btfss	status,0,c
  7581  006C54  D007               	goto	l1937
  7582  006C56                     l755:
  7583  006C56  C030  F02D         	movff	___ftadd@f2,?___ftadd
  7584  006C5A  C031  F02E         	movff	___ftadd@f2+1,?___ftadd+1
  7585  006C5E  C032  F02F         	movff	___ftadd@f2+2,?___ftadd+2
  7586  006C62  D0AB               	goto	l756
  7587  006C64                     l1937:
  7588  006C64  5037               	movf	___ftadd@exp2,w,c
  7589  006C66  B4D8               	btfsc	status,2,c
  7590  006C68  D00C               	goto	l759
  7591  006C6A  5038               	movf	___ftadd@exp1,w,c
  7592  006C6C  5C37               	subwf	___ftadd@exp2,w,c
  7593  006C6E  B0D8               	btfsc	status,0,c
  7594  006C70  D00F               	goto	l1943
  7595  006C72  5037               	movf	___ftadd@exp2,w,c
  7596  006C74  0800               	sublw	0
  7597  006C76  2438               	addwf	___ftadd@exp1,w,c
  7598  006C78  6E33               	movwf	??___ftadd& (0+255),c
  7599  006C7A  0E19               	movlw	25
  7600  006C7C  5C33               	subwf	??___ftadd,w,c
  7601  006C7E  A0D8               	btfss	status,0,c
  7602  006C80  D007               	goto	l1943
  7603  006C82                     l759:
  7604  006C82  C02D  F02D         	movff	___ftadd@f1,?___ftadd
  7605  006C86  C02E  F02E         	movff	___ftadd@f1+1,?___ftadd+1
  7606  006C8A  C02F  F02F         	movff	___ftadd@f1+2,?___ftadd+2
  7607  006C8E  D095               	goto	l756
  7608  006C90                     l1943:
  7609  006C90  0E06               	movlw	6
  7610  006C92  6E36               	movwf	___ftadd@sign,c
  7611  006C94  BE2F               	btfsc	___ftadd@f1+2,7,c
  7612  006C96  8E36               	bsf	___ftadd@sign,7,c
  7613  006C98  BE32               	btfsc	___ftadd@f2+2,7,c
  7614  006C9A  8C36               	bsf	___ftadd@sign,6,c
  7615  006C9C  8E2E               	bsf	___ftadd@f1+1,7,c
  7616  006C9E  0EFF               	movlw	255
  7617  006CA0  162D               	andwf	___ftadd@f1,f,c
  7618  006CA2  0EFF               	movlw	255
  7619  006CA4  162E               	andwf	___ftadd@f1+1,f,c
  7620  006CA6  0E00               	movlw	0
  7621  006CA8  162F               	andwf	___ftadd@f1+2,f,c
  7622  006CAA  8E31               	bsf	___ftadd@f2+1,7,c
  7623  006CAC  0EFF               	movlw	255
  7624  006CAE  1630               	andwf	___ftadd@f2,f,c
  7625  006CB0  0EFF               	movlw	255
  7626  006CB2  1631               	andwf	___ftadd@f2+1,f,c
  7627  006CB4  0E00               	movlw	0
  7628  006CB6  1632               	andwf	___ftadd@f2+2,f,c
  7629  006CB8  5037               	movf	___ftadd@exp2,w,c
  7630  006CBA  5C38               	subwf	___ftadd@exp1,w,c
  7631  006CBC  B0D8               	btfsc	status,0,c
  7632  006CBE  D01A               	goto	l1969
  7633  006CC0                     l1959:
  7634  006CC0  90D8               	bcf	status,0,c
  7635  006CC2  3630               	rlcf	___ftadd@f2,f,c
  7636  006CC4  3631               	rlcf	___ftadd@f2+1,f,c
  7637  006CC6  3632               	rlcf	___ftadd@f2+2,f,c
  7638  006CC8  0637               	decf	___ftadd@exp2,f,c
  7639  006CCA  5037               	movf	___ftadd@exp2,w,c
  7640  006CCC  1838               	xorwf	___ftadd@exp1,w,c
  7641  006CCE  B4D8               	btfsc	status,2,c
  7642  006CD0  D00D               	goto	l1967
  7643  006CD2  0636               	decf	___ftadd@sign,f,c
  7644  006CD4  C036  F033         	movff	___ftadd@sign,??___ftadd
  7645  006CD8  0E07               	movlw	7
  7646  006CDA  1633               	andwf	??___ftadd,f,c
  7647  006CDC  B4D8               	btfsc	status,2,c
  7648  006CDE  D006               	goto	l1967
  7649  006CE0  D7EF               	goto	l1959
  7650  006CE2                     l1965:
  7651  006CE2  90D8               	bcf	status,0,c
  7652  006CE4  322F               	rrcf	___ftadd@f1+2,f,c
  7653  006CE6  322E               	rrcf	___ftadd@f1+1,f,c
  7654  006CE8  322D               	rrcf	___ftadd@f1,f,c
  7655  006CEA  2A38               	incf	___ftadd@exp1,f,c
  7656  006CEC                     l1967:
  7657  006CEC  5037               	movf	___ftadd@exp2,w,c
  7658  006CEE  6238               	cpfseq	___ftadd@exp1,c
  7659  006CF0  D7F8               	goto	l1965
  7660  006CF2  D01D               	goto	l770
  7661  006CF4                     l1969:
  7662  006CF4  5038               	movf	___ftadd@exp1,w,c
  7663  006CF6  5C37               	subwf	___ftadd@exp2,w,c
  7664  006CF8  B0D8               	btfsc	status,0,c
  7665  006CFA  D019               	goto	l770
  7666  006CFC                     l1971:
  7667  006CFC  90D8               	bcf	status,0,c
  7668  006CFE  362D               	rlcf	___ftadd@f1,f,c
  7669  006D00  362E               	rlcf	___ftadd@f1+1,f,c
  7670  006D02  362F               	rlcf	___ftadd@f1+2,f,c
  7671  006D04  0638               	decf	___ftadd@exp1,f,c
  7672  006D06  5037               	movf	___ftadd@exp2,w,c
  7673  006D08  1838               	xorwf	___ftadd@exp1,w,c
  7674  006D0A  B4D8               	btfsc	status,2,c
  7675  006D0C  D00D               	goto	l1979
  7676  006D0E  0636               	decf	___ftadd@sign,f,c
  7677  006D10  C036  F033         	movff	___ftadd@sign,??___ftadd
  7678  006D14  0E07               	movlw	7
  7679  006D16  1633               	andwf	??___ftadd,f,c
  7680  006D18  B4D8               	btfsc	status,2,c
  7681  006D1A  D006               	goto	l1979
  7682  006D1C  D7EF               	goto	l1971
  7683  006D1E                     l1977:
  7684  006D1E  90D8               	bcf	status,0,c
  7685  006D20  3232               	rrcf	___ftadd@f2+2,f,c
  7686  006D22  3231               	rrcf	___ftadd@f2+1,f,c
  7687  006D24  3230               	rrcf	___ftadd@f2,f,c
  7688  006D26  2A37               	incf	___ftadd@exp2,f,c
  7689  006D28                     l1979:
  7690  006D28  5037               	movf	___ftadd@exp2,w,c
  7691  006D2A  6238               	cpfseq	___ftadd@exp1,c
  7692  006D2C  D7F8               	goto	l1977
  7693  006D2E                     l770:
  7694  006D2E  AE36               	btfss	___ftadd@sign,7,c
  7695  006D30  D00C               	goto	l779
  7696  006D32  0EFF               	movlw	255
  7697  006D34  1A2D               	xorwf	___ftadd@f1,f,c
  7698  006D36  0EFF               	movlw	255
  7699  006D38  1A2E               	xorwf	___ftadd@f1+1,f,c
  7700  006D3A  0EFF               	movlw	255
  7701  006D3C  1A2F               	xorwf	___ftadd@f1+2,f,c
  7702  006D3E  0E01               	movlw	1
  7703  006D40  262D               	addwf	___ftadd@f1,f,c
  7704  006D42  0E00               	movlw	0
  7705  006D44  222E               	addwfc	___ftadd@f1+1,f,c
  7706  006D46  0E00               	movlw	0
  7707  006D48  222F               	addwfc	___ftadd@f1+2,f,c
  7708  006D4A                     l779:
  7709  006D4A  AC36               	btfss	___ftadd@sign,6,c
  7710  006D4C  D00C               	goto	l1985
  7711  006D4E  0EFF               	movlw	255
  7712  006D50  1A30               	xorwf	___ftadd@f2,f,c
  7713  006D52  0EFF               	movlw	255
  7714  006D54  1A31               	xorwf	___ftadd@f2+1,f,c
  7715  006D56  0EFF               	movlw	255
  7716  006D58  1A32               	xorwf	___ftadd@f2+2,f,c
  7717  006D5A  0E01               	movlw	1
  7718  006D5C  2630               	addwf	___ftadd@f2,f,c
  7719  006D5E  0E00               	movlw	0
  7720  006D60  2231               	addwfc	___ftadd@f2+1,f,c
  7721  006D62  0E00               	movlw	0
  7722  006D64  2232               	addwfc	___ftadd@f2+2,f,c
  7723  006D66                     l1985:
  7724  006D66  0E00               	movlw	0
  7725  006D68  6E36               	movwf	___ftadd@sign,c
  7726  006D6A  502D               	movf	___ftadd@f1,w,c
  7727  006D6C  2630               	addwf	___ftadd@f2,f,c
  7728  006D6E  502E               	movf	___ftadd@f1+1,w,c
  7729  006D70  2231               	addwfc	___ftadd@f2+1,f,c
  7730  006D72  502F               	movf	___ftadd@f1+2,w,c
  7731  006D74  2232               	addwfc	___ftadd@f2+2,f,c
  7732  006D76  AE32               	btfss	___ftadd@f2+2,7,c
  7733  006D78  D00E               	goto	l1995
  7734  006D7A  0EFF               	movlw	255
  7735  006D7C  1A30               	xorwf	___ftadd@f2,f,c
  7736  006D7E  0EFF               	movlw	255
  7737  006D80  1A31               	xorwf	___ftadd@f2+1,f,c
  7738  006D82  0EFF               	movlw	255
  7739  006D84  1A32               	xorwf	___ftadd@f2+2,f,c
  7740  006D86  0E01               	movlw	1
  7741  006D88  2630               	addwf	___ftadd@f2,f,c
  7742  006D8A  0E00               	movlw	0
  7743  006D8C  2231               	addwfc	___ftadd@f2+1,f,c
  7744  006D8E  0E00               	movlw	0
  7745  006D90  2232               	addwfc	___ftadd@f2+2,f,c
  7746  006D92  0E01               	movlw	1
  7747  006D94  6E36               	movwf	___ftadd@sign,c
  7748  006D96                     l1995:
  7749  006D96  C030  F001         	movff	___ftadd@f2,___ftpack@arg
  7750  006D9A  C031  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  7751  006D9E  C032  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  7752  006DA2  C038  F004         	movff	___ftadd@exp1,___ftpack@exp
  7753  006DA6  C036  F005         	movff	___ftadd@sign,___ftpack@sign
  7754  006DAA  EC18  F030         	call	___ftpack	;wreg free
  7755  006DAE  C001  F02D         	movff	?___ftpack,?___ftadd
  7756  006DB2  C002  F02E         	movff	?___ftpack+1,?___ftadd+1
  7757  006DB6  C003  F02F         	movff	?___ftpack+2,?___ftadd+2
  7758  006DBA                     l756:
  7759  006DBA  0012               	return	
  7760  006DBC                     __end_of___ftadd:
  7761                           	opt stack 0
  7762                           tblptru	equ	0xFF8
  7763                           tblptrh	equ	0xFF7
  7764                           tblptrl	equ	0xFF6
  7765                           tablat	equ	0xFF5
  7766                           prodh	equ	0xFF4
  7767                           prodl	equ	0xFF3
  7768                           intcon	equ	0xFF2
  7769                           postinc0	equ	0xFEE
  7770                           wreg	equ	0xFE8
  7771                           postinc1	equ	0xFE6
  7772                           postdec1	equ	0xFE5
  7773                           fsr1h	equ	0xFE2
  7774                           fsr1l	equ	0xFE1
  7775                           indf2	equ	0xFDF
  7776                           postinc2	equ	0xFDE
  7777                           postdec2	equ	0xFDD
  7778                           fsr2h	equ	0xFDA
  7779                           fsr2l	equ	0xFD9
  7780                           status	equ	0xFD8
  7781                           
  7782 ;; *************** function ___ftpack *****************
  7783 ;; Defined at:
  7784 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  7785 ;; Parameters:    Size  Location     Type
  7786 ;;  arg             3    0[COMRAM] unsigned um
  7787 ;;  exp             1    3[COMRAM] unsigned char 
  7788 ;;  sign            1    4[COMRAM] unsigned char 
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;		None
  7791 ;; Return value:  Size  Location     Type
  7792 ;;                  3    0[COMRAM] float 
  7793 ;; Registers used:
  7794 ;;		wreg, status,2, status,0
  7795 ;; Tracked objects:
  7796 ;;		On entry : 0/0
  7797 ;;		On exit  : 0/0
  7798 ;;		Unchanged: 0/0
  7799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7800 ;;      Params:         5       0       0       0       0       0       0       0       0
  7801 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7802 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7803 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7804 ;;Total ram usage:        8 bytes
  7805 ;; Hardware stack levels used:    1
  7806 ;; This function calls:
  7807 ;;		Nothing
  7808 ;; This function is called by:
  7809 ;;		___awtoft
  7810 ;;		___ftadd
  7811 ;;		___ftdiv
  7812 ;;		___ftmul
  7813 ;;		___lwtoft
  7814 ;; This function uses a non-reentrant model
  7815 ;;
  7816                           
  7817                           	psect	text38
  7818  006030                     __ptext38:
  7819                           	opt stack 0
  7820  006030                     ___ftpack:
  7821                           	opt stack 27
  7822                           
  7823                           ;incstack = 0
  7824  006030  5004               	movf	___ftpack@exp,w,c
  7825  006032  B4D8               	btfsc	status,2,c
  7826  006034  D005               	goto	l1873
  7827  006036  5001               	movf	___ftpack@arg,w,c
  7828  006038  1002               	iorwf	___ftpack@arg+1,w,c
  7829  00603A  1003               	iorwf	___ftpack@arg+2,w,c
  7830  00603C  A4D8               	btfss	status,2,c
  7831  00603E  D00C               	goto	l1879
  7832  006040                     l1873:
  7833  006040  0E00               	movlw	0
  7834  006042  6E01               	movwf	?___ftpack,c
  7835  006044  0E00               	movlw	0
  7836  006046  6E02               	movwf	?___ftpack+1,c
  7837  006048  0E00               	movlw	0
  7838  00604A  6E03               	movwf	?___ftpack+2,c
  7839  00604C  D044               	goto	l718
  7840  00604E                     l1877:
  7841  00604E  2A04               	incf	___ftpack@exp,f,c
  7842  006050  90D8               	bcf	status,0,c
  7843  006052  3203               	rrcf	___ftpack@arg+2,f,c
  7844  006054  3202               	rrcf	___ftpack@arg+1,f,c
  7845  006056  3201               	rrcf	___ftpack@arg,f,c
  7846  006058                     l1879:
  7847  006058  0E00               	movlw	0
  7848  00605A  1401               	andwf	___ftpack@arg,w,c
  7849  00605C  6E06               	movwf	??___ftpack& (0+255),c
  7850  00605E  0E00               	movlw	0
  7851  006060  1402               	andwf	___ftpack@arg+1,w,c
  7852  006062  6E07               	movwf	(??___ftpack+1)& (0+255),c
  7853  006064  0EFE               	movlw	254
  7854  006066  1403               	andwf	___ftpack@arg+2,w,c
  7855  006068  6E08               	movwf	(??___ftpack+2)& (0+255),c
  7856  00606A  5006               	movf	??___ftpack,w,c
  7857  00606C  1007               	iorwf	??___ftpack+1,w,c
  7858  00606E  1008               	iorwf	??___ftpack+2,w,c
  7859  006070  B4D8               	btfsc	status,2,c
  7860  006072  D00C               	goto	l1885
  7861  006074  D7EC               	goto	l1877
  7862  006076                     l1881:
  7863  006076  2A04               	incf	___ftpack@exp,f,c
  7864  006078  0E01               	movlw	1
  7865  00607A  2601               	addwf	___ftpack@arg,f,c
  7866  00607C  0E00               	movlw	0
  7867  00607E  2202               	addwfc	___ftpack@arg+1,f,c
  7868  006080  0E00               	movlw	0
  7869  006082  2203               	addwfc	___ftpack@arg+2,f,c
  7870  006084  90D8               	bcf	status,0,c
  7871  006086  3203               	rrcf	___ftpack@arg+2,f,c
  7872  006088  3202               	rrcf	___ftpack@arg+1,f,c
  7873  00608A  3201               	rrcf	___ftpack@arg,f,c
  7874  00608C                     l1885:
  7875  00608C  0E00               	movlw	0
  7876  00608E  1401               	andwf	___ftpack@arg,w,c
  7877  006090  6E06               	movwf	??___ftpack& (0+255),c
  7878  006092  0E00               	movlw	0
  7879  006094  1402               	andwf	___ftpack@arg+1,w,c
  7880  006096  6E07               	movwf	(??___ftpack+1)& (0+255),c
  7881  006098  0EFF               	movlw	255
  7882  00609A  1403               	andwf	___ftpack@arg+2,w,c
  7883  00609C  6E08               	movwf	(??___ftpack+2)& (0+255),c
  7884  00609E  5006               	movf	??___ftpack,w,c
  7885  0060A0  1007               	iorwf	??___ftpack+1,w,c
  7886  0060A2  1008               	iorwf	??___ftpack+2,w,c
  7887  0060A4  B4D8               	btfsc	status,2,c
  7888  0060A6  D006               	goto	l1889
  7889  0060A8  D7E6               	goto	l1881
  7890  0060AA                     l1887:
  7891  0060AA  0604               	decf	___ftpack@exp,f,c
  7892  0060AC  90D8               	bcf	status,0,c
  7893  0060AE  3601               	rlcf	___ftpack@arg,f,c
  7894  0060B0  3602               	rlcf	___ftpack@arg+1,f,c
  7895  0060B2  3603               	rlcf	___ftpack@arg+2,f,c
  7896  0060B4                     l1889:
  7897  0060B4  AE02               	btfss	___ftpack@arg+1,7,c
  7898  0060B6  D7F9               	goto	l1887
  7899  0060B8  A004               	btfss	___ftpack@exp,0,c
  7900  0060BA  9E02               	bcf	___ftpack@arg+1,7,c
  7901  0060BC  90D8               	bcf	status,0,c
  7902  0060BE  3204               	rrcf	___ftpack@exp,f,c
  7903  0060C0  5004               	movf	___ftpack@exp,w,c
  7904  0060C2  1203               	iorwf	___ftpack@arg+2,f,c
  7905  0060C4  5005               	movf	___ftpack@sign,w,c
  7906  0060C6  A4D8               	btfss	status,2,c
  7907  0060C8  8E03               	bsf	___ftpack@arg+2,7,c
  7908  0060CA  C001  F001         	movff	___ftpack@arg,?___ftpack
  7909  0060CE  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  7910  0060D2  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  7911  0060D6                     l718:
  7912  0060D6  0012               	return	
  7913  0060D8                     __end_of___ftpack:
  7914                           	opt stack 0
  7915  0000                     tblptru	equ	0xFF8
  7916                           tblptrh	equ	0xFF7
  7917                           tblptrl	equ	0xFF6
  7918                           tablat	equ	0xFF5
  7919                           prodh	equ	0xFF4
  7920                           prodl	equ	0xFF3
  7921                           intcon	equ	0xFF2
  7922                           postinc0	equ	0xFEE
  7923                           wreg	equ	0xFE8
  7924                           postinc1	equ	0xFE6
  7925                           postdec1	equ	0xFE5
  7926                           fsr1h	equ	0xFE2
  7927                           fsr1l	equ	0xFE1
  7928                           indf2	equ	0xFDF
  7929                           postinc2	equ	0xFDE
  7930                           postdec2	equ	0xFDD
  7931                           fsr2h	equ	0xFDA
  7932                           fsr2l	equ	0xFD9
  7933                           status	equ	0xFD8
  7934                           tblptru	equ	0xFF8
  7935                           tblptrh	equ	0xFF7
  7936                           tblptrl	equ	0xFF6
  7937                           tablat	equ	0xFF5
  7938                           prodh	equ	0xFF4
  7939                           prodl	equ	0xFF3
  7940                           intcon	equ	0xFF2
  7941                           postinc0	equ	0xFEE
  7942                           wreg	equ	0xFE8
  7943                           postinc1	equ	0xFE6
  7944                           postdec1	equ	0xFE5
  7945                           fsr1h	equ	0xFE2
  7946                           fsr1l	equ	0xFE1
  7947                           indf2	equ	0xFDF
  7948                           postinc2	equ	0xFDE
  7949                           postdec2	equ	0xFDD
  7950                           fsr2h	equ	0xFDA
  7951                           fsr2l	equ	0xFD9
  7952                           status	equ	0xFD8
  7953                           
  7954                           	psect	rparam
  7955  0000                     tblptru	equ	0xFF8
  7956                           tblptrh	equ	0xFF7
  7957                           tblptrl	equ	0xFF6
  7958                           tablat	equ	0xFF5
  7959                           prodh	equ	0xFF4
  7960                           prodl	equ	0xFF3
  7961                           intcon	equ	0xFF2
  7962                           postinc0	equ	0xFEE
  7963                           wreg	equ	0xFE8
  7964                           postinc1	equ	0xFE6
  7965                           postdec1	equ	0xFE5
  7966                           fsr1h	equ	0xFE2
  7967                           fsr1l	equ	0xFE1
  7968                           indf2	equ	0xFDF
  7969                           postinc2	equ	0xFDE
  7970                           postdec2	equ	0xFDD
  7971                           fsr2h	equ	0xFDA
  7972                           fsr2l	equ	0xFD9
  7973                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        164
    BSS         248
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     92      95
    BANK0           160     47     136
    BANK1           256      0     243
    BANK2           256      0      81
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _read_sensors->_read_ultrasonic_s3
    _read_sensors->_read_ultrasonic_s4
    _read_sensors->_read_ultrasonic_s5
    _read_sensors->_read_ultrasonic_s6
    _read_sensors->_read_ultrasonic_s7
    _read_sensors->_read_ultrasonic_s8
    _read_ultrasonic_s8->___ftadd
    _read_ultrasonic_s7->___ftadd
    _read_ultrasonic_s6->___ftadd
    _read_ultrasonic_s5->___ftadd
    _read_ultrasonic_s4->___ftadd
    _read_ultrasonic_s3->___ftadd
    ___lwtoft->___ftpack
    _obstacle_avoid_controller->_area
    _min->___ftge
    _area->___ftadd
    _int_to_char->___awdiv
    _lcddata_4bit->_s_delay
    _init_lcd->_lcdcmd
    _init_lcd->_lcdcmd_4bit
    _lcdcmd_4bit->_s_delay
    _lcdcmd->_s_delay
    _SetWheelSpeed->_WriteI2C
    _WriteI2C->_IdleI2C
    _Mem_values_obs->_Pos_Right_Mem
    ___awtoft->___ftpack
    _Pos_left_Mem->_step_func
    _Pos_Right_Mem->_step_func
    _Pos_Centre_Mem->_step_func
    _step_func->___ftadd
    ___ftneg->___ftdiv
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    ___ftadd->___ftneg

Critical Paths under _main in BANK0

    _main->_obstacle_avoid_controller
    _Mem_values_obs->_Pos_Centre_Mem

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  220412
                                             43 BANK0      4     4      0
                     _Mem_values_obs
                            _OpenI2C
                      _SetWheelSpeed
                            ___fttol
                           _init_lcd
                    _init_ultrasonic
                        _int_to_char
                        _lcdcmd_4bit
          _obstacle_avoid_controller
                       _read_sensors
 ---------------------------------------------------------------------------------
 (1) _read_sensors                                         0     0      0  116298
                                _min
                 _read_ultrasonic_s3
                 _read_ultrasonic_s4
                 _read_ultrasonic_s5
                 _read_ultrasonic_s6
                 _read_ultrasonic_s7
                 _read_ultrasonic_s8
 ---------------------------------------------------------------------------------
 (2) _read_ultrasonic_s8                                   6     6      0   19208
                                             56 COMRAM     6     6      0
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___fttol
                           ___lwtoft
                            _s_delay
 ---------------------------------------------------------------------------------
 (2) _read_ultrasonic_s7                                   6     6      0   19208
                                             56 COMRAM     6     6      0
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___fttol
                           ___lwtoft
                            _s_delay
 ---------------------------------------------------------------------------------
 (2) _read_ultrasonic_s6                                   6     6      0   19208
                                             56 COMRAM     6     6      0
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___fttol
                           ___lwtoft
                            _s_delay
 ---------------------------------------------------------------------------------
 (2) _read_ultrasonic_s5                                   6     6      0   19208
                                             56 COMRAM     6     6      0
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___fttol
                           ___lwtoft
                            _s_delay
 ---------------------------------------------------------------------------------
 (2) _read_ultrasonic_s4                                   6     6      0   19208
                                             56 COMRAM     6     6      0
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___fttol
                           ___lwtoft
                            _s_delay
 ---------------------------------------------------------------------------------
 (2) _read_ultrasonic_s3                                   6     6      0   18526
                                             56 COMRAM     6     6      0
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2064
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _obstacle_avoid_controller                           47    47      0   43654
                                             68 COMRAM     4     4      0
                                              0 BANK0     43    43      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                             ___wmul
                               _area
                                _min
 ---------------------------------------------------------------------------------
 (2) _min                                                  9     3      6    1732
                                              9 COMRAM     9     3      6
                             ___ftge
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1090
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) _area                                                12     6      6   16021
                                             56 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    3339
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     941
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) _int_to_char                                          7     7      0    1512
                                              8 COMRAM     7     7      0
                            ___awdiv
                       _lcddata_4bit
 ---------------------------------------------------------------------------------
 (2) _lcddata_4bit                                         1     1      0     726
                                              5 COMRAM     1     1      0
                            _s_delay
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     512
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_ultrasonic                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             0     0      0    1794
                             _lcdcmd
                        _lcdcmd_4bit
                         _long_delay
 ---------------------------------------------------------------------------------
 (2) _long_delay                                           5     3      2     364
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _lcdcmd_4bit                                          1     1      0     726
                                              5 COMRAM     1     1      0
                            _s_delay
 ---------------------------------------------------------------------------------
 (2) _lcdcmd                                               1     1      0     704
                                              5 COMRAM     1     1      0
                            _s_delay
 ---------------------------------------------------------------------------------
 (3) _s_delay                                              5     3      2     682
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _SetWheelSpeed                                        4     0      4     172
                                              3 COMRAM     4     0      4
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      22
                                              1 COMRAM     2     2      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (3) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenI2C                                              2     1      1      97
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _Mem_values_obs                                       0     0      0   55218
                     _Pos_Centre_Mem
                      _Pos_Right_Mem
                       _Pos_left_Mem
                           ___awtoft
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3193
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _Pos_left_Mem                                        21    12      9   17049
                                             62 COMRAM    21    12      9
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                          _step_func
 ---------------------------------------------------------------------------------
 (2) _Pos_Right_Mem                                       30    21      9   17206
                                             62 COMRAM    30    21      9
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                          _step_func
 ---------------------------------------------------------------------------------
 (2) _Pos_Centre_Mem                                      48    36     12   17770
                                             62 COMRAM    12     0     12
                                              0 BANK0     30    30      0
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                          _step_func
 ---------------------------------------------------------------------------------
 (3) _step_func                                            6     3      3     523
                                             56 COMRAM     6     3      3
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3    1423
                                             41 COMRAM     3     0      3
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    4144
                                             11 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3144
                                             26 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    7070
                                             44 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1724
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Mem_values_obs
     _Pos_Centre_Mem
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
       _step_func (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
     _Pos_Right_Mem
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
       _step_func (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
     _Pos_left_Mem
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
       _step_func (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
     ___awtoft
       ___ftpack
   _OpenI2C
   _SetWheelSpeed
     _IdleI2C
     _WriteI2C
       _IdleI2C
   ___fttol
   _init_lcd
     _lcdcmd
       _s_delay
     _lcdcmd_4bit
       _s_delay
     _long_delay
   _init_ultrasonic
   _int_to_char
     ___awdiv
     _lcddata_4bit
       _s_delay
   _lcdcmd_4bit
     _s_delay
   _obstacle_avoid_controller
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
     ___ftneg
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
     ___fttol
     ___wmul
     _area
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
       ___wmul (ARG)
     _min
       ___ftge
       ___wmul (ARG)
   _read_sensors
     _min
       ___ftge
       ___wmul (ARG)
     _read_ultrasonic_s3
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftge
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___fttol
       ___lwtoft
         ___ftpack
     _read_ultrasonic_s4
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftge
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___fttol
       ___lwtoft
         ___ftpack
       _s_delay
     _read_ultrasonic_s5
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftge
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___fttol
       ___lwtoft
         ___ftpack
       _s_delay
     _read_ultrasonic_s6
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftge
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___fttol
       ___lwtoft
         ___ftpack
       _s_delay
     _read_ultrasonic_s7
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftge
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___fttol
       ___lwtoft
         ___ftpack
       _s_delay
     _read_ultrasonic_s8
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftge
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___fttol
       ___lwtoft
         ___ftpack
       _s_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      51       9       31.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F3       7       94.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2F      88       5       85.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5C      5F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     22B      20        0.0%
DATA                 0      0     22B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Jun 16 03:00:05 2015

                  ?_read_ultrasonic_s3 0001                    ?_read_ultrasonic_s4 0001  
                  ?_read_ultrasonic_s5 0001                    ?_read_ultrasonic_s6 0001  
                  ?_read_ultrasonic_s7 0001                    ?_read_ultrasonic_s8 0001  
    __end_of_obstacle_avoid_controller 8000                            _SSPSTATbits 000FC7  
                         ___awdiv@sign 0006                                     _s2 0081  
                                   _s3 0084                                     _s4 0087  
                                   _s5 008A                                     _s6 008D  
                                   _s7 0090                                     _s8 0093  
                                   _s9 0096                    ___wmul@multiplicand 0003  
                          __CFG_BORV$3 000000               Pos_left_Mem@Pos_left_Mem 0048  
                         __CFG_CP0$OFF 000000                           __CFG_CP1$OFF 000000  
                         __CFG_CP2$OFF 000000                           __CFG_CP3$OFF 000000  
                         ___ftadd@exp1 0038                           ___ftadd@exp2 0037  
                         ___ftadd@sign 0036                                    l201 6574  
                                  l211 664C                                    l204 6584  
                                  l205 657C                                    l221 6692  
                                  l310 5BAA                                    l214 666E  
                                  l230 6778                                    l231 6770  
                                  l304 7FFE                                    l208 6598  
                                  l224 6746                                    l240 6862  
                                  l313 5BB4                                    l217 667E  
                                  l218 6676                                    l234 678C  
                                  l250 693A                                    l307 5B8A  
                                  l323 58E4                                    l227 6768  
                                  l243 6872                                    l316 5BD2  
                                  l324 58EC                                    l244 686A  
                                  l405 5C30                                    l237 6840  
                                  l182 63A4                                    l175 6380  
                                  l191 648A                                    l247 6886  
                                  l256 5A7E                                    l192 6482  
                                  l345 5926                                    l257 5A8A  
                                  l185 6458                                    l354 5CB4  
                                  l178 6390                                    l179 6388  
                                  l195 649E                                    l188 647A  
                                  l198 6552                                    l393 5C3A  
                                  l802 6364                                    l812 58A2  
                                  l396 5C04                                    l718 60D6  
                                  l822 61AA                                    l770 6D2E  
                                  l755 6C56                                    l756 6DBA  
                                  l790 6250                                    l759 6C82  
                                  l779 6D4A                                    l787 6280  
                                  l796 5E52                           __CFG_CPB$OFF 000000  
                         __CFG_CPD$OFF 000000                           __CFG_BOR$OFF 000000  
                          _rw_velocity 00A4                            lcdcmd@value 0006  
                                  _min 5A50                                    wreg 000FE8  
                         __CFG_FOSC$HS 000000                   ??_read_ultrasonic_s3 0039  
                 ??_read_ultrasonic_s4 0039                   ??_read_ultrasonic_s5 0039  
                 ??_read_ultrasonic_s6 0039                   ??_read_ultrasonic_s7 0039  
                 ??_read_ultrasonic_s8 0039                           __CFG_LVP$OFF 000000  
                         ___ftdiv@cntr 0024                           ___ftdiv@sign 0029  
                         __CFG_WDT$OFF 000000                         _Pos_Centre_Mem 72C8  
                                 l2011 61EC                                   l2005 61C6  
                                 l2101 5A2C                                   l2031 622A  
                                 l2113 5E24                                   l2051 629C  
                                 l2133 60F2                                   l2109 5DF4  
                                 l2071 62F4                                   l2151 614C  
                                 l2119 5E50                                   l2081 631C  
                                 l2057 62C2                                   l2161 6174  
                                 l2209 6430                                   l2225 652A  
                                 l2241 6624                                   l2075 6304  
                                 l2403 5F0A                                   l2163 6180  
                                 l2155 615C                                   l2085 632C  
                                 l2165 6184                                   l2415 5F40  
                                 l2431 5F72                                   l2353 591C  
                                 l2417 5F48                                   l2409 5F2A  
                                 l2169 619A                                   l2257 671E  
                                 l2273 6818                                   l2339 5C10  
                                 l2435 5F80                                   l2427 5F68  
                                 l2419 5F4C                                   l2613 7C1A  
                                 l1911 58F8                                   l2359 5932  
                                 l2625 7CF6                                   l2609 7C12  
                                 l2617 7C22                                   l2545 78AC  
                                 l2553 78BC                                   l2289 6912  
                                 l1917 596A                                   l1925 581A  
                                 l2581 7A1C                                   l2549 78B4  
                                 l1943 6C90                                   l2655 7F1A  
                                 l2663 7F2A                                   l1881 6076  
                                 l1873 6040                                   l1937 6C64  
                                 l2577 7A14                                   l2585 7A24  
                                 l1971 6CFC                                   l2659 7F22  
                                 l1885 608C                                   l1877 604E  
                                 l1965 6CE2                                   l1887 60AA  
                                 l1879 6058                                   l1967 6CEC  
                                 l1959 6CC0                                   l1889 60B4  
                                 l1985 6D66                                   l1977 6D1E  
                                 l1969 6CF4                                   l2697 696A  
                                 l1995 6D96                                   l1979 6D28  
                                 ?_min 000A                                   u1405 595A  
                                 u1431 6C20                                   u1441 6C34  
                                 u1711 62AC                                   u1720 62B4  
                                 u1641 61BC                                   u1801 60E8  
                                 u1820 6110                                   u1661 61D6  
                                 u1670 61DE                                   u1825 6108  
                                 u2617 637A                                   u1850 6162  
                                 u1691 6292                                   _TMR1 000FCE  
                                 _area 5F8A  obstacle_avoid_controller@premise_temp 00BC  
                                 _main 693C                           ___ftpack@arg 0001  
                       ??_lcddata_4bit 0006                           ___ftpack@exp 0004  
                                 fsr1l 000FE1                                   indf2 000FDF  
                                 fsr2l 000FD9                                   min@x 000A  
                                 min@y 000D                                   min@z 0010  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 0000                          __CFG_IESO$OFF 000000  
                      __end_of_IdleI2C 582A                          __CFG_MCLRE$ON 000000  
                         ___ftmul@cntr 0019                           ___ftmul@sign 001A  
                      __end_of_OpenI2C 5848                           ___fttol@exp1 000F  
                                ??_min 0010                           ___fttol@lval 000B  
                        __CFG_PLLDIV$1 000000                         __CFG_CCP2MX$ON 000000  
                                ?_area 0039                                  ?_main 0001  
                      __end_of___awdiv 5F8A                        __end_of___ftadd 6DBC  
                      __end_of___ftdiv 6282                        __end_of___ftneg 58B0  
                      __end_of___ftmul 6366                                  _T0CON 000FD5  
                      ___awdiv@divisor 0003                                  _T1CON 000FCD  
                      __end_of___fttol 61AC                                  _T3CON 000FB1  
                      ___awdiv@counter 0005                                  _TMR0H 000FD7  
                                _TMR0L 000FD6                                  _PORTD 000F83  
                        __CFG_USBDIV$1 000000                                  _TRISB 000F93  
                                _TRISC 000F94                                  _TRISD 000F95  
                        __CFG_PWRT$OFF 000000                          __CFG_WRT0$OFF 000000  
                        __CFG_WRT1$OFF 000000                          __CFG_WRT2$OFF 000000  
                        __CFG_WRT3$OFF 000000                         __CFG_EBTR0$OFF 000000  
                       __CFG_FCMEN$OFF 000000                         __CFG_EBTR1$OFF 000000  
                       __CFG_EBTR2$OFF 000000                         __CFG_EBTR3$OFF 000000  
               __end_of_Pos_Centre_Mem 76F6                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                       __CFG_EBTRB$OFF 000000                          ___awtoft@sign 000C  
                                area@h 003C                        __end_of_s_delay 590E  
                                area@w 0039                  __end_of_Pos_Right_Mem 700E  
                        ___ftpack@sign 0005                                  tablat 000FF5  
       obstacle_avoid_controller@i_835 00C9         obstacle_avoid_controller@i_844 00DB  
       obstacle_avoid_controller@i_839 00D5         obstacle_avoid_controller@j_840 00D7  
       obstacle_avoid_controller@j_836 00CB         obstacle_avoid_controller@j_845 00DD  
       obstacle_avoid_controller@k_841 00D9         obstacle_avoid_controller@k_837 00CD  
       obstacle_avoid_controller@k_846 00DF                           ?_int_to_char 0001  
                    ??_init_ultrasonic 0001                                  status 000FD8  
                       __CFG_ICPRT$OFF 000000         obstacle_avoid_controller@temp1 00B6  
       obstacle_avoid_controller@temp2 00C1         obstacle_avoid_controller@temp3 00B9  
           Pos_Right_Mem@Pos_Right_Mem 0048                        __initialization 5CB6  
                         __end_of_area 6030                           __end_of_main 6A82  
                               ??_area 003F                                 ??_main 00E1  
                        ___fttol@sign1 000A                          __activetblptr 000000  
                       _Mem_values_obs 700E                        ?_Pos_Centre_Mem 003F  
                               _ADCON0 000FC2                                 _ADCON1 000FC1  
                     ___awdiv@dividend 0001                       __end_of_WriteI2C 5C3C  
                     __end_of___awtoft 5A50                       __end_of___ftpack 60D8  
                          OpenI2C@slew 0001                       __end_of___lwtoft 588A  
                            ??_IdleI2C 0001                                 _SSPADD 000FC8  
                               _SSPBUF 000FC9                              ??_OpenI2C 0002  
                       __CFG_XINST$OFF 000000                                 _s2_old 00A6  
                               _s3_old 00A8                                 _s4_old 00AA  
                               _s5_old 00AC                                 _s6_old 00AE  
                               _s7_old 00B0                                 _s8_old 00B2  
                               _s9_old 00B4                                 ___ftge 5DC4  
                 __size_of_lcdcmd_4bit 0042                                 ___wmul 58B0  
                            ??___awdiv 0005                              ??___ftadd 0033  
                       __CFG_STVREN$ON 000000                              ??___ftdiv 0021  
                            ??___ftneg 002D                              ??___ftmul 0012  
                            ??___fttol 0005                                 _lcdcmd 5848  
                        ?_read_sensors 0001                       __end_of_init_lcd 5DC4  
                               clear_0 5CBC                                 clear_1 5CC8  
                     ___awdiv@quotient 0007                  ___ftmul@f3_as_product 0016  
                 __end_of_lcddata_4bit 5A08                 __end_of_Mem_values_obs 72C8  
                            ??_s_delay 0003                           __pdataCOMRAM 005F  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                        Pos_Centre_Mem@d 0048  
                           __accesstop 0060                __end_of__initialization 5D32  
                      __CFG_PBADEN$OFF 000000                             ___ftadd@f1 002D  
                           ___ftadd@f2 0030                             ___ftge@ff1 0001  
                           ___ftge@ff2 0004                         Pos_left_Mem@y1 003F  
                       Pos_left_Mem@z1 0042                             ___ftdiv@f1 001B  
                           ___ftdiv@f2 001E                             ___ftdiv@f3 0025  
                           ___ftneg@f1 002A                             ___awtoft@c 0009  
                           ___ftmul@f1 000C                             ___ftmul@f2 000F  
        obstacle_avoid_controller@temp 00BF                             ___fttol@f1 0001  
                      int_to_char@temp 000D                         __pcstackCOMRAM 0001  
                         __pidataBANK0 5818                           __pidataBANK1 5B33  
                         __pidataBANK2 5AE2                         ??_read_sensors 003F  
                           ___lwtoft@c 0009                        ?_Mem_values_obs 0001  
                           __pbssBANK0 0060                             __pbssBANK1 0100  
                          long_delay@a 0001                            long_delay@x 0004  
                           __pnvCOMRAM 005D                    _Pos_Centre_Mem$1820 00BF  
                  _Pos_Centre_Mem$1821 00C2                    _Pos_Centre_Mem$1822 00D1  
                  _Pos_Centre_Mem$1823 00C5                   __size_of_int_to_char 007A  
                  _Pos_Centre_Mem$1824 00C8                    _Pos_Centre_Mem$1825 00CB  
                  _Pos_Centre_Mem$1818 00BC                    _Pos_Centre_Mem$1819 00CE  
                              ?___ftge 0001                                ?___wmul 0001  
                              ?_lcdcmd 0001             ?_obstacle_avoid_controller 0001  
                            ?_WriteI2C 0001                              ?___awtoft 0009  
                            ?___ftpack 0001                              ?___lwtoft 0009  
                      _init_ultrasonic 5A98            __size_of_read_ultrasonic_s3 00F4  
          __size_of_read_ultrasonic_s4 00FA                          ?_Pos_left_Mem 003F  
          __size_of_read_ultrasonic_s5 00FA            __size_of_read_ultrasonic_s6 00FA  
          __size_of_read_ultrasonic_s7 00FA            __size_of_read_ultrasonic_s8 00FA  
                              _SSPCON1 000FC6                                _SSPCON2 000FC5  
               __size_of_SetWheelSpeed 0054                     __size_of_step_func 003C  
                              _SSPSTAT 000FC7                                _IdleI2C 581A  
                      __CFG_VREGEN$OFF 000000                              ?_init_lcd 0001  
                              _OpenI2C 582A                                __Hparam 0000  
                              __Lparam 0000                        __size_of___ftge 0090  
                              ___awdiv 5EE6                                ___ftadd 6C10  
                              ___ftdiv 61AC                                ___ftneg 588A  
                      __size_of___wmul 0026                                ___ftmul 6282  
                              ___fttol 60D8                  __size_of_lcddata_4bit 0042  
                      __size_of_lcdcmd 001E                                __pcinit 5CB6  
                           ??_WriteI2C 0002                             ??___awtoft 000C  
                           ??___ftpack 0006                                __ramtop 0800  
                              __ptext0 693C                                __ptext1 5E54  
                              __ptext2 6842                                __ptext3 6748  
                              __ptext4 664E                                __ptext5 6554  
                              __ptext6 645A                                __ptext7 6366  
                              __ptext8 5866                                __ptext9 76F6  
                     ??_Pos_Centre_Mem 004B                             ??___lwtoft 000C  
                            _T0CONbits 000FD5                              _T1CONbits 000FCD  
                              _s_delay 58D6                           __size_of_min 0048  
                              _s_front 0099                                _mul_obs 005D  
                       ??_Pos_left_Mem 0048                             _long_delay 590E  
                        step_func@temp 003C                   end_of_initialization 5D32  
                 __end_of_read_sensors 5EE6                             ??_init_lcd 0007  
                         _lcddata_4bit 59C6                             _lw_vel_obs 007B  
                              postdec1 000FE5                                postdec2 000FDD  
                        _SetWheelSpeed 5B84                                postinc0 000FEE  
                              postinc1 000FE6                                postinc2 000FDE  
                    __end_of_step_func 5984                 __size_of_Pos_Right_Mem 0252  
              __end_of_init_ultrasonic 5AE2                              _PORTAbits 000F80  
                            _PORTBbits 000F81                              _PORTCbits 000F82  
                            _PORTDbits 000F83                     _Pos_Right_Mem$1830 0057  
                   _Pos_Right_Mem$1831 005A                     _Pos_Right_Mem$1826 004B  
                   _Pos_Right_Mem$1827 004E                     _Pos_Right_Mem$1828 0051  
                   _Pos_Right_Mem$1829 0054                          _s_front_right 009F  
                     Pos_Centre_Mem@x2 003F                       Pos_Centre_Mem@y2 0042  
                     Pos_Centre_Mem@z2 0045                              _TRISAbits 000F92  
                            _TRISBbits 000F93                              _TRISDbits 000F95  
                           _rw_vel_obs 007E                            ___ftdiv@exp 0028  
                        ??_lcdcmd_4bit 0006                           int_to_char@a 000C  
                         int_to_char@b 0009                           int_to_char@i 000E  
                          ___ftmul@exp 0015                         ?_SetWheelSpeed 0004  
                       __end_of___ftge 5E54                       ??_Mem_values_obs 005D  
                       __end_of___wmul 58D6                          __pidataCOMRAM 5819  
                       __end_of_lcdcmd 5866                    start_initialization 5CB6  
                            _Mem_front 0060                              _Mem_right 0072  
                          __end_of_min 5A98                            ?_long_delay 0001  
                     WriteI2C@data_out 0003                          _Pos_Right_Mem 6DBC  
                             ??___ftge 0007                   __end_of_Pos_left_Mem 6C10  
                             ??___wmul 0005                               ??_lcdcmd 0006  
                          __pdataBANK0 00E7                            __pdataBANK1 01A2  
                          __pdataBANK2 0200                    __end_of_lcdcmd_4bit 59C6  
                     __CFG_LPT1OSC$OFF 000000            ??_obstacle_avoid_controller 0045  
                     ?_init_ultrasonic 0001                      __size_of_WriteI2C 0064  
                    __size_of___awtoft 0048                      __size_of___ftpack 00A8  
                        Pos_left_Mem@d 0045                      __size_of___lwtoft 0024  
                __size_of_read_sensors 0092                          __pcstackBANK0 00B6  
         obstacle_avoid_controller@den 00D2           obstacle_avoid_controller@num 00CF  
                            _area$1814 0042                         ?_Pos_Right_Mem 003F  
                        ??_int_to_char 0009                               ?_IdleI2C 0001  
                            __pnvBANK0 00E5                               ?_OpenI2C 0001  
                      ??_SetWheelSpeed 0008                      __size_of_init_lcd 008C  
                             ?___awdiv 0001                               ?___ftadd 002D  
                             ?___ftdiv 001B                               ?___ftneg 002A  
                             ?___ftmul 000C                    __size_of_long_delay 003A  
                             ?___fttol 0001                           _read_sensors 5E54  
         Pos_Centre_Mem@Pos_Centre_Mem 00B6                      lcddata_4bit@value 0006  
                             ?_s_delay 0001             __end_of_read_ultrasonic_s3 645A  
           __end_of_read_ultrasonic_s4 6554             __end_of_read_ultrasonic_s5 664E  
           __end_of_read_ultrasonic_s6 6748             __end_of_read_ultrasonic_s7 6842  
           __end_of_read_ultrasonic_s8 693C                        Pos_Right_Mem@x3 003F  
                      Pos_Right_Mem@y3 0042              _obstacle_avoid_controller 76F6  
                       ___wmul@product 0005              _premise_obstacle_avoid_lw 0151  
                          _lcdcmd_4bit 5984                    __end_of_int_to_char 5CB6  
                             _PIR1bits 000F9E                       __CFG_WDTPS$32768 000000  
                         _s_front_left 009C                              _width_obs 00E5  
                    ___wmul@multiplier 0001                              _step_func 5948  
                     _obstacle_rule_lw 01A2                       _obstacle_rule_rw 0200  
           obstacle_avoid_controller@i 00C3             obstacle_avoid_controller@j 00C5  
           obstacle_avoid_controller@k 00C7                        ??_Pos_Right_Mem 0048  
                            copy_data0 5CE2                              copy_data1 5D02  
              read_ultrasonic_s3@value 003D                read_ultrasonic_s4@value 003D  
              read_ultrasonic_s5@value 003D                read_ultrasonic_s6@value 003D  
              read_ultrasonic_s7@value 003D                read_ultrasonic_s8@value 003D  
                     OpenI2C@sync_mode 0002                               _Mem_left 0069  
                     lcdcmd_4bit@value 0006                       __size_of_IdleI2C 0010  
                __size_of_Pos_left_Mem 018E                               __Hrparam 0000  
                     __size_of_OpenI2C 001E                               __Lrparam 0000  
                           step_func@x 0039                       __size_of___awdiv 00A4  
                     __size_of___ftadd 01AC                       __size_of___ftdiv 00D6  
                     __size_of___ftneg 0026                       __size_of___ftmul 00E4  
                     __size_of___fttol 00D4                               _WriteI2C 5BD8  
                             ___awtoft 5A08                               ___ftpack 6030  
                             ___lwtoft 5866                             ?_step_func 0039  
                     __size_of_s_delay 0038                           ??_long_delay 0003  
                             __ptext10 5A50                               __ptext11 5DC4  
                             __ptext20 590E                               __ptext12 5F8A  
                             __ptext21 5984                               __ptext13 58B0  
                             __ptext30 6A82                               __ptext22 5848  
                             __ptext14 60D8                               __ptext31 6DBC  
                             __ptext23 58D6                               __ptext15 5C3C  
                             __ptext32 72C8                               __ptext24 5B84  
                             __ptext16 59C6                               __ptext33 5948  
                             __ptext25 5BD8                               __ptext17 5EE6  
                             __ptext34 588A                               __ptext26 581A  
                             __ptext18 5A98                               __ptext35 6282  
                             __ptext27 582A                               __ptext19 5D38  
                             __ptext36 61AC                               __ptext28 700E  
                             __ptext37 6C10                               __ptext29 5A08  
                             __ptext38 6030                           _Pos_left_Mem 6A82  
                    _Pos_left_Mem$1815 004B                      _Pos_left_Mem$1816 004E  
                    _Pos_left_Mem$1817 0051                __size_of_Pos_Centre_Mem 042E  
                          _int_to_char 5C3C                          __size_of_area 00A6  
                             _init_lcd 5D38                          __size_of_main 0146  
                             area@area 003F                         Pos_Right_Mem@d 0045  
                      SetWheelSpeed@lw 0004                        SetWheelSpeed@rw 0006  
               _area_obstacle_avoid_lw 0100                               _slave_lw 00E7  
                             _slave_rw 005F                     __end_of_long_delay 5948  
                __CFG_CPUDIV$OSC1_PLL2 000000                             _INTCONbits 000FF2  
                             s_delay@a 0001                               s_delay@x 0004  
                          _lw_velocity 00A2     __size_of_obstacle_avoid_controller 090A  
                          ??_step_func 003C               __size_of_init_ultrasonic 004A  
              __size_of_Mem_values_obs 02BA                            _SSPCON1bits 000FC6  
                          _SSPCON2bits 000FC5                     _read_ultrasonic_s3 6366  
                   _read_ultrasonic_s4 645A                     _read_ultrasonic_s5 6554  
                   _read_ultrasonic_s6 664E                     _read_ultrasonic_s7 6748  
                   _read_ultrasonic_s8 6842                     Pos_Centre_Mem@temp 00B9  
                        ?_lcddata_4bit 0001                           ?_lcdcmd_4bit 0001  
                __end_of_SetWheelSpeed 5BD8  
