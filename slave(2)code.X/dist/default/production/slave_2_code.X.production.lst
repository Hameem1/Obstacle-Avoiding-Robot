

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Jun 16 03:00:18 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F2431
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    34  0000                     
    35                           	psect	idataCOMRAM
    36  000BD2                     __pidataCOMRAM:
    37                           	opt stack 0
    38                           
    39                           ;initializer for _count
    40  000BD2  0001               	dw	1
    41                           
    42                           	psect	idataBANK0
    43  000BD4                     __pidataBANK0:
    44                           	opt stack 0
    45                           
    46                           ;initializer for _des_vel
    47  000BD4  0046               	dw	70
    48  0000                     _TMR1	set	4046
    49  0000                     _TMR5	set	3975
    50  0000                     _ADCON0bits	set	4034
    51  0000                     _ANSEL0	set	4024
    52  0000                     _CAP1CONbits	set	3939
    53  0000                     _DFLTCON	set	3936
    54  0000                     _DTCON	set	3949
    55  0000                     _INTCONbits	set	4082
    56  0000                     _MAXCNTH	set	3941
    57  0000                     _MAXCNTL	set	3940
    58  0000                     _PDC0H	set	3960
    59  0000                     _PDC0L	set	3961
    60  0000                     _PIE1bits	set	3997
    61  0000                     _PIE3bits	set	4003
    62  0000                     _PIR1bits	set	3998
    63  0000                     _PIR3bits	set	4004
    64  0000                     _PORTAbits	set	3968
    65  0000                     _POSCNTH	set	3943
    66  0000                     _POSCNTL	set	3942
    67  0000                     _PTCON0	set	3967
    68  0000                     _PTCON1	set	3966
    69  0000                     _PTMRH	set	3964
    70  0000                     _PTMRL	set	3965
    71  0000                     _PTPERH	set	3962
    72  0000                     _PTPERL	set	3963
    73  0000                     _PWMCON0	set	3951
    74  0000                     _PWMCON1	set	3950
    75  0000                     _QEICON	set	4022
    76  0000                     _QEICONbits	set	4022
    77  0000                     _SSPADD	set	4040
    78  0000                     _SSPBUF	set	4041
    79  0000                     _SSPCON	set	4038
    80  0000                     _SSPCON1bits	set	4038
    81  0000                     _SSPSTAT	set	4039
    82  0000                     _T0CON	set	4053
    83  0000                     _T0CONbits	set	4053
    84  0000                     _T1CON	set	4045
    85  0000                     _T5CON	set	4023
    86  0000                     _TMR0H	set	4055
    87  0000                     _TMR0L	set	4054
    88  0000                     _TRISAbits	set	3986
    89  0000                     _TRISB	set	3987
    90  0000                     _TRISBbits	set	3987
    91  0000                     _TRISC	set	3988
    92  0000                     _VELRH	set	3945
    93  0000                     _VELRL	set	3944
    94                           
    95                           	psect	nvCOMRAM
    96  000049                     __pnvCOMRAM:
    97                           	opt stack 0
    98  000049                     _act_vel:
    99                           	opt stack 0
   100  000049                     	ds	2
   101                           
   102                           ; #config settings
   103  0000                     
   104                           	psect	cinit
   105  000A58                     __pcinit:
   106                           	opt stack 0
   107  000A58                     start_initialization:
   108                           	opt stack 0
   109  000A58                     __initialization:
   110                           	opt stack 0
   111                           
   112                           ; Clear objects allocated to BANK0 (18 bytes)
   113  000A58  EE00  F07A         	lfsr	0,__pbssBANK0
   114  000A5C  0E12               	movlw	18
   115  000A5E                     clear_0:
   116  000A5E  6AEE               	clrf	postinc0,c
   117  000A60  06E8               	decf	wreg,f,c
   118  000A62  E1FD               	bnz	clear_0
   119                           
   120                           ; Clear objects allocated to COMRAM (17 bytes)
   121  000A64  EE00  F038         	lfsr	0,__pbssCOMRAM
   122  000A68  0E11               	movlw	17
   123  000A6A                     clear_1:
   124  000A6A  6AEE               	clrf	postinc0,c
   125  000A6C  06E8               	decf	wreg,f,c
   126  000A6E  E1FD               	bnz	clear_1
   127                           
   128                           ; Initialize objects allocated to BANK0 (2 bytes)
   129                           ; load TBLPTR registers with __pidataBANK0
   130  000A70  0ED4               	movlw	low __pidataBANK0
   131  000A72  6EF6               	movwf	tblptrl,c
   132  000A74  0E0B               	movlw	high __pidataBANK0
   133  000A76  6EF7               	movwf	tblptrh,c
   134  000A78  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   135  000A7A  6EF8               	movwf	tblptru,c
   136  000A7C  0009               	tblrd		*+	;fetch initializer
   137  000A7E  CFF5 F08C          	movff	tablat,__pdataBANK0
   138  000A82  0009               	tblrd		*+	;fetch initializer
   139  000A84  CFF5 F08D          	movff	tablat,__pdataBANK0+1
   140                           
   141                           ; Initialize objects allocated to COMRAM (2 bytes)
   142                           ; load TBLPTR registers with __pidataCOMRAM
   143  000A88  0ED2               	movlw	low __pidataCOMRAM
   144  000A8A  6EF6               	movwf	tblptrl,c
   145  000A8C  0E0B               	movlw	high __pidataCOMRAM
   146  000A8E  6EF7               	movwf	tblptrh,c
   147  000A90  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   148  000A92  6EF8               	movwf	tblptru,c
   149  000A94  0009               	tblrd		*+	;fetch initializer
   150  000A96  CFF5 F04B          	movff	tablat,__pdataCOMRAM
   151  000A9A  0009               	tblrd		*+	;fetch initializer
   152  000A9C  CFF5 F04C          	movff	tablat,__pdataCOMRAM+1
   153  000AA0                     end_of_initialization:
   154                           	opt stack 0
   155  000AA0                     __end_of__initialization:
   156                           	opt stack 0
   157  000AA0  0100               	movlb	0
   158  000AA2  EFC1  F001         	goto	_main	;jump to C main() function
   159                           tblptru	equ	0xFF8
   160                           tblptrh	equ	0xFF7
   161                           tblptrl	equ	0xFF6
   162                           tablat	equ	0xFF5
   163                           postinc0	equ	0xFEE
   164                           wreg	equ	0xFE8
   165                           
   166                           	psect	bssCOMRAM
   167  000038                     __pbssCOMRAM:
   168                           	opt stack 0
   169  000038                     _actual_pos:
   170                           	opt stack 0
   171  000038                     	ds	2
   172  00003A                     _d_err:
   173                           	opt stack 0
   174  00003A                     	ds	2
   175  00003C                     _p_err:
   176                           	opt stack 0
   177  00003C                     	ds	2
   178  00003E                     _poscnt_rolovr:
   179                           	opt stack 0
   180  00003E                     	ds	2
   181  000040                     _poscnth:
   182                           	opt stack 0
   183  000040                     	ds	2
   184  000042                     _poscntl:
   185                           	opt stack 0
   186  000042                     	ds	2
   187  000044                     _tmr5_rolovr:
   188                           	opt stack 0
   189  000044                     	ds	2
   190  000046                     _rec_vel:
   191                           	opt stack 0
   192  000046                     	ds	1
   193  000047                     _err_vel:
   194                           	opt stack 0
   195  000047                     	ds	2
   196                           tblptru	equ	0xFF8
   197                           tblptrh	equ	0xFF7
   198                           tblptrl	equ	0xFF6
   199                           tablat	equ	0xFF5
   200                           postinc0	equ	0xFEE
   201                           wreg	equ	0xFE8
   202                           
   203                           	psect	dataCOMRAM
   204  00004B                     __pdataCOMRAM:
   205                           	opt stack 0
   206  00004B                     _count:
   207                           	opt stack 0
   208  00004B                     	ds	2
   209                           tblptru	equ	0xFF8
   210                           tblptrh	equ	0xFF7
   211                           tblptrl	equ	0xFF6
   212                           tablat	equ	0xFF5
   213                           postinc0	equ	0xFEE
   214                           wreg	equ	0xFE8
   215                           
   216                           	psect	bssBANK0
   217  00007A                     __pbssBANK0:
   218                           	opt stack 0
   219  00007A                     _new_pos:
   220                           	opt stack 0
   221  00007A                     	ds	4
   222  00007E                     _old_pos:
   223                           	opt stack 0
   224  00007E                     	ds	4
   225  000082                     _velr_vh:
   226                           	opt stack 0
   227  000082                     	ds	4
   228  000086                     _a_err:
   229                           	opt stack 0
   230  000086                     	ds	2
   231  000088                     _velrh:
   232                           	opt stack 0
   233  000088                     	ds	2
   234  00008A                     _velrl:
   235                           	opt stack 0
   236  00008A                     	ds	2
   237                           tblptru	equ	0xFF8
   238                           tblptrh	equ	0xFF7
   239                           tblptrl	equ	0xFF6
   240                           tablat	equ	0xFF5
   241                           postinc0	equ	0xFEE
   242                           wreg	equ	0xFE8
   243                           
   244                           	psect	dataBANK0
   245  00008C                     __pdataBANK0:
   246                           	opt stack 0
   247  00008C                     _des_vel:
   248                           	opt stack 0
   249  00008C                     	ds	2
   250                           tblptru	equ	0xFF8
   251                           tblptrh	equ	0xFF7
   252                           tblptrl	equ	0xFF6
   253                           tablat	equ	0xFF5
   254                           postinc0	equ	0xFEE
   255                           wreg	equ	0xFE8
   256                           
   257                           	psect	cstackBANK0
   258  000060                     __pcstackBANK0:
   259                           	opt stack 0
   260  000060                     ___ftadd@sign:
   261                           	opt stack 0
   262                           
   263                           ; 1 bytes @ 0x0
   264  000060                     	ds	1
   265  000061                     ___ftadd@exp2:
   266                           	opt stack 0
   267                           
   268                           ; 1 bytes @ 0x1
   269  000061                     	ds	1
   270  000062                     ___ftadd@exp1:
   271                           	opt stack 0
   272                           
   273                           ; 1 bytes @ 0x2
   274  000062                     	ds	1
   275  000063                     ?___fttol:
   276                           	opt stack 0
   277  000063                     ___fttol@f1:
   278                           	opt stack 0
   279                           
   280                           ; 3 bytes @ 0x3
   281  000063                     	ds	4
   282  000067                     ??___fttol:
   283                           
   284                           ; 0 bytes @ 0x7
   285  000067                     	ds	5
   286  00006C                     ___fttol@sign1:
   287                           	opt stack 0
   288                           
   289                           ; 1 bytes @ 0xC
   290  00006C                     	ds	1
   291  00006D                     ___fttol@lval:
   292                           	opt stack 0
   293                           
   294                           ; 4 bytes @ 0xD
   295  00006D                     	ds	4
   296  000071                     ___fttol@exp1:
   297                           	opt stack 0
   298                           
   299                           ; 1 bytes @ 0x11
   300  000071                     	ds	1
   301  000072                     ??_main:
   302                           
   303                           ; 0 bytes @ 0x12
   304  000072                     	ds	4
   305  000076                     main@u:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x16
   309  000076                     	ds	2
   310  000078                     main@DC:
   311                           	opt stack 0
   312                           
   313                           ; 2 bytes @ 0x18
   314  000078                     	ds	2
   315                           tblptru	equ	0xFF8
   316                           tblptrh	equ	0xFF7
   317                           tblptrl	equ	0xFF6
   318                           tablat	equ	0xFF5
   319                           postinc0	equ	0xFEE
   320                           wreg	equ	0xFE8
   321                           
   322                           	psect	cstackCOMRAM
   323  000001                     __pcstackCOMRAM:
   324                           	opt stack 0
   325  000001                     ??_isr:
   326  000001                     
   327                           ; 0 bytes @ 0x0
   328  000001                     	ds	16
   329  000011                     isr@address:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x10
   333  000011                     	ds	1
   334  000012                     isr@c:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x11
   338  000012                     	ds	1
   339  000013                     isr@temp:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0x12
   343  000013                     	ds	1
   344  000014                     ?___wmul:
   345                           	opt stack 0
   346  000014                     ?___ftpack:
   347                           	opt stack 0
   348  000014                     ?___aldiv:
   349                           	opt stack 0
   350  000014                     pwm_generator@DC:
   351                           	opt stack 0
   352  000014                     ___wmul@multiplier:
   353                           	opt stack 0
   354  000014                     ___ftpack@arg:
   355                           	opt stack 0
   356  000014                     ___aldiv@dividend:
   357                           	opt stack 0
   358                           
   359                           ; 4 bytes @ 0x13
   360  000014                     	ds	2
   361  000016                     ??_pwm_generator:
   362  000016                     ___wmul@multiplicand:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x15
   366  000016                     	ds	1
   367  000017                     ___ftpack@exp:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0x16
   371  000017                     	ds	1
   372  000018                     ___ftpack@sign:
   373                           	opt stack 0
   374  000018                     ___wmul@product:
   375                           	opt stack 0
   376  000018                     ___aldiv@divisor:
   377                           	opt stack 0
   378                           
   379                           ; 4 bytes @ 0x17
   380  000018                     	ds	1
   381  000019                     ??___ftpack:
   382  000019                     pwm_generator@on_time:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0x18
   386  000019                     	ds	1
   387  00001A                     ?___awdiv:
   388                           	opt stack 0
   389  00001A                     ___awdiv@dividend:
   390                           	opt stack 0
   391                           
   392                           ; 2 bytes @ 0x19
   393  00001A                     	ds	2
   394  00001C                     ?___awtoft:
   395                           	opt stack 0
   396  00001C                     ___aldiv@counter:
   397                           	opt stack 0
   398  00001C                     ___awdiv@divisor:
   399                           	opt stack 0
   400  00001C                     ___awtoft@c:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0x1B
   404  00001C                     	ds	1
   405  00001D                     ___aldiv@sign:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x1C
   409  00001D                     	ds	1
   410  00001E                     ___awdiv@counter:
   411                           	opt stack 0
   412  00001E                     ___aldiv@quotient:
   413                           	opt stack 0
   414                           
   415                           ; 4 bytes @ 0x1D
   416  00001E                     	ds	1
   417  00001F                     ___awdiv@sign:
   418                           	opt stack 0
   419  00001F                     ___awtoft@sign:
   420                           	opt stack 0
   421                           
   422                           ; 1 bytes @ 0x1E
   423  00001F                     	ds	1
   424  000020                     ?___ftmul:
   425                           	opt stack 0
   426  000020                     ___awdiv@quotient:
   427                           	opt stack 0
   428  000020                     ___ftmul@f1:
   429                           	opt stack 0
   430                           
   431                           ; 3 bytes @ 0x1F
   432  000020                     	ds	2
   433  000022                     ??_vel_read:
   434                           
   435                           ; 0 bytes @ 0x21
   436  000022                     	ds	1
   437  000023                     ___ftmul@f2:
   438                           	opt stack 0
   439                           
   440                           ; 3 bytes @ 0x22
   441  000023                     	ds	3
   442  000026                     ??___ftmul:
   443  000026                     vel_read@pulse_count:
   444                           	opt stack 0
   445                           
   446                           ; 4 bytes @ 0x25
   447  000026                     	ds	3
   448  000029                     ___ftmul@exp:
   449                           	opt stack 0
   450                           
   451                           ; 1 bytes @ 0x28
   452  000029                     	ds	1
   453  00002A                     vel_read@temp:
   454                           	opt stack 0
   455  00002A                     ___ftmul@f3_as_product:
   456                           	opt stack 0
   457                           
   458                           ; 3 bytes @ 0x29
   459  00002A                     	ds	2
   460  00002C                     vel_read@freq:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x2B
   464  00002C                     	ds	1
   465  00002D                     ___ftmul@cntr:
   466                           	opt stack 0
   467                           
   468                           ; 1 bytes @ 0x2C
   469  00002D                     	ds	1
   470  00002E                     ___ftmul@sign:
   471                           	opt stack 0
   472  00002E                     _vel_read$1375:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x2D
   476  00002E                     	ds	1
   477  00002F                     ?___ftadd:
   478                           	opt stack 0
   479  00002F                     ___ftadd@f1:
   480                           	opt stack 0
   481                           
   482                           ; 3 bytes @ 0x2E
   483  00002F                     	ds	3
   484  000032                     ___ftadd@f2:
   485                           	opt stack 0
   486                           
   487                           ; 3 bytes @ 0x31
   488  000032                     	ds	3
   489  000035                     ??___ftadd:
   490                           
   491                           ; 0 bytes @ 0x34
   492  000035                     	ds	3
   493                           tblptru	equ	0xFF8
   494                           tblptrh	equ	0xFF7
   495                           tblptrl	equ	0xFF6
   496                           tablat	equ	0xFF5
   497                           postinc0	equ	0xFEE
   498                           wreg	equ	0xFE8
   499                           
   500 ;;
   501 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   502 ;;
   503 ;; *************** function _main *****************
   504 ;; Defined at:
   505 ;;		line 164 in file "slave2code.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;		None
   508 ;; Auto vars:     Size  Location     Type
   509 ;;  DC              2   24[BANK0 ] int 
   510 ;;  u               2   22[BANK0 ] int 
   511 ;; Return value:  Size  Location     Type
   512 ;;		None               void
   513 ;; Registers used:
   514 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   520 ;;      Params:         0       0       0       0
   521 ;;      Locals:         0       4       0       0
   522 ;;      Temps:          0       4       0       0
   523 ;;      Totals:         0       8       0       0
   524 ;;Total ram usage:        8 bytes
   525 ;; Hardware stack levels required when called:    3
   526 ;; This function calls:
   527 ;;		___awdiv
   528 ;;		___awtoft
   529 ;;		___ftadd
   530 ;;		___ftmul
   531 ;;		___fttol
   532 ;;		___wmul
   533 ;;		_init_I2C
   534 ;;		_init_QEI
   535 ;;		_init_pwm
   536 ;;		_init_time_base
   537 ;;		_interrupt_enable
   538 ;;		_pwm_generator
   539 ;;		_vel_read
   540 ;; This function is called by:
   541 ;;		Startup code after reset
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           	psect	text0
   546  000382                     __ptext0:
   547                           	opt stack 0
   548  000382                     _main:
   549                           	opt stack 28
   550                           
   551                           ;slave2code.c: 168: ANSEL0=0X00;
   552                           
   553                           ;incstack = 0
   554  000382  0E00               	movlw	0
   555  000384  6EB8               	movwf	4024,c	;volatile
   556                           
   557                           ;slave2code.c: 169: ADCON0bits.ADON=0;
   558  000386  90C2               	bcf	4034,0,c	;volatile
   559                           
   560                           ;slave2code.c: 170: interrupt_enable();
   561  000388  ECE4  F005         	call	_interrupt_enable	;wreg free
   562                           
   563                           ;slave2code.c: 171: init_QEI();
   564  00038C  ECA9  F005         	call	_init_QEI	;wreg free
   565                           
   566                           ;slave2code.c: 172: init_pwm();
   567  000390  EC94  F005         	call	_init_pwm	;wreg free
   568                           
   569                           ;slave2code.c: 173: init_I2C();
   570  000394  ECD0  F005         	call	_init_I2C	;wreg free
   571                           
   572                           ;slave2code.c: 174: TRISB=0;
   573  000398  0E00               	movlw	0
   574  00039A  6E93               	movwf	3987,c	;volatile
   575                           
   576                           ;slave2code.c: 175: init_time_base();
   577  00039C  ECDB  F005         	call	_init_time_base	;wreg free
   578                           
   579                           ;slave2code.c: 176: TRISAbits.RA0=0;
   580  0003A0  9092               	bcf	3986,0,c	;volatile
   581  0003A2                     l1943:
   582                           
   583                           ;slave2code.c: 183: {
   584                           ;slave2code.c: 185: PORTAbits.RA0=~PORTAbits.RA0;
   585  0003A2  7080               	btg	3968,0,c	;volatile
   586                           
   587                           ;slave2code.c: 186: vel_read();
   588  0003A4  EC2A  F004         	call	_vel_read	;wreg free
   589                           
   590                           ;slave2code.c: 187: if(QEICONbits.UP_DOWN==0)
   591  0003A8  BAB6               	btfsc	4022,5,c	;volatile
   592  0003AA  D004               	goto	l1951
   593                           
   594                           ;slave2code.c: 188: act_vel=(-act_vel);
   595  0003AC  6C49               	negf	_act_vel,c
   596  0003AE  1E4A               	comf	_act_vel+1,f,c
   597  0003B0  B0D8               	btfsc	status,0,c
   598  0003B2  2A4A               	incf	_act_vel+1,f,c
   599  0003B4                     l1951:
   600                           
   601                           ;slave2code.c: 190: err_vel=des_vel-act_vel;
   602  0003B4  C049  F072         	movff	_act_vel,??_main
   603  0003B8  C04A  F073         	movff	_act_vel+1,??_main+1
   604  0003BC  0100               	movlb	0	; () banked
   605  0003BE  1F72               	comf	??_main& (0+255),f,b
   606  0003C0  1F73               	comf	(??_main+1)& (0+255),f,b
   607  0003C2  4B72               	infsnz	??_main& (0+255),f,b
   608  0003C4  2B73               	incf	(??_main+1)& (0+255),f,b
   609  0003C6  0100               	movlb	0	; () banked
   610  0003C8  518C               	movf	_des_vel& (0+255),w,b
   611  0003CA  0100               	movlb	0	; () banked
   612  0003CC  2572               	addwf	??_main& (0+255),w,b
   613  0003CE  6E47               	movwf	_err_vel,c
   614  0003D0  0100               	movlb	0	; () banked
   615  0003D2  518D               	movf	(_des_vel+1)& (0+255),w,b
   616  0003D4  0100               	movlb	0	; () banked
   617  0003D6  2173               	addwfc	(??_main+1)& (0+255),w,b
   618  0003D8  6E48               	movwf	_err_vel+1,c
   619                           
   620                           ; BSR set to: 0
   621                           ;slave2code.c: 194: u=(13*err_vel)+(0.01*a_err);
   622  0003DA  0ED7               	movlw	215
   623  0003DC  6E23               	movwf	___ftmul@f2,c
   624  0003DE  0E23               	movlw	35
   625  0003E0  6E24               	movwf	___ftmul@f2+1,c
   626  0003E2  0E3C               	movlw	60
   627  0003E4  6E25               	movwf	___ftmul@f2+2,c
   628  0003E6  C086  F01C         	movff	_a_err,___awtoft@c
   629  0003EA  C087  F01D         	movff	_a_err+1,___awtoft@c+1
   630  0003EE  EC53  F005         	call	___awtoft	;wreg free
   631  0003F2  C01C  F020         	movff	?___awtoft,___ftmul@f1
   632  0003F6  C01D  F021         	movff	?___awtoft+1,___ftmul@f1+1
   633  0003FA  C01E  F022         	movff	?___awtoft+2,___ftmul@f1+2
   634  0003FE  ECB8  F003         	call	___ftmul	;wreg free
   635  000402  C020  F032         	movff	?___ftmul,___ftadd@f2
   636  000406  C021  F033         	movff	?___ftmul+1,___ftadd@f2+1
   637  00040A  C022  F034         	movff	?___ftmul+2,___ftadd@f2+2
   638  00040E  C047  F014         	movff	_err_vel,___wmul@multiplier
   639  000412  C048  F015         	movff	_err_vel+1,___wmul@multiplier+1
   640  000416  0E00               	movlw	0
   641  000418  6E17               	movwf	___wmul@multiplicand+1,c
   642  00041A  0E0D               	movlw	13
   643  00041C  6E16               	movwf	___wmul@multiplicand,c
   644  00041E  ECBD  F005         	call	___wmul	;wreg free
   645  000422  C014  F01C         	movff	?___wmul,___awtoft@c
   646  000426  C015  F01D         	movff	?___wmul+1,___awtoft@c+1
   647  00042A  EC53  F005         	call	___awtoft	;wreg free
   648  00042E  C01C  F02F         	movff	?___awtoft,___ftadd@f1
   649  000432  C01D  F030         	movff	?___awtoft+1,___ftadd@f1+1
   650  000436  C01E  F031         	movff	?___awtoft+2,___ftadd@f1+2
   651  00043A  ECC4  F000         	call	___ftadd	;wreg free
   652  00043E  C02F  F063         	movff	?___ftadd,___fttol@f1
   653  000442  C030  F064         	movff	?___ftadd+1,___fttol@f1+1
   654  000446  C031  F065         	movff	?___ftadd+2,___fttol@f1+2
   655  00044A  EC95  F002         	call	___fttol	;wreg free
   656  00044E  C063  F072         	movff	?___fttol,??_main
   657  000452  C064  F073         	movff	?___fttol+1,??_main+1
   658  000456  C065  F074         	movff	?___fttol+2,??_main+2
   659  00045A  C066  F075         	movff	?___fttol+3,??_main+3
   660  00045E  C072  F076         	movff	??_main,main@u
   661  000462  C073  F077         	movff	??_main+1,main@u+1
   662                           
   663                           ;slave2code.c: 198: if (des_vel<7 && des_vel>-7)
   664  000466  0100               	movlb	0	; () banked
   665  000468  518D               	movf	(_des_vel+1)& (0+255),w,b
   666  00046A  0A80               	xorlw	128
   667  00046C  6EF3               	movwf	prodl,c
   668  00046E  0E80               	movlw	128
   669  000470  5CF3               	subwf	prodl,w,c
   670  000472  0E07               	movlw	7
   671  000474  B4D8               	btfsc	status,2,c
   672  000476  5D8C               	subwf	_des_vel& (0+255),w,b
   673  000478  B0D8               	btfsc	status,0,c
   674  00047A  D010               	goto	l1961
   675                           
   676                           ; BSR set to: 0
   677  00047C  0100               	movlb	0	; () banked
   678  00047E  518D               	movf	(_des_vel+1)& (0+255),w,b
   679  000480  0A80               	xorlw	128
   680  000482  0F81               	addlw	-127
   681  000484  0EFA               	movlw	250
   682  000486  B4D8               	btfsc	status,2,c
   683  000488  5D8C               	subwf	_des_vel& (0+255),w,b
   684  00048A  A0D8               	btfss	status,0,c
   685  00048C  D007               	goto	l1961
   686                           
   687                           ; BSR set to: 0
   688                           ;slave2code.c: 199: DC=50;
   689  00048E  0E00               	movlw	0
   690  000490  0100               	movlb	0	; () banked
   691  000492  6F79               	movwf	(main@DC+1)& (0+255),b
   692  000494  0E32               	movlw	50
   693  000496  0100               	movlb	0	; () banked
   694  000498  6F78               	movwf	main@DC& (0+255),b
   695  00049A  D01C               	goto	l1963
   696  00049C                     l1961:
   697                           
   698                           ; BSR set to: 0
   699                           ;slave2code.c: 200: else
   700                           ;slave2code.c: 201: DC= ((u*10)/45)+50;
   701  00049C  C076  F014         	movff	main@u,___wmul@multiplier
   702  0004A0  C077  F015         	movff	main@u+1,___wmul@multiplier+1
   703  0004A4  0E00               	movlw	0
   704  0004A6  6E17               	movwf	___wmul@multiplicand+1,c
   705  0004A8  0E0A               	movlw	10
   706  0004AA  6E16               	movwf	___wmul@multiplicand,c
   707  0004AC  ECBD  F005         	call	___wmul	;wreg free
   708  0004B0  C014  F01A         	movff	?___wmul,___awdiv@dividend
   709  0004B4  C015  F01B         	movff	?___wmul+1,___awdiv@dividend+1
   710  0004B8  0E00               	movlw	0
   711  0004BA  6E1D               	movwf	___awdiv@divisor+1,c
   712  0004BC  0E2D               	movlw	45
   713  0004BE  6E1C               	movwf	___awdiv@divisor,c
   714  0004C0  ECDA  F004         	call	___awdiv	;wreg free
   715  0004C4  0E32               	movlw	50
   716  0004C6  241A               	addwf	?___awdiv,w,c
   717  0004C8  0100               	movlb	0	; () banked
   718  0004CA  6F78               	movwf	main@DC& (0+255),b
   719  0004CC  0E00               	movlw	0
   720  0004CE  201B               	addwfc	?___awdiv+1,w,c
   721  0004D0  0100               	movlb	0	; () banked
   722  0004D2  6F79               	movwf	(main@DC+1)& (0+255),b
   723  0004D4                     l1963:
   724                           
   725                           ; BSR set to: 0
   726                           ;slave2code.c: 204: if (DC>98)
   727  0004D4  0100               	movlb	0	; () banked
   728  0004D6  5179               	movf	(main@DC+1)& (0+255),w,b
   729  0004D8  0A80               	xorlw	128
   730  0004DA  0F80               	addlw	-128
   731  0004DC  0E63               	movlw	99
   732  0004DE  B4D8               	btfsc	status,2,c
   733  0004E0  5D78               	subwf	main@DC& (0+255),w,b
   734  0004E2  A0D8               	btfss	status,0,c
   735  0004E4  D006               	goto	l1967
   736                           
   737                           ; BSR set to: 0
   738                           ;slave2code.c: 205: DC=97;
   739  0004E6  0E00               	movlw	0
   740  0004E8  0100               	movlb	0	; () banked
   741  0004EA  6F79               	movwf	(main@DC+1)& (0+255),b
   742  0004EC  0E61               	movlw	97
   743  0004EE  0100               	movlb	0	; () banked
   744  0004F0  6F78               	movwf	main@DC& (0+255),b
   745  0004F2                     l1967:
   746                           
   747                           ; BSR set to: 0
   748                           ;slave2code.c: 206: if (DC<2)
   749  0004F2  0100               	movlb	0	; () banked
   750  0004F4  5179               	movf	(main@DC+1)& (0+255),w,b
   751  0004F6  0A80               	xorlw	128
   752  0004F8  6EF3               	movwf	prodl,c
   753  0004FA  0E80               	movlw	128
   754  0004FC  5CF3               	subwf	prodl,w,c
   755  0004FE  0E02               	movlw	2
   756  000500  B4D8               	btfsc	status,2,c
   757  000502  5D78               	subwf	main@DC& (0+255),w,b
   758  000504  B0D8               	btfsc	status,0,c
   759  000506  D006               	goto	l1971
   760                           
   761                           ; BSR set to: 0
   762                           ;slave2code.c: 207: DC=3;
   763  000508  0E00               	movlw	0
   764  00050A  0100               	movlb	0	; () banked
   765  00050C  6F79               	movwf	(main@DC+1)& (0+255),b
   766  00050E  0E03               	movlw	3
   767  000510  0100               	movlb	0	; () banked
   768  000512  6F78               	movwf	main@DC& (0+255),b
   769  000514                     l1971:
   770                           
   771                           ; BSR set to: 0
   772                           ;slave2code.c: 209: pwm_generator(DC);
   773  000514  C078  F014         	movff	main@DC,pwm_generator@DC
   774  000518  C079  F015         	movff	main@DC+1,pwm_generator@DC+1
   775  00051C  EC77  F005         	call	_pwm_generator	;wreg free
   776                           
   777                           ;slave2code.c: 210: p_err=err_vel;
   778  000520  C047  F03C         	movff	_err_vel,_p_err
   779  000524  C048  F03D         	movff	_err_vel+1,_p_err+1
   780  000528  D73C               	goto	l1943
   781  00052A                     __end_of_main:
   782                           	opt stack 0
   783                           tblptru	equ	0xFF8
   784                           tblptrh	equ	0xFF7
   785                           tblptrl	equ	0xFF6
   786                           tablat	equ	0xFF5
   787                           prodl	equ	0xFF3
   788                           postinc0	equ	0xFEE
   789                           wreg	equ	0xFE8
   790                           status	equ	0xFD8
   791                           
   792 ;; *************** function _vel_read *****************
   793 ;; Defined at:
   794 ;;		line 278 in file "slave2code.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;		None
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  pulse_count     4   37[COMRAM] long 
   799 ;;  freq            2   43[COMRAM] int 
   800 ;;  temp            2   41[COMRAM] int 
   801 ;; Return value:  Size  Location     Type
   802 ;;		None               void
   803 ;; Registers used:
   804 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   810 ;;      Params:         0       0       0       0
   811 ;;      Locals:        10       0       0       0
   812 ;;      Temps:          4       0       0       0
   813 ;;      Totals:        14       0       0       0
   814 ;;Total ram usage:       14 bytes
   815 ;; Hardware stack levels used:    1
   816 ;; Hardware stack levels required when called:    2
   817 ;; This function calls:
   818 ;;		___aldiv
   819 ;;		___awdiv
   820 ;;		___wmul
   821 ;; This function is called by:
   822 ;;		_main
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           	psect	text1
   827  000854                     __ptext1:
   828                           	opt stack 0
   829  000854                     _vel_read:
   830                           	opt stack 28
   831                           
   832                           ;slave2code.c: 280: int temp=VELRH;
   833                           
   834                           ;incstack = 0
   835  000854  CF69 F02A          	movff	3945,vel_read@temp	;volatile
   836  000858  6A2B               	clrf	vel_read@temp+1,c
   837                           
   838                           ;slave2code.c: 281: long int pulse_count=(temp<<8)+VELRL;
   839  00085A  5068               	movf	3944,w,c	;volatile
   840  00085C  C02A  F022         	movff	vel_read@temp,??_vel_read
   841  000860  C02B  F023         	movff	vel_read@temp+1,??_vel_read+1
   842  000864  C022  F023         	movff	??_vel_read,??_vel_read+1
   843  000868  6A22               	clrf	??_vel_read,c
   844  00086A  2622               	addwf	??_vel_read,f,c
   845  00086C  0E00               	movlw	0
   846  00086E  2223               	addwfc	??_vel_read+1,f,c
   847  000870  C022  F026         	movff	??_vel_read,vel_read@pulse_count
   848  000874  C023  F027         	movff	??_vel_read+1,vel_read@pulse_count+1
   849  000878  0E00               	movlw	0
   850  00087A  BE27               	btfsc	vel_read@pulse_count+1,7,c
   851  00087C  0EFF               	movlw	-1
   852  00087E  6E28               	movwf	vel_read@pulse_count+2,c
   853  000880  6E29               	movwf	vel_read@pulse_count+3,c
   854                           
   855                           ;slave2code.c: 282: int freq= 5000000/(pulse_count);
   856  000882  0E40               	movlw	64
   857  000884  6E14               	movwf	___aldiv@dividend,c
   858  000886  0E4B               	movlw	75
   859  000888  6E15               	movwf	___aldiv@dividend+1,c
   860  00088A  0E4C               	movlw	76
   861  00088C  6E16               	movwf	___aldiv@dividend+2,c
   862  00088E  0E00               	movlw	0
   863  000890  6E17               	movwf	___aldiv@dividend+3,c
   864  000892  C026  F018         	movff	vel_read@pulse_count,___aldiv@divisor
   865  000896  C027  F019         	movff	vel_read@pulse_count+1,___aldiv@divisor+1
   866  00089A  C028  F01A         	movff	vel_read@pulse_count+2,___aldiv@divisor+2
   867  00089E  C029  F01B         	movff	vel_read@pulse_count+3,___aldiv@divisor+3
   868  0008A2  EC3A  F003         	call	___aldiv	;wreg free
   869  0008A6  C014  F022         	movff	?___aldiv,??_vel_read
   870  0008AA  C015  F023         	movff	?___aldiv+1,??_vel_read+1
   871  0008AE  C016  F024         	movff	?___aldiv+2,??_vel_read+2
   872  0008B2  C017  F025         	movff	?___aldiv+3,??_vel_read+3
   873  0008B6  C022  F02C         	movff	??_vel_read,vel_read@freq
   874  0008BA  C023  F02D         	movff	??_vel_read+1,vel_read@freq+1
   875                           
   876                           ;slave2code.c: 283: act_vel=((freq/16)*60)/50;
   877  0008BE  0E00               	movlw	0
   878  0008C0  6E1D               	movwf	___awdiv@divisor+1,c
   879  0008C2  0E10               	movlw	16
   880  0008C4  6E1C               	movwf	___awdiv@divisor,c
   881  0008C6  C02C  F01A         	movff	vel_read@freq,___awdiv@dividend
   882  0008CA  C02D  F01B         	movff	vel_read@freq+1,___awdiv@dividend+1
   883  0008CE  ECDA  F004         	call	___awdiv	;wreg free
   884  0008D2  C01A  F014         	movff	?___awdiv,___wmul@multiplier
   885  0008D6  C01B  F015         	movff	?___awdiv+1,___wmul@multiplier+1
   886  0008DA  0E00               	movlw	0
   887  0008DC  6E17               	movwf	___wmul@multiplicand+1,c
   888  0008DE  0E3C               	movlw	60
   889  0008E0  6E16               	movwf	___wmul@multiplicand,c
   890  0008E2  ECBD  F005         	call	___wmul	;wreg free
   891  0008E6  C014  F02E         	movff	?___wmul,_vel_read$1375
   892  0008EA  C015  F02F         	movff	?___wmul+1,_vel_read$1375+1
   893                           
   894                           ;slave2code.c: 283: act_vel=((freq/16)*60)/50;
   895  0008EE  C02E  F01A         	movff	_vel_read$1375,___awdiv@dividend
   896  0008F2  C02F  F01B         	movff	_vel_read$1375+1,___awdiv@dividend+1
   897  0008F6  0E00               	movlw	0
   898  0008F8  6E1D               	movwf	___awdiv@divisor+1,c
   899  0008FA  0E32               	movlw	50
   900  0008FC  6E1C               	movwf	___awdiv@divisor,c
   901  0008FE  ECDA  F004         	call	___awdiv	;wreg free
   902  000902  C01A  F049         	movff	?___awdiv,_act_vel
   903  000906  C01B  F04A         	movff	?___awdiv+1,_act_vel+1
   904  00090A  0012               	return	
   905  00090C                     __end_of_vel_read:
   906                           	opt stack 0
   907                           tblptru	equ	0xFF8
   908                           tblptrh	equ	0xFF7
   909                           tblptrl	equ	0xFF6
   910                           tablat	equ	0xFF5
   911                           prodl	equ	0xFF3
   912                           postinc0	equ	0xFEE
   913                           wreg	equ	0xFE8
   914                           status	equ	0xFD8
   915                           
   916 ;; *************** function ___wmul *****************
   917 ;; Defined at:
   918 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  multiplier      2   19[COMRAM] unsigned int 
   921 ;;  multiplicand    2   21[COMRAM] unsigned int 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  product         2   23[COMRAM] unsigned int 
   924 ;; Return value:  Size  Location     Type
   925 ;;                  2   19[COMRAM] unsigned int 
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0, prodl, prodh
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   933 ;;      Params:         4       0       0       0
   934 ;;      Locals:         2       0       0       0
   935 ;;      Temps:          0       0       0       0
   936 ;;      Totals:         6       0       0       0
   937 ;;Total ram usage:        6 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:    1
   940 ;; This function calls:
   941 ;;		Nothing
   942 ;; This function is called by:
   943 ;;		_main
   944 ;;		_vel_read
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text2
   949  000B7A                     __ptext2:
   950                           	opt stack 0
   951  000B7A                     ___wmul:
   952                           	opt stack 28
   953                           
   954                           ;incstack = 0
   955  000B7A  5014               	movf	___wmul@multiplier,w,c
   956  000B7C  0216               	mulwf	___wmul@multiplicand,c
   957  000B7E  CFF3 F018          	movff	prodl,___wmul@product
   958  000B82  CFF4 F019          	movff	prodh,___wmul@product+1
   959  000B86  5014               	movf	___wmul@multiplier,w,c
   960  000B88  0217               	mulwf	___wmul@multiplicand+1,c
   961  000B8A  50F3               	movf	prodl,w,c
   962  000B8C  2619               	addwf	___wmul@product+1,f,c
   963  000B8E  5015               	movf	___wmul@multiplier+1,w,c
   964  000B90  0216               	mulwf	___wmul@multiplicand,c
   965  000B92  50F3               	movf	prodl,w,c
   966  000B94  2619               	addwf	___wmul@product+1,f,c
   967  000B96  C018  F014         	movff	___wmul@product,?___wmul
   968  000B9A  C019  F015         	movff	___wmul@product+1,?___wmul+1
   969  000B9E  0012               	return	
   970  000BA0                     __end_of___wmul:
   971                           	opt stack 0
   972                           tblptru	equ	0xFF8
   973                           tblptrh	equ	0xFF7
   974                           tblptrl	equ	0xFF6
   975                           tablat	equ	0xFF5
   976                           prodh	equ	0xFF4
   977                           prodl	equ	0xFF3
   978                           postinc0	equ	0xFEE
   979                           wreg	equ	0xFE8
   980                           status	equ	0xFD8
   981                           
   982 ;; *************** function ___awdiv *****************
   983 ;; Defined at:
   984 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  dividend        2   25[COMRAM] int 
   987 ;;  divisor         2   27[COMRAM] int 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  quotient        2   31[COMRAM] int 
   990 ;;  sign            1   30[COMRAM] unsigned char 
   991 ;;  counter         1   29[COMRAM] unsigned char 
   992 ;; Return value:  Size  Location     Type
   993 ;;                  2   25[COMRAM] int 
   994 ;; Registers used:
   995 ;;		wreg, status,2, status,0, prodl
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1001 ;;      Params:         4       0       0       0
  1002 ;;      Locals:         4       0       0       0
  1003 ;;      Temps:          0       0       0       0
  1004 ;;      Totals:         8       0       0       0
  1005 ;;Total ram usage:        8 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; Hardware stack levels required when called:    1
  1008 ;; This function calls:
  1009 ;;		Nothing
  1010 ;; This function is called by:
  1011 ;;		_main
  1012 ;;		_vel_read
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           	psect	text3
  1017  0009B4                     __ptext3:
  1018                           	opt stack 0
  1019  0009B4                     ___awdiv:
  1020                           	opt stack 28
  1021                           
  1022                           ;incstack = 0
  1023  0009B4  0E00               	movlw	0
  1024  0009B6  6E1F               	movwf	___awdiv@sign,c
  1025  0009B8  501D               	movf	___awdiv@divisor+1,w,c
  1026  0009BA  0A80               	xorlw	128
  1027  0009BC  6EF3               	movwf	prodl,c
  1028  0009BE  0E80               	movlw	128
  1029  0009C0  5CF3               	subwf	prodl,w,c
  1030  0009C2  0E00               	movlw	0
  1031  0009C4  B4D8               	btfsc	status,2,c
  1032  0009C6  5C1C               	subwf	___awdiv@divisor,w,c
  1033  0009C8  B0D8               	btfsc	status,0,c
  1034  0009CA  D006               	goto	l1351
  1035  0009CC  6C1C               	negf	___awdiv@divisor,c
  1036  0009CE  1E1D               	comf	___awdiv@divisor+1,f,c
  1037  0009D0  B0D8               	btfsc	status,0,c
  1038  0009D2  2A1D               	incf	___awdiv@divisor+1,f,c
  1039  0009D4  0E01               	movlw	1
  1040  0009D6  6E1F               	movwf	___awdiv@sign,c
  1041  0009D8                     l1351:
  1042  0009D8  501B               	movf	___awdiv@dividend+1,w,c
  1043  0009DA  0A80               	xorlw	128
  1044  0009DC  6EF3               	movwf	prodl,c
  1045  0009DE  0E80               	movlw	128
  1046  0009E0  5CF3               	subwf	prodl,w,c
  1047  0009E2  0E00               	movlw	0
  1048  0009E4  B4D8               	btfsc	status,2,c
  1049  0009E6  5C1A               	subwf	___awdiv@dividend,w,c
  1050  0009E8  B0D8               	btfsc	status,0,c
  1051  0009EA  D006               	goto	l1357
  1052  0009EC  6C1A               	negf	___awdiv@dividend,c
  1053  0009EE  1E1B               	comf	___awdiv@dividend+1,f,c
  1054  0009F0  B0D8               	btfsc	status,0,c
  1055  0009F2  2A1B               	incf	___awdiv@dividend+1,f,c
  1056  0009F4  0E01               	movlw	1
  1057  0009F6  1A1F               	xorwf	___awdiv@sign,f,c
  1058  0009F8                     l1357:
  1059  0009F8  0E00               	movlw	0
  1060  0009FA  6E21               	movwf	___awdiv@quotient+1,c
  1061  0009FC  0E00               	movlw	0
  1062  0009FE  6E20               	movwf	___awdiv@quotient,c
  1063  000A00  501D               	movf	___awdiv@divisor+1,w,c
  1064  000A02  101C               	iorwf	___awdiv@divisor,w,c
  1065  000A04  B4D8               	btfsc	status,2,c
  1066  000A06  D01C               	goto	l1379
  1067  000A08  0E01               	movlw	1
  1068  000A0A  6E1E               	movwf	___awdiv@counter,c
  1069  000A0C  D004               	goto	l1365
  1070  000A0E                     l1363:
  1071  000A0E  90D8               	bcf	status,0,c
  1072  000A10  361C               	rlcf	___awdiv@divisor,f,c
  1073  000A12  361D               	rlcf	___awdiv@divisor+1,f,c
  1074  000A14  2A1E               	incf	___awdiv@counter,f,c
  1075  000A16                     l1365:
  1076  000A16  AE1D               	btfss	___awdiv@divisor+1,7,c
  1077  000A18  D7FA               	goto	l1363
  1078  000A1A                     l1367:
  1079  000A1A  90D8               	bcf	status,0,c
  1080  000A1C  3620               	rlcf	___awdiv@quotient,f,c
  1081  000A1E  3621               	rlcf	___awdiv@quotient+1,f,c
  1082  000A20  501C               	movf	___awdiv@divisor,w,c
  1083  000A22  5C1A               	subwf	___awdiv@dividend,w,c
  1084  000A24  501D               	movf	___awdiv@divisor+1,w,c
  1085  000A26  581B               	subwfb	___awdiv@dividend+1,w,c
  1086  000A28  A0D8               	btfss	status,0,c
  1087  000A2A  D005               	goto	l1375
  1088  000A2C  501C               	movf	___awdiv@divisor,w,c
  1089  000A2E  5E1A               	subwf	___awdiv@dividend,f,c
  1090  000A30  501D               	movf	___awdiv@divisor+1,w,c
  1091  000A32  5A1B               	subwfb	___awdiv@dividend+1,f,c
  1092  000A34  8020               	bsf	___awdiv@quotient,0,c
  1093  000A36                     l1375:
  1094  000A36  90D8               	bcf	status,0,c
  1095  000A38  321D               	rrcf	___awdiv@divisor+1,f,c
  1096  000A3A  321C               	rrcf	___awdiv@divisor,f,c
  1097  000A3C  2E1E               	decfsz	___awdiv@counter,f,c
  1098  000A3E  D7ED               	goto	l1367
  1099  000A40                     l1379:
  1100  000A40  501F               	movf	___awdiv@sign,w,c
  1101  000A42  B4D8               	btfsc	status,2,c
  1102  000A44  D004               	goto	l1383
  1103  000A46  6C20               	negf	___awdiv@quotient,c
  1104  000A48  1E21               	comf	___awdiv@quotient+1,f,c
  1105  000A4A  B0D8               	btfsc	status,0,c
  1106  000A4C  2A21               	incf	___awdiv@quotient+1,f,c
  1107  000A4E                     l1383:
  1108  000A4E  C020  F01A         	movff	___awdiv@quotient,?___awdiv
  1109  000A52  C021  F01B         	movff	___awdiv@quotient+1,?___awdiv+1
  1110  000A56  0012               	return	
  1111  000A58                     __end_of___awdiv:
  1112                           	opt stack 0
  1113                           tblptru	equ	0xFF8
  1114                           tblptrh	equ	0xFF7
  1115                           tblptrl	equ	0xFF6
  1116                           tablat	equ	0xFF5
  1117                           prodh	equ	0xFF4
  1118                           prodl	equ	0xFF3
  1119                           postinc0	equ	0xFEE
  1120                           wreg	equ	0xFE8
  1121                           status	equ	0xFD8
  1122                           
  1123 ;; *************** function ___aldiv *****************
  1124 ;; Defined at:
  1125 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  dividend        4   19[COMRAM] long 
  1128 ;;  divisor         4   23[COMRAM] long 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  quotient        4   29[COMRAM] long 
  1131 ;;  sign            1   28[COMRAM] unsigned char 
  1132 ;;  counter         1   27[COMRAM] unsigned char 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  4   19[COMRAM] long 
  1135 ;; Registers used:
  1136 ;;		wreg, status,2, status,0
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1142 ;;      Params:         8       0       0       0
  1143 ;;      Locals:         6       0       0       0
  1144 ;;      Temps:          0       0       0       0
  1145 ;;      Totals:        14       0       0       0
  1146 ;;Total ram usage:       14 bytes
  1147 ;; Hardware stack levels used:    1
  1148 ;; Hardware stack levels required when called:    1
  1149 ;; This function calls:
  1150 ;;		Nothing
  1151 ;; This function is called by:
  1152 ;;		_vel_read
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text4
  1157  000674                     __ptext4:
  1158                           	opt stack 0
  1159  000674                     ___aldiv:
  1160                           	opt stack 28
  1161                           
  1162                           ;incstack = 0
  1163  000674  0E00               	movlw	0
  1164  000676  6E1D               	movwf	___aldiv@sign,c
  1165  000678  501B               	movf	___aldiv@divisor+3,w,c
  1166  00067A  0A80               	xorlw	128
  1167  00067C  0F80               	addlw	128
  1168  00067E  E108               	bnz	u805
  1169  000680  0E00               	movlw	0
  1170  000682  5C1A               	subwf	___aldiv@divisor+2,w,c
  1171  000684  E105               	bnz	u805
  1172  000686  0E00               	movlw	0
  1173  000688  5C19               	subwf	___aldiv@divisor+1,w,c
  1174  00068A  E102               	bnz	u805
  1175  00068C  0E00               	movlw	0
  1176  00068E  5C18               	subwf	___aldiv@divisor,w,c
  1177  000690                     u805:
  1178  000690  B0D8               	btfsc	status,0,c
  1179  000692  D00A               	goto	l1307
  1180  000694  1E1B               	comf	___aldiv@divisor+3,f,c
  1181  000696  1E1A               	comf	___aldiv@divisor+2,f,c
  1182  000698  1E19               	comf	___aldiv@divisor+1,f,c
  1183  00069A  6C18               	negf	___aldiv@divisor,c
  1184  00069C  0E00               	movlw	0
  1185  00069E  2219               	addwfc	___aldiv@divisor+1,f,c
  1186  0006A0  221A               	addwfc	___aldiv@divisor+2,f,c
  1187  0006A2  221B               	addwfc	___aldiv@divisor+3,f,c
  1188  0006A4  0E01               	movlw	1
  1189  0006A6  6E1D               	movwf	___aldiv@sign,c
  1190  0006A8                     l1307:
  1191  0006A8  5017               	movf	___aldiv@dividend+3,w,c
  1192  0006AA  0A80               	xorlw	128
  1193  0006AC  0F80               	addlw	128
  1194  0006AE  E108               	bnz	u815
  1195  0006B0  0E00               	movlw	0
  1196  0006B2  5C16               	subwf	___aldiv@dividend+2,w,c
  1197  0006B4  E105               	bnz	u815
  1198  0006B6  0E00               	movlw	0
  1199  0006B8  5C15               	subwf	___aldiv@dividend+1,w,c
  1200  0006BA  E102               	bnz	u815
  1201  0006BC  0E00               	movlw	0
  1202  0006BE  5C14               	subwf	___aldiv@dividend,w,c
  1203  0006C0                     u815:
  1204  0006C0  B0D8               	btfsc	status,0,c
  1205  0006C2  D00A               	goto	l1313
  1206  0006C4  1E17               	comf	___aldiv@dividend+3,f,c
  1207  0006C6  1E16               	comf	___aldiv@dividend+2,f,c
  1208  0006C8  1E15               	comf	___aldiv@dividend+1,f,c
  1209  0006CA  6C14               	negf	___aldiv@dividend,c
  1210  0006CC  0E00               	movlw	0
  1211  0006CE  2215               	addwfc	___aldiv@dividend+1,f,c
  1212  0006D0  2216               	addwfc	___aldiv@dividend+2,f,c
  1213  0006D2  2217               	addwfc	___aldiv@dividend+3,f,c
  1214  0006D4  0E01               	movlw	1
  1215  0006D6  1A1D               	xorwf	___aldiv@sign,f,c
  1216  0006D8                     l1313:
  1217  0006D8  0E00               	movlw	0
  1218  0006DA  6E1E               	movwf	___aldiv@quotient,c
  1219  0006DC  0E00               	movlw	0
  1220  0006DE  6E1F               	movwf	___aldiv@quotient+1,c
  1221  0006E0  0E00               	movlw	0
  1222  0006E2  6E20               	movwf	___aldiv@quotient+2,c
  1223  0006E4  0E00               	movlw	0
  1224  0006E6  6E21               	movwf	___aldiv@quotient+3,c
  1225  0006E8  501B               	movf	___aldiv@divisor+3,w,c
  1226  0006EA  1018               	iorwf	___aldiv@divisor,w,c
  1227  0006EC  1019               	iorwf	___aldiv@divisor+1,w,c
  1228  0006EE  101A               	iorwf	___aldiv@divisor+2,w,c
  1229  0006F0  B4D8               	btfsc	status,2,c
  1230  0006F2  D02A               	goto	l1335
  1231  0006F4  0E01               	movlw	1
  1232  0006F6  6E1C               	movwf	___aldiv@counter,c
  1233  0006F8  D006               	goto	l1321
  1234  0006FA                     l1319:
  1235  0006FA  90D8               	bcf	status,0,c
  1236  0006FC  3618               	rlcf	___aldiv@divisor,f,c
  1237  0006FE  3619               	rlcf	___aldiv@divisor+1,f,c
  1238  000700  361A               	rlcf	___aldiv@divisor+2,f,c
  1239  000702  361B               	rlcf	___aldiv@divisor+3,f,c
  1240  000704  2A1C               	incf	___aldiv@counter,f,c
  1241  000706                     l1321:
  1242  000706  AE1B               	btfss	___aldiv@divisor+3,7,c
  1243  000708  D7F8               	goto	l1319
  1244  00070A                     l1323:
  1245  00070A  90D8               	bcf	status,0,c
  1246  00070C  361E               	rlcf	___aldiv@quotient,f,c
  1247  00070E  361F               	rlcf	___aldiv@quotient+1,f,c
  1248  000710  3620               	rlcf	___aldiv@quotient+2,f,c
  1249  000712  3621               	rlcf	___aldiv@quotient+3,f,c
  1250  000714  5018               	movf	___aldiv@divisor,w,c
  1251  000716  5C14               	subwf	___aldiv@dividend,w,c
  1252  000718  5019               	movf	___aldiv@divisor+1,w,c
  1253  00071A  5815               	subwfb	___aldiv@dividend+1,w,c
  1254  00071C  501A               	movf	___aldiv@divisor+2,w,c
  1255  00071E  5816               	subwfb	___aldiv@dividend+2,w,c
  1256  000720  501B               	movf	___aldiv@divisor+3,w,c
  1257  000722  5817               	subwfb	___aldiv@dividend+3,w,c
  1258  000724  A0D8               	btfss	status,0,c
  1259  000726  D009               	goto	l1331
  1260  000728  5018               	movf	___aldiv@divisor,w,c
  1261  00072A  5E14               	subwf	___aldiv@dividend,f,c
  1262  00072C  5019               	movf	___aldiv@divisor+1,w,c
  1263  00072E  5A15               	subwfb	___aldiv@dividend+1,f,c
  1264  000730  501A               	movf	___aldiv@divisor+2,w,c
  1265  000732  5A16               	subwfb	___aldiv@dividend+2,f,c
  1266  000734  501B               	movf	___aldiv@divisor+3,w,c
  1267  000736  5A17               	subwfb	___aldiv@dividend+3,f,c
  1268  000738  801E               	bsf	___aldiv@quotient,0,c
  1269  00073A                     l1331:
  1270  00073A  90D8               	bcf	status,0,c
  1271  00073C  321B               	rrcf	___aldiv@divisor+3,f,c
  1272  00073E  321A               	rrcf	___aldiv@divisor+2,f,c
  1273  000740  3219               	rrcf	___aldiv@divisor+1,f,c
  1274  000742  3218               	rrcf	___aldiv@divisor,f,c
  1275  000744  2E1C               	decfsz	___aldiv@counter,f,c
  1276  000746  D7E1               	goto	l1323
  1277  000748                     l1335:
  1278  000748  501D               	movf	___aldiv@sign,w,c
  1279  00074A  B4D8               	btfsc	status,2,c
  1280  00074C  D008               	goto	l1339
  1281  00074E  1E21               	comf	___aldiv@quotient+3,f,c
  1282  000750  1E20               	comf	___aldiv@quotient+2,f,c
  1283  000752  1E1F               	comf	___aldiv@quotient+1,f,c
  1284  000754  6C1E               	negf	___aldiv@quotient,c
  1285  000756  0E00               	movlw	0
  1286  000758  221F               	addwfc	___aldiv@quotient+1,f,c
  1287  00075A  2220               	addwfc	___aldiv@quotient+2,f,c
  1288  00075C  2221               	addwfc	___aldiv@quotient+3,f,c
  1289  00075E                     l1339:
  1290  00075E  C01E  F014         	movff	___aldiv@quotient,?___aldiv
  1291  000762  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
  1292  000766  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
  1293  00076A  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
  1294  00076E  0012               	return	
  1295  000770                     __end_of___aldiv:
  1296                           	opt stack 0
  1297                           tblptru	equ	0xFF8
  1298                           tblptrh	equ	0xFF7
  1299                           tblptrl	equ	0xFF6
  1300                           tablat	equ	0xFF5
  1301                           prodh	equ	0xFF4
  1302                           prodl	equ	0xFF3
  1303                           postinc0	equ	0xFEE
  1304                           wreg	equ	0xFE8
  1305                           status	equ	0xFD8
  1306                           
  1307 ;; *************** function _pwm_generator *****************
  1308 ;; Defined at:
  1309 ;;		line 232 in file "slave2code.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;  DC              2   19[COMRAM] int 
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;  on_time         2   24[COMRAM] int 
  1314 ;; Return value:  Size  Location     Type
  1315 ;;		None               void
  1316 ;; Registers used:
  1317 ;;		wreg, status,2, status,0
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1323 ;;      Params:         2       0       0       0
  1324 ;;      Locals:         2       0       0       0
  1325 ;;      Temps:          3       0       0       0
  1326 ;;      Totals:         7       0       0       0
  1327 ;;Total ram usage:        7 bytes
  1328 ;; Hardware stack levels used:    1
  1329 ;; Hardware stack levels required when called:    1
  1330 ;; This function calls:
  1331 ;;		Nothing
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text5
  1338  000AEE                     __ptext5:
  1339                           	opt stack 0
  1340  000AEE                     _pwm_generator:
  1341                           	opt stack 29
  1342                           
  1343                           ;slave2code.c: 234: int on_time=DC*2;
  1344                           
  1345                           ;incstack = 0
  1346  000AEE  90D8               	bcf	status,0,c
  1347  000AF0  3414               	rlcf	pwm_generator@DC,w,c
  1348  000AF2  6E19               	movwf	pwm_generator@on_time,c
  1349  000AF4  3415               	rlcf	pwm_generator@DC+1,w,c
  1350  000AF6  6E1A               	movwf	pwm_generator@on_time+1,c
  1351                           
  1352                           ;slave2code.c: 235: on_time=on_time<<2;
  1353  000AF8  C019  F016         	movff	pwm_generator@on_time,??_pwm_generator
  1354  000AFC  C01A  F017         	movff	pwm_generator@on_time+1,??_pwm_generator+1
  1355  000B00  90D8               	bcf	status,0,c
  1356  000B02  3616               	rlcf	??_pwm_generator,f,c
  1357  000B04  3617               	rlcf	??_pwm_generator+1,f,c
  1358  000B06  90D8               	bcf	status,0,c
  1359  000B08  3616               	rlcf	??_pwm_generator,f,c
  1360  000B0A  3617               	rlcf	??_pwm_generator+1,f,c
  1361  000B0C  C016  F019         	movff	??_pwm_generator,pwm_generator@on_time
  1362  000B10  C017  F01A         	movff	??_pwm_generator+1,pwm_generator@on_time+1
  1363                           
  1364                           ;slave2code.c: 236: PDC0L=on_time & 0xFF;
  1365  000B14  C019  FF79         	movff	pwm_generator@on_time,3961	;volatile
  1366                           
  1367                           ;slave2code.c: 237: PDC0H=(on_time&0xFF00)>>8;
  1368  000B18  C01A  F016         	movff	pwm_generator@on_time+1,??_pwm_generator
  1369  000B1C  C016  F017         	movff	??_pwm_generator,??_pwm_generator+1
  1370  000B20  6A18               	clrf	(??_pwm_generator+2)& (0+255),c
  1371  000B22  5017               	movf	??_pwm_generator+1,w,c
  1372  000B24  6E78               	movwf	3960,c	;volatile
  1373  000B26  0012               	return	
  1374  000B28                     __end_of_pwm_generator:
  1375                           	opt stack 0
  1376                           tblptru	equ	0xFF8
  1377                           tblptrh	equ	0xFF7
  1378                           tblptrl	equ	0xFF6
  1379                           tablat	equ	0xFF5
  1380                           prodh	equ	0xFF4
  1381                           prodl	equ	0xFF3
  1382                           postinc0	equ	0xFEE
  1383                           wreg	equ	0xFE8
  1384                           status	equ	0xFD8
  1385                           
  1386 ;; *************** function _interrupt_enable *****************
  1387 ;; Defined at:
  1388 ;;		line 258 in file "slave2code.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;		None
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;		None
  1393 ;; Return value:  Size  Location     Type
  1394 ;;		None               void
  1395 ;; Registers used:
  1396 ;;		wreg
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1402 ;;      Params:         0       0       0       0
  1403 ;;      Locals:         0       0       0       0
  1404 ;;      Temps:          0       0       0       0
  1405 ;;      Totals:         0       0       0       0
  1406 ;;Total ram usage:        0 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; Hardware stack levels required when called:    1
  1409 ;; This function calls:
  1410 ;;		Nothing
  1411 ;; This function is called by:
  1412 ;;		_main
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           	psect	text6
  1417  000BC8                     __ptext6:
  1418                           	opt stack 0
  1419  000BC8                     _interrupt_enable:
  1420                           	opt stack 29
  1421                           
  1422                           ;slave2code.c: 260: INTCONbits.GIE=1;
  1423                           
  1424                           ;incstack = 0
  1425  000BC8  8EF2               	bsf	intcon,7,c	;volatile
  1426                           
  1427                           ;slave2code.c: 261: INTCONbits.PEIE=1;
  1428  000BCA  8CF2               	bsf	intcon,6,c	;volatile
  1429                           
  1430                           ;slave2code.c: 262: PIE3bits.IC2QEIE=1;
  1431  000BCC  84A3               	bsf	4003,2,c	;volatile
  1432                           
  1433                           ;slave2code.c: 263: PIR3bits.IC2QEIF==0;
  1434  000BCE  50A4               	movf	4004,w,c	;volatile
  1435  000BD0  0012               	return	
  1436  000BD2                     __end_of_interrupt_enable:
  1437                           	opt stack 0
  1438                           tblptru	equ	0xFF8
  1439                           tblptrh	equ	0xFF7
  1440                           tblptrl	equ	0xFF6
  1441                           tablat	equ	0xFF5
  1442                           prodh	equ	0xFF4
  1443                           prodl	equ	0xFF3
  1444                           intcon	equ	0xFF2
  1445                           postinc0	equ	0xFEE
  1446                           wreg	equ	0xFE8
  1447                           status	equ	0xFD8
  1448                           
  1449 ;; *************** function _init_time_base *****************
  1450 ;; Defined at:
  1451 ;;		line 301 in file "slave2code.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;		None
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;		None
  1456 ;; Return value:  Size  Location     Type
  1457 ;;		None               void
  1458 ;; Registers used:
  1459 ;;		wreg, status,2
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1465 ;;      Params:         0       0       0       0
  1466 ;;      Locals:         0       0       0       0
  1467 ;;      Temps:          0       0       0       0
  1468 ;;      Totals:         0       0       0       0
  1469 ;;Total ram usage:        0 bytes
  1470 ;; Hardware stack levels used:    1
  1471 ;; Hardware stack levels required when called:    1
  1472 ;; This function calls:
  1473 ;;		Nothing
  1474 ;; This function is called by:
  1475 ;;		_main
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text7
  1480  000BB6                     __ptext7:
  1481                           	opt stack 0
  1482  000BB6                     _init_time_base:
  1483                           	opt stack 29
  1484                           
  1485                           ;slave2code.c: 305: TMR1=0xEC78;
  1486                           
  1487                           ;incstack = 0
  1488  000BB6  0EEC               	movlw	236
  1489  000BB8  6ECF               	movwf	4047,c	;volatile
  1490  000BBA  0E78               	movlw	120
  1491  000BBC  6ECE               	movwf	4046,c	;volatile
  1492                           
  1493                           ;slave2code.c: 306: PIE1bits.TMR1IE=1;
  1494  000BBE  809D               	bsf	3997,0,c	;volatile
  1495                           
  1496                           ;slave2code.c: 307: PIR1bits.TMR1IF=0;
  1497  000BC0  909E               	bcf	3998,0,c	;volatile
  1498                           
  1499                           ;slave2code.c: 308: T1CON=0b10000001;
  1500  000BC2  0E81               	movlw	129
  1501  000BC4  6ECD               	movwf	4045,c	;volatile
  1502  000BC6  0012               	return	
  1503  000BC8                     __end_of_init_time_base:
  1504                           	opt stack 0
  1505                           tblptru	equ	0xFF8
  1506                           tblptrh	equ	0xFF7
  1507                           tblptrl	equ	0xFF6
  1508                           tablat	equ	0xFF5
  1509                           prodh	equ	0xFF4
  1510                           prodl	equ	0xFF3
  1511                           intcon	equ	0xFF2
  1512                           postinc0	equ	0xFEE
  1513                           wreg	equ	0xFE8
  1514                           status	equ	0xFD8
  1515                           
  1516 ;; *************** function _init_pwm *****************
  1517 ;; Defined at:
  1518 ;;		line 216 in file "slave2code.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;		None
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;		None
  1523 ;; Return value:  Size  Location     Type
  1524 ;;		None               void
  1525 ;; Registers used:
  1526 ;;		wreg, status,2
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1532 ;;      Params:         0       0       0       0
  1533 ;;      Locals:         0       0       0       0
  1534 ;;      Temps:          0       0       0       0
  1535 ;;      Totals:         0       0       0       0
  1536 ;;Total ram usage:        0 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    1
  1539 ;; This function calls:
  1540 ;;		Nothing
  1541 ;; This function is called by:
  1542 ;;		_main
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text8
  1547  000B28                     __ptext8:
  1548                           	opt stack 0
  1549  000B28                     _init_pwm:
  1550                           	opt stack 29
  1551                           
  1552                           ;slave2code.c: 218: TRISBbits.RB0=0;
  1553                           
  1554                           ;incstack = 0
  1555  000B28  9093               	bcf	3987,0,c	;volatile
  1556                           
  1557                           ;slave2code.c: 219: TRISBbits.RB1=0;
  1558  000B2A  9293               	bcf	3987,1,c	;volatile
  1559                           
  1560                           ;slave2code.c: 220: PTMRH=0;
  1561  000B2C  0E00               	movlw	0
  1562  000B2E  6E7C               	movwf	3964,c	;volatile
  1563                           
  1564                           ;slave2code.c: 221: PTMRL=0;
  1565  000B30  0E00               	movlw	0
  1566  000B32  6E7D               	movwf	3965,c	;volatile
  1567                           
  1568                           ;slave2code.c: 222: PTPERH=0;
  1569  000B34  0E00               	movlw	0
  1570  000B36  6E7A               	movwf	3962,c	;volatile
  1571                           
  1572                           ;slave2code.c: 223: PTPERL=200;
  1573  000B38  0EC8               	movlw	200
  1574  000B3A  6E7B               	movwf	3963,c	;volatile
  1575                           
  1576                           ;slave2code.c: 224: DTCON=0x81;
  1577  000B3C  0E81               	movlw	129
  1578  000B3E  6E6D               	movwf	3949,c	;volatile
  1579                           
  1580                           ;slave2code.c: 225: PWMCON0=0x5C;
  1581  000B40  0E5C               	movlw	92
  1582  000B42  6E6F               	movwf	3951,c	;volatile
  1583                           
  1584                           ;slave2code.c: 226: PWMCON1=0x00;
  1585  000B44  0E00               	movlw	0
  1586  000B46  6E6E               	movwf	3950,c	;volatile
  1587                           
  1588                           ;slave2code.c: 227: PTCON0=0x00;
  1589  000B48  0E00               	movlw	0
  1590  000B4A  6E7F               	movwf	3967,c	;volatile
  1591                           
  1592                           ;slave2code.c: 228: PTCON1=0x80;
  1593  000B4C  0E80               	movlw	128
  1594  000B4E  6E7E               	movwf	3966,c	;volatile
  1595  000B50  0012               	return	
  1596  000B52                     __end_of_init_pwm:
  1597                           	opt stack 0
  1598                           tblptru	equ	0xFF8
  1599                           tblptrh	equ	0xFF7
  1600                           tblptrl	equ	0xFF6
  1601                           tablat	equ	0xFF5
  1602                           prodh	equ	0xFF4
  1603                           prodl	equ	0xFF3
  1604                           intcon	equ	0xFF2
  1605                           postinc0	equ	0xFEE
  1606                           wreg	equ	0xFE8
  1607                           status	equ	0xFD8
  1608                           
  1609 ;; *************** function _init_QEI *****************
  1610 ;; Defined at:
  1611 ;;		line 240 in file "slave2code.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;		None
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;		None
  1616 ;; Return value:  Size  Location     Type
  1617 ;;		None               void
  1618 ;; Registers used:
  1619 ;;		wreg, status,2
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1625 ;;      Params:         0       0       0       0
  1626 ;;      Locals:         0       0       0       0
  1627 ;;      Temps:          0       0       0       0
  1628 ;;      Totals:         0       0       0       0
  1629 ;;Total ram usage:        0 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; Hardware stack levels required when called:    1
  1632 ;; This function calls:
  1633 ;;		Nothing
  1634 ;; This function is called by:
  1635 ;;		_main
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text9
  1640  000B52                     __ptext9:
  1641                           	opt stack 0
  1642  000B52                     _init_QEI:
  1643                           	opt stack 29
  1644                           
  1645                           ;slave2code.c: 242: TRISAbits.RA3=1;
  1646                           
  1647                           ;incstack = 0
  1648  000B52  8692               	bsf	3986,3,c	;volatile
  1649                           
  1650                           ;slave2code.c: 243: TRISAbits.RA4=1;
  1651  000B54  8892               	bsf	3986,4,c	;volatile
  1652                           
  1653                           ;slave2code.c: 245: DFLTCON=0x31;
  1654  000B56  0E31               	movlw	49
  1655  000B58  6E60               	movwf	3936,c	;volatile
  1656                           
  1657                           ;slave2code.c: 246: QEICON=0x19;
  1658  000B5A  0E19               	movlw	25
  1659  000B5C  6EB6               	movwf	4022,c	;volatile
  1660                           
  1661                           ;slave2code.c: 247: MAXCNTH=0xFF;
  1662  000B5E  6865               	setf	3941,c	;volatile
  1663                           
  1664                           ;slave2code.c: 248: MAXCNTL=0xFF;
  1665  000B60  6864               	setf	3940,c	;volatile
  1666                           
  1667                           ;slave2code.c: 250: POSCNTH=0;
  1668  000B62  0E00               	movlw	0
  1669  000B64  6E67               	movwf	3943,c	;volatile
  1670                           
  1671                           ;slave2code.c: 251: POSCNTL=0;
  1672  000B66  0E00               	movlw	0
  1673  000B68  6E66               	movwf	3942,c	;volatile
  1674                           
  1675                           ;slave2code.c: 253: TMR5=0x00;
  1676  000B6A  0E00               	movlw	0
  1677  000B6C  6E88               	movwf	3976,c	;volatile
  1678  000B6E  0E00               	movlw	0
  1679  000B70  6E87               	movwf	3975,c	;volatile
  1680                           
  1681                           ;slave2code.c: 254: T5CON=0x01;
  1682  000B72  0E01               	movlw	1
  1683  000B74  6EB7               	movwf	4023,c	;volatile
  1684                           
  1685                           ;slave2code.c: 255: CAP1CONbits.CAP1REN=1;
  1686  000B76  8C63               	bsf	3939,6,c	;volatile
  1687  000B78  0012               	return	
  1688  000B7A                     __end_of_init_QEI:
  1689                           	opt stack 0
  1690                           tblptru	equ	0xFF8
  1691                           tblptrh	equ	0xFF7
  1692                           tblptrl	equ	0xFF6
  1693                           tablat	equ	0xFF5
  1694                           prodh	equ	0xFF4
  1695                           prodl	equ	0xFF3
  1696                           intcon	equ	0xFF2
  1697                           postinc0	equ	0xFEE
  1698                           wreg	equ	0xFE8
  1699                           status	equ	0xFD8
  1700                           
  1701 ;; *************** function _init_I2C *****************
  1702 ;; Defined at:
  1703 ;;		line 266 in file "slave2code.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;		None
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;		None
  1708 ;; Return value:  Size  Location     Type
  1709 ;;		None               void
  1710 ;; Registers used:
  1711 ;;		wreg, status,2
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1717 ;;      Params:         0       0       0       0
  1718 ;;      Locals:         0       0       0       0
  1719 ;;      Temps:          0       0       0       0
  1720 ;;      Totals:         0       0       0       0
  1721 ;;Total ram usage:        0 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; Hardware stack levels required when called:    1
  1724 ;; This function calls:
  1725 ;;		Nothing
  1726 ;; This function is called by:
  1727 ;;		_main
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text10
  1732  000BA0                     __ptext10:
  1733                           	opt stack 0
  1734  000BA0                     _init_I2C:
  1735                           	opt stack 29
  1736                           
  1737                           ;slave2code.c: 268: INTCONbits.PEIE=1;
  1738                           
  1739                           ;incstack = 0
  1740  000BA0  8CF2               	bsf	intcon,6,c	;volatile
  1741                           
  1742                           ;slave2code.c: 269: PIE1bits.SSPIE = 1;
  1743  000BA2  869D               	bsf	3997,3,c	;volatile
  1744                           
  1745                           ;slave2code.c: 270: PIR1bits.SSPIF=0;
  1746  000BA4  969E               	bcf	3998,3,c	;volatile
  1747                           
  1748                           ;slave2code.c: 271: TRISC=0x30;
  1749  000BA6  0E30               	movlw	48
  1750  000BA8  6E94               	movwf	3988,c	;volatile
  1751                           
  1752                           ;slave2code.c: 272: SSPSTAT |= 0x00;
  1753  000BAA  50C7               	movf	4039,w,c	;volatile
  1754                           
  1755                           ;slave2code.c: 273: SSPCON = 0x3E;
  1756  000BAC  0E3E               	movlw	62
  1757  000BAE  6EC6               	movwf	4038,c	;volatile
  1758                           
  1759                           ;slave2code.c: 274: SSPADD = 0x04;
  1760  000BB0  0E04               	movlw	4
  1761  000BB2  6EC8               	movwf	4040,c	;volatile
  1762  000BB4  0012               	return	
  1763  000BB6                     __end_of_init_I2C:
  1764                           	opt stack 0
  1765                           tblptru	equ	0xFF8
  1766                           tblptrh	equ	0xFF7
  1767                           tblptrl	equ	0xFF6
  1768                           tablat	equ	0xFF5
  1769                           prodh	equ	0xFF4
  1770                           prodl	equ	0xFF3
  1771                           intcon	equ	0xFF2
  1772                           postinc0	equ	0xFEE
  1773                           wreg	equ	0xFE8
  1774                           status	equ	0xFD8
  1775                           
  1776 ;; *************** function ___fttol *****************
  1777 ;; Defined at:
  1778 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  f1              3    3[BANK0 ] float 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  lval            4   13[BANK0 ] unsigned long 
  1783 ;;  exp1            1   17[BANK0 ] unsigned char 
  1784 ;;  sign1           1   12[BANK0 ] unsigned char 
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  4    3[BANK0 ] long 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, status,0
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1794 ;;      Params:         0       4       0       0
  1795 ;;      Locals:         0       6       0       0
  1796 ;;      Temps:          0       5       0       0
  1797 ;;      Totals:         0      15       0       0
  1798 ;;Total ram usage:       15 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; Hardware stack levels required when called:    1
  1801 ;; This function calls:
  1802 ;;		Nothing
  1803 ;; This function is called by:
  1804 ;;		_main
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           	psect	text11
  1809  00052A                     __ptext11:
  1810                           	opt stack 0
  1811  00052A                     ___fttol:
  1812                           	opt stack 29
  1813                           
  1814                           ;incstack = 0
  1815  00052A  0100               	movlb	0	; () banked
  1816  00052C  C065  F067         	movff	___fttol@f1+2,??___fttol
  1817  000530  0100               	movlb	0	; () banked
  1818  000532  6B68               	clrf	(??___fttol+1)& (0+255),b
  1819  000534  6B69               	clrf	(??___fttol+2)& (0+255),b
  1820  000536  0100               	movlb	0	; () banked
  1821  000538  3564               	rlcf	(___fttol@f1+1)& (0+255),w,b
  1822  00053A  0100               	movlb	0	; () banked
  1823  00053C  3767               	rlcf	??___fttol& (0+255),f,b
  1824  00053E  E301               	bnc	u1781
  1825  000540  8168               	bsf	(??___fttol+1)& (0+255),0,b
  1826  000542                     u1781:
  1827  000542  0100               	movlb	0	; () banked
  1828  000544  5167               	movf	??___fttol& (0+255),w,b
  1829  000546  0100               	movlb	0	; () banked
  1830  000548  6F71               	movwf	___fttol@exp1& (0+255),b
  1831  00054A  0100               	movlb	0	; () banked
  1832  00054C  6771               	tstfsz	___fttol@exp1& (0+255),b
  1833  00054E  D001               	goto	l1885
  1834  000550  D059               	goto	u1830
  1835  000552                     l1885:
  1836                           
  1837                           ; BSR set to: 0
  1838  000552  0E17               	movlw	23
  1839  000554  0100               	movlb	0	; () banked
  1840  000556  6F67               	movwf	??___fttol& (0+255),b
  1841  000558  0100               	movlb	0	; () banked
  1842  00055A  C063  F068         	movff	___fttol@f1,??___fttol+1
  1843  00055E  0100               	movlb	0	; () banked
  1844  000560  C064  F069         	movff	___fttol@f1+1,??___fttol+2
  1845  000564  0100               	movlb	0	; () banked
  1846  000566  C065  F06A         	movff	___fttol@f1+2,??___fttol+3
  1847  00056A  0100               	movlb	0	; () banked
  1848  00056C  2967               	incf	??___fttol& (0+255),w,b
  1849  00056E  0100               	movlb	0	; () banked
  1850  000570  6F6B               	movwf	(??___fttol+4)& (0+255),b
  1851  000572  D005               	goto	u1800
  1852  000574                     u1805:
  1853  000574  0100               	movlb	0	; () banked
  1854  000576  90D8               	bcf	status,0,c
  1855  000578  336A               	rrcf	(??___fttol+3)& (0+255),f,b
  1856  00057A  3369               	rrcf	(??___fttol+2)& (0+255),f,b
  1857  00057C  3368               	rrcf	(??___fttol+1)& (0+255),f,b
  1858  00057E                     u1800:
  1859  00057E  0100               	movlb	0	; () banked
  1860  000580  2F6B               	decfsz	(??___fttol+4)& (0+255),f,b
  1861  000582  D7F8               	goto	u1805
  1862  000584  0100               	movlb	0	; () banked
  1863  000586  5168               	movf	(??___fttol+1)& (0+255),w,b
  1864  000588  0100               	movlb	0	; () banked
  1865  00058A  6F6C               	movwf	___fttol@sign1& (0+255),b
  1866                           
  1867                           ; BSR set to: 0
  1868  00058C  0100               	movlb	0	; () banked
  1869  00058E  8F64               	bsf	(___fttol@f1+1)& (0+255),7,b
  1870                           
  1871                           ; BSR set to: 0
  1872  000590  0EFF               	movlw	255
  1873  000592  0100               	movlb	0	; () banked
  1874  000594  1763               	andwf	___fttol@f1& (0+255),f,b
  1875  000596  0EFF               	movlw	255
  1876  000598  0100               	movlb	0	; () banked
  1877  00059A  1764               	andwf	(___fttol@f1+1)& (0+255),f,b
  1878  00059C  0E00               	movlw	0
  1879  00059E  0100               	movlb	0	; () banked
  1880  0005A0  1765               	andwf	(___fttol@f1+2)& (0+255),f,b
  1881                           
  1882                           ; BSR set to: 0
  1883  0005A2  0100               	movlb	0	; () banked
  1884  0005A4  5163               	movf	___fttol@f1& (0+255),w,b
  1885  0005A6  0100               	movlb	0	; () banked
  1886  0005A8  6F6D               	movwf	___fttol@lval& (0+255),b
  1887  0005AA  0100               	movlb	0	; () banked
  1888  0005AC  5164               	movf	(___fttol@f1+1)& (0+255),w,b
  1889  0005AE  0100               	movlb	0	; () banked
  1890  0005B0  6F6E               	movwf	(___fttol@lval+1)& (0+255),b
  1891  0005B2  0100               	movlb	0	; () banked
  1892  0005B4  5165               	movf	(___fttol@f1+2)& (0+255),w,b
  1893  0005B6  0100               	movlb	0	; () banked
  1894  0005B8  6F6F               	movwf	(___fttol@lval+2)& (0+255),b
  1895  0005BA  0100               	movlb	0	; () banked
  1896  0005BC  6B70               	clrf	(___fttol@lval+3)& (0+255),b
  1897                           
  1898                           ; BSR set to: 0
  1899  0005BE  0E8E               	movlw	142
  1900  0005C0  0100               	movlb	0	; () banked
  1901  0005C2  5F71               	subwf	___fttol@exp1& (0+255),f,b
  1902                           
  1903                           ; BSR set to: 0
  1904  0005C4  0100               	movlb	0	; () banked
  1905  0005C6  AF71               	btfss	___fttol@exp1& (0+255),7,b
  1906  0005C8  D019               	goto	l1907
  1907                           
  1908                           ; BSR set to: 0
  1909  0005CA  0100               	movlb	0	; () banked
  1910  0005CC  5171               	movf	___fttol@exp1& (0+255),w,b
  1911  0005CE  0A80               	xorlw	128
  1912  0005D0  0100               	movlb	0	; () banked
  1913  0005D2  6F67               	movwf	??___fttol& (0+255),b
  1914  0005D4  0EF1               	movlw	241
  1915  0005D6  0A80               	xorlw	128
  1916  0005D8  0100               	movlb	0	; () banked
  1917  0005DA  5D67               	subwf	??___fttol& (0+255),w,b
  1918  0005DC  A0D8               	btfss	status,0,c
  1919  0005DE  D012               	goto	u1830
  1920  0005E0                     l1903:
  1921                           
  1922                           ; BSR set to: 0
  1923  0005E0  0100               	movlb	0	; () banked
  1924  0005E2  90D8               	bcf	status,0,c
  1925  0005E4  0100               	movlb	0	; () banked
  1926  0005E6  3370               	rrcf	(___fttol@lval+3)& (0+255),f,b
  1927  0005E8  0100               	movlb	0	; () banked
  1928  0005EA  336F               	rrcf	(___fttol@lval+2)& (0+255),f,b
  1929  0005EC  0100               	movlb	0	; () banked
  1930  0005EE  336E               	rrcf	(___fttol@lval+1)& (0+255),f,b
  1931  0005F0  0100               	movlb	0	; () banked
  1932  0005F2  336D               	rrcf	___fttol@lval& (0+255),f,b
  1933                           
  1934                           ; BSR set to: 0
  1935  0005F4  0100               	movlb	0	; () banked
  1936  0005F6  3F71               	incfsz	___fttol@exp1& (0+255),f,b
  1937  0005F8  D7F3               	goto	l1903
  1938  0005FA  D020               	goto	l1917
  1939  0005FC                     l1907:
  1940                           
  1941                           ; BSR set to: 0
  1942  0005FC  0E17               	movlw	23
  1943  0005FE  0100               	movlb	0	; () banked
  1944  000600  6571               	cpfsgt	___fttol@exp1& (0+255),b
  1945  000602  D019               	goto	l1915
  1946  000604                     u1830:
  1947                           
  1948                           ; BSR set to: 0
  1949  000604  0E00               	movlw	0
  1950  000606  0100               	movlb	0	; () banked
  1951  000608  6F63               	movwf	?___fttol& (0+255),b
  1952  00060A  0E00               	movlw	0
  1953  00060C  0100               	movlb	0	; () banked
  1954  00060E  6F64               	movwf	(?___fttol+1)& (0+255),b
  1955  000610  0E00               	movlw	0
  1956  000612  0100               	movlb	0	; () banked
  1957  000614  6F65               	movwf	(?___fttol+2)& (0+255),b
  1958  000616  0E00               	movlw	0
  1959  000618  0100               	movlb	0	; () banked
  1960  00061A  6F66               	movwf	(?___fttol+3)& (0+255),b
  1961  00061C  D02A               	goto	l614
  1962  00061E                     l1913:
  1963                           
  1964                           ; BSR set to: 0
  1965  00061E  0100               	movlb	0	; () banked
  1966  000620  90D8               	bcf	status,0,c
  1967  000622  0100               	movlb	0	; () banked
  1968  000624  376D               	rlcf	___fttol@lval& (0+255),f,b
  1969  000626  0100               	movlb	0	; () banked
  1970  000628  376E               	rlcf	(___fttol@lval+1)& (0+255),f,b
  1971  00062A  0100               	movlb	0	; () banked
  1972  00062C  376F               	rlcf	(___fttol@lval+2)& (0+255),f,b
  1973  00062E  0100               	movlb	0	; () banked
  1974  000630  3770               	rlcf	(___fttol@lval+3)& (0+255),f,b
  1975  000632  0100               	movlb	0	; () banked
  1976  000634  0771               	decf	___fttol@exp1& (0+255),f,b
  1977  000636                     l1915:
  1978                           
  1979                           ; BSR set to: 0
  1980  000636  0100               	movlb	0	; () banked
  1981  000638  6771               	tstfsz	___fttol@exp1& (0+255),b
  1982  00063A  D7F1               	goto	l1913
  1983  00063C                     l1917:
  1984                           
  1985                           ; BSR set to: 0
  1986  00063C  0100               	movlb	0	; () banked
  1987  00063E  516C               	movf	___fttol@sign1& (0+255),w,b
  1988  000640  B4D8               	btfsc	status,2,c
  1989  000642  D00F               	goto	l1921
  1990                           
  1991                           ; BSR set to: 0
  1992  000644  0100               	movlb	0	; () banked
  1993  000646  1F70               	comf	(___fttol@lval+3)& (0+255),f,b
  1994  000648  0100               	movlb	0	; () banked
  1995  00064A  1F6F               	comf	(___fttol@lval+2)& (0+255),f,b
  1996  00064C  0100               	movlb	0	; () banked
  1997  00064E  1F6E               	comf	(___fttol@lval+1)& (0+255),f,b
  1998  000650  0100               	movlb	0	; () banked
  1999  000652  6D6D               	negf	___fttol@lval& (0+255),b
  2000  000654  0E00               	movlw	0
  2001  000656  0100               	movlb	0	; () banked
  2002  000658  236E               	addwfc	(___fttol@lval+1)& (0+255),f,b
  2003  00065A  0100               	movlb	0	; () banked
  2004  00065C  236F               	addwfc	(___fttol@lval+2)& (0+255),f,b
  2005  00065E  0100               	movlb	0	; () banked
  2006  000660  2370               	addwfc	(___fttol@lval+3)& (0+255),f,b
  2007  000662                     l1921:
  2008                           
  2009                           ; BSR set to: 0
  2010  000662  C06D  F063         	movff	___fttol@lval,?___fttol
  2011  000666  C06E  F064         	movff	___fttol@lval+1,?___fttol+1
  2012  00066A  C06F  F065         	movff	___fttol@lval+2,?___fttol+2
  2013  00066E  C070  F066         	movff	___fttol@lval+3,?___fttol+3
  2014  000672                     l614:
  2015                           
  2016                           ; BSR set to: 0
  2017  000672  0012               	return	
  2018  000674                     __end_of___fttol:
  2019                           	opt stack 0
  2020                           tblptru	equ	0xFF8
  2021                           tblptrh	equ	0xFF7
  2022                           tblptrl	equ	0xFF6
  2023                           tablat	equ	0xFF5
  2024                           prodh	equ	0xFF4
  2025                           prodl	equ	0xFF3
  2026                           intcon	equ	0xFF2
  2027                           postinc0	equ	0xFEE
  2028                           wreg	equ	0xFE8
  2029                           status	equ	0xFD8
  2030                           
  2031 ;; *************** function ___ftmul *****************
  2032 ;; Defined at:
  2033 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  f1              3   31[COMRAM] float 
  2036 ;;  f2              3   34[COMRAM] float 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  f3_as_produc    3   41[COMRAM] unsigned um
  2039 ;;  sign            1   45[COMRAM] unsigned char 
  2040 ;;  cntr            1   44[COMRAM] unsigned char 
  2041 ;;  exp             1   40[COMRAM] unsigned char 
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  3   31[COMRAM] float 
  2044 ;; Registers used:
  2045 ;;		wreg, status,2, status,0, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2051 ;;      Params:         6       0       0       0
  2052 ;;      Locals:         6       0       0       0
  2053 ;;      Temps:          3       0       0       0
  2054 ;;      Totals:        15       0       0       0
  2055 ;;Total ram usage:       15 bytes
  2056 ;; Hardware stack levels used:    1
  2057 ;; Hardware stack levels required when called:    2
  2058 ;; This function calls:
  2059 ;;		___ftpack
  2060 ;; This function is called by:
  2061 ;;		_main
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	text12
  2066  000770                     __ptext12:
  2067                           	opt stack 0
  2068  000770                     ___ftmul:
  2069                           	opt stack 28
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;incstack = 0
  2073  000770  C022  F026         	movff	___ftmul@f1+2,??___ftmul
  2074  000774  6A27               	clrf	(??___ftmul+1)& (0+255),c
  2075  000776  6A28               	clrf	(??___ftmul+2)& (0+255),c
  2076  000778  3421               	rlcf	___ftmul@f1+1,w,c
  2077  00077A  3626               	rlcf	??___ftmul& (0+255),f,c
  2078  00077C  E301               	bnc	u1711
  2079  00077E  8027               	bsf	(??___ftmul+1)& (0+255),0,c
  2080  000780                     u1711:
  2081  000780  5026               	movf	??___ftmul,w,c
  2082  000782  6E29               	movwf	___ftmul@exp,c
  2083  000784  6629               	tstfsz	___ftmul@exp& (0+255),c
  2084  000786  D001               	goto	l1825
  2085  000788  D00C               	goto	u1740
  2086  00078A                     l1825:
  2087  00078A  C025  F026         	movff	___ftmul@f2+2,??___ftmul
  2088  00078E  6A27               	clrf	(??___ftmul+1)& (0+255),c
  2089  000790  6A28               	clrf	(??___ftmul+2)& (0+255),c
  2090  000792  3424               	rlcf	___ftmul@f2+1,w,c
  2091  000794  3626               	rlcf	??___ftmul& (0+255),f,c
  2092  000796  E301               	bnc	u1731
  2093  000798  8027               	bsf	(??___ftmul+1)& (0+255),0,c
  2094  00079A                     u1731:
  2095  00079A  5026               	movf	??___ftmul,w,c
  2096  00079C  6E2E               	movwf	___ftmul@sign,c
  2097  00079E  662E               	tstfsz	___ftmul@sign& (0+255),c
  2098  0007A0  D007               	goto	l1831
  2099  0007A2                     u1740:
  2100  0007A2  0E00               	movlw	0
  2101  0007A4  6E20               	movwf	?___ftmul,c
  2102  0007A6  0E00               	movlw	0
  2103  0007A8  6E21               	movwf	?___ftmul+1,c
  2104  0007AA  0E00               	movlw	0
  2105  0007AC  6E22               	movwf	?___ftmul+2,c
  2106  0007AE  D051               	goto	l594
  2107  0007B0                     l1831:
  2108  0007B0  502E               	movf	___ftmul@sign,w,c
  2109  0007B2  0F7B               	addlw	123
  2110  0007B4  2629               	addwf	___ftmul@exp,f,c
  2111  0007B6  C022  F02E         	movff	___ftmul@f1+2,___ftmul@sign
  2112  0007BA  5025               	movf	___ftmul@f2+2,w,c
  2113  0007BC  1A2E               	xorwf	___ftmul@sign,f,c
  2114  0007BE  0E80               	movlw	128
  2115  0007C0  162E               	andwf	___ftmul@sign,f,c
  2116  0007C2  8E21               	bsf	___ftmul@f1+1,7,c
  2117  0007C4  8E24               	bsf	___ftmul@f2+1,7,c
  2118  0007C6  0EFF               	movlw	255
  2119  0007C8  1623               	andwf	___ftmul@f2,f,c
  2120  0007CA  0EFF               	movlw	255
  2121  0007CC  1624               	andwf	___ftmul@f2+1,f,c
  2122  0007CE  0E00               	movlw	0
  2123  0007D0  1625               	andwf	___ftmul@f2+2,f,c
  2124  0007D2  0E00               	movlw	0
  2125  0007D4  6E2A               	movwf	___ftmul@f3_as_product,c
  2126  0007D6  0E00               	movlw	0
  2127  0007D8  6E2B               	movwf	___ftmul@f3_as_product+1,c
  2128  0007DA  0E00               	movlw	0
  2129  0007DC  6E2C               	movwf	___ftmul@f3_as_product+2,c
  2130  0007DE  0E07               	movlw	7
  2131  0007E0  6E2D               	movwf	___ftmul@cntr,c
  2132  0007E2                     l1845:
  2133  0007E2  A020               	btfss	___ftmul@f1,0,c
  2134  0007E4  D006               	goto	l1849
  2135  0007E6  5023               	movf	___ftmul@f2,w,c
  2136  0007E8  262A               	addwf	___ftmul@f3_as_product,f,c
  2137  0007EA  5024               	movf	___ftmul@f2+1,w,c
  2138  0007EC  222B               	addwfc	___ftmul@f3_as_product+1,f,c
  2139  0007EE  5025               	movf	___ftmul@f2+2,w,c
  2140  0007F0  222C               	addwfc	___ftmul@f3_as_product+2,f,c
  2141  0007F2                     l1849:
  2142  0007F2  90D8               	bcf	status,0,c
  2143  0007F4  3222               	rrcf	___ftmul@f1+2,f,c
  2144  0007F6  3221               	rrcf	___ftmul@f1+1,f,c
  2145  0007F8  3220               	rrcf	___ftmul@f1,f,c
  2146  0007FA  90D8               	bcf	status,0,c
  2147  0007FC  3623               	rlcf	___ftmul@f2,f,c
  2148  0007FE  3624               	rlcf	___ftmul@f2+1,f,c
  2149  000800  3625               	rlcf	___ftmul@f2+2,f,c
  2150  000802  2E2D               	decfsz	___ftmul@cntr,f,c
  2151  000804  D7EE               	goto	l1845
  2152  000806  0E09               	movlw	9
  2153  000808  6E2D               	movwf	___ftmul@cntr,c
  2154  00080A                     l1855:
  2155  00080A  A020               	btfss	___ftmul@f1,0,c
  2156  00080C  D006               	goto	l1859
  2157  00080E  5023               	movf	___ftmul@f2,w,c
  2158  000810  262A               	addwf	___ftmul@f3_as_product,f,c
  2159  000812  5024               	movf	___ftmul@f2+1,w,c
  2160  000814  222B               	addwfc	___ftmul@f3_as_product+1,f,c
  2161  000816  5025               	movf	___ftmul@f2+2,w,c
  2162  000818  222C               	addwfc	___ftmul@f3_as_product+2,f,c
  2163  00081A                     l1859:
  2164  00081A  90D8               	bcf	status,0,c
  2165  00081C  3222               	rrcf	___ftmul@f1+2,f,c
  2166  00081E  3221               	rrcf	___ftmul@f1+1,f,c
  2167  000820  3220               	rrcf	___ftmul@f1,f,c
  2168  000822  90D8               	bcf	status,0,c
  2169  000824  322C               	rrcf	___ftmul@f3_as_product+2,f,c
  2170  000826  322B               	rrcf	___ftmul@f3_as_product+1,f,c
  2171  000828  322A               	rrcf	___ftmul@f3_as_product,f,c
  2172  00082A  2E2D               	decfsz	___ftmul@cntr,f,c
  2173  00082C  D7EE               	goto	l1855
  2174  00082E  C02A  F014         	movff	___ftmul@f3_as_product,___ftpack@arg
  2175  000832  C02B  F015         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2176  000836  C02C  F016         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2177  00083A  C029  F017         	movff	___ftmul@exp,___ftpack@exp
  2178  00083E  C02E  F018         	movff	___ftmul@sign,___ftpack@sign
  2179  000842  EC86  F004         	call	___ftpack	;wreg free
  2180  000846  C014  F020         	movff	?___ftpack,?___ftmul
  2181  00084A  C015  F021         	movff	?___ftpack+1,?___ftmul+1
  2182  00084E  C016  F022         	movff	?___ftpack+2,?___ftmul+2
  2183  000852                     l594:
  2184  000852  0012               	return	
  2185  000854                     __end_of___ftmul:
  2186                           	opt stack 0
  2187                           tblptru	equ	0xFF8
  2188                           tblptrh	equ	0xFF7
  2189                           tblptrl	equ	0xFF6
  2190                           tablat	equ	0xFF5
  2191                           prodh	equ	0xFF4
  2192                           prodl	equ	0xFF3
  2193                           intcon	equ	0xFF2
  2194                           postinc0	equ	0xFEE
  2195                           wreg	equ	0xFE8
  2196                           status	equ	0xFD8
  2197                           
  2198 ;; *************** function ___ftadd *****************
  2199 ;; Defined at:
  2200 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  f1              3   46[COMRAM] float 
  2203 ;;  f2              3   49[COMRAM] float 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;  exp1            1    2[BANK0 ] unsigned char 
  2206 ;;  exp2            1    1[BANK0 ] unsigned char 
  2207 ;;  sign            1    0[BANK0 ] unsigned char 
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  3   46[COMRAM] float 
  2210 ;; Registers used:
  2211 ;;		wreg, status,2, status,0, cstack
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2217 ;;      Params:         6       0       0       0
  2218 ;;      Locals:         0       3       0       0
  2219 ;;      Temps:          3       0       0       0
  2220 ;;      Totals:         9       3       0       0
  2221 ;;Total ram usage:       12 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; Hardware stack levels required when called:    2
  2224 ;; This function calls:
  2225 ;;		___ftpack
  2226 ;; This function is called by:
  2227 ;;		_main
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           	psect	text13
  2232  000188                     __ptext13:
  2233                           	opt stack 0
  2234  000188                     ___ftadd:
  2235                           	opt stack 28
  2236                           
  2237                           ;incstack = 0
  2238  000188  C031  F035         	movff	___ftadd@f1+2,??___ftadd
  2239  00018C  6A36               	clrf	(??___ftadd+1)& (0+255),c
  2240  00018E  6A37               	clrf	(??___ftadd+2)& (0+255),c
  2241  000190  3430               	rlcf	___ftadd@f1+1,w,c
  2242  000192  3635               	rlcf	??___ftadd& (0+255),f,c
  2243  000194  E301               	bnc	u1501
  2244  000196  8036               	bsf	(??___ftadd+1)& (0+255),0,c
  2245  000198                     u1501:
  2246  000198  5035               	movf	??___ftadd,w,c
  2247  00019A  0100               	movlb	0	; () banked
  2248  00019C  6F62               	movwf	___ftadd@exp1& (0+255),b
  2249  00019E  C034  F035         	movff	___ftadd@f2+2,??___ftadd
  2250  0001A2  6A36               	clrf	(??___ftadd+1)& (0+255),c
  2251  0001A4  6A37               	clrf	(??___ftadd+2)& (0+255),c
  2252  0001A6  3433               	rlcf	___ftadd@f2+1,w,c
  2253  0001A8  3635               	rlcf	??___ftadd& (0+255),f,c
  2254  0001AA  E301               	bnc	u1511
  2255  0001AC  8036               	bsf	(??___ftadd+1)& (0+255),0,c
  2256  0001AE                     u1511:
  2257  0001AE  5035               	movf	??___ftadd,w,c
  2258  0001B0  0100               	movlb	0	; () banked
  2259  0001B2  6F61               	movwf	___ftadd@exp2& (0+255),b
  2260                           
  2261                           ; BSR set to: 0
  2262  0001B4  0100               	movlb	0	; () banked
  2263  0001B6  5162               	movf	___ftadd@exp1& (0+255),w,b
  2264  0001B8  B4D8               	btfsc	status,2,c
  2265  0001BA  D010               	goto	l547
  2266                           
  2267                           ; BSR set to: 0
  2268  0001BC  0100               	movlb	0	; () banked
  2269  0001BE  5161               	movf	___ftadd@exp2& (0+255),w,b
  2270  0001C0  0100               	movlb	0	; () banked
  2271  0001C2  5D62               	subwf	___ftadd@exp1& (0+255),w,b
  2272  0001C4  B0D8               	btfsc	status,0,c
  2273  0001C6  D011               	goto	l1757
  2274                           
  2275                           ; BSR set to: 0
  2276  0001C8  0100               	movlb	0	; () banked
  2277  0001CA  5162               	movf	___ftadd@exp1& (0+255),w,b
  2278  0001CC  0800               	sublw	0
  2279  0001CE  0100               	movlb	0	; () banked
  2280  0001D0  2561               	addwf	___ftadd@exp2& (0+255),w,b
  2281  0001D2  6E35               	movwf	??___ftadd& (0+255),c
  2282  0001D4  0E19               	movlw	25
  2283  0001D6  5C35               	subwf	??___ftadd,w,c
  2284  0001D8  A0D8               	btfss	status,0,c
  2285  0001DA  D007               	goto	l1757
  2286  0001DC                     l547:
  2287                           
  2288                           ; BSR set to: 0
  2289  0001DC  C032  F02F         	movff	___ftadd@f2,?___ftadd
  2290  0001E0  C033  F030         	movff	___ftadd@f2+1,?___ftadd+1
  2291  0001E4  C034  F031         	movff	___ftadd@f2+2,?___ftadd+2
  2292  0001E8  D0CB               	goto	l548
  2293  0001EA                     l1757:
  2294                           
  2295                           ; BSR set to: 0
  2296  0001EA  0100               	movlb	0	; () banked
  2297  0001EC  5161               	movf	___ftadd@exp2& (0+255),w,b
  2298  0001EE  B4D8               	btfsc	status,2,c
  2299  0001F0  D010               	goto	l551
  2300                           
  2301                           ; BSR set to: 0
  2302  0001F2  0100               	movlb	0	; () banked
  2303  0001F4  5162               	movf	___ftadd@exp1& (0+255),w,b
  2304  0001F6  0100               	movlb	0	; () banked
  2305  0001F8  5D61               	subwf	___ftadd@exp2& (0+255),w,b
  2306  0001FA  B0D8               	btfsc	status,0,c
  2307  0001FC  D011               	goto	l1763
  2308                           
  2309                           ; BSR set to: 0
  2310  0001FE  0100               	movlb	0	; () banked
  2311  000200  5161               	movf	___ftadd@exp2& (0+255),w,b
  2312  000202  0800               	sublw	0
  2313  000204  0100               	movlb	0	; () banked
  2314  000206  2562               	addwf	___ftadd@exp1& (0+255),w,b
  2315  000208  6E35               	movwf	??___ftadd& (0+255),c
  2316  00020A  0E19               	movlw	25
  2317  00020C  5C35               	subwf	??___ftadd,w,c
  2318  00020E  A0D8               	btfss	status,0,c
  2319  000210  D007               	goto	l1763
  2320  000212                     l551:
  2321                           
  2322                           ; BSR set to: 0
  2323  000212  C02F  F02F         	movff	___ftadd@f1,?___ftadd
  2324  000216  C030  F030         	movff	___ftadd@f1+1,?___ftadd+1
  2325  00021A  C031  F031         	movff	___ftadd@f1+2,?___ftadd+2
  2326  00021E  D0B0               	goto	l548
  2327  000220                     l1763:
  2328                           
  2329                           ; BSR set to: 0
  2330  000220  0E06               	movlw	6
  2331  000222  0100               	movlb	0	; () banked
  2332  000224  6F60               	movwf	___ftadd@sign& (0+255),b
  2333                           
  2334                           ; BSR set to: 0
  2335  000226  AE31               	btfss	___ftadd@f1+2,7,c
  2336  000228  D002               	goto	l1769
  2337                           
  2338                           ; BSR set to: 0
  2339  00022A  0100               	movlb	0	; () banked
  2340  00022C  8F60               	bsf	___ftadd@sign& (0+255),7,b
  2341  00022E                     l1769:
  2342                           
  2343                           ; BSR set to: 0
  2344  00022E  AE34               	btfss	___ftadd@f2+2,7,c
  2345  000230  D002               	goto	l553
  2346                           
  2347                           ; BSR set to: 0
  2348  000232  0100               	movlb	0	; () banked
  2349  000234  8D60               	bsf	___ftadd@sign& (0+255),6,b
  2350  000236                     l553:
  2351                           
  2352                           ; BSR set to: 0
  2353  000236  8E30               	bsf	___ftadd@f1+1,7,c
  2354                           
  2355                           ; BSR set to: 0
  2356  000238  0EFF               	movlw	255
  2357  00023A  162F               	andwf	___ftadd@f1,f,c
  2358  00023C  0EFF               	movlw	255
  2359  00023E  1630               	andwf	___ftadd@f1+1,f,c
  2360  000240  0E00               	movlw	0
  2361  000242  1631               	andwf	___ftadd@f1+2,f,c
  2362  000244  8E33               	bsf	___ftadd@f2+1,7,c
  2363                           
  2364                           ; BSR set to: 0
  2365  000246  0EFF               	movlw	255
  2366  000248  1632               	andwf	___ftadd@f2,f,c
  2367  00024A  0EFF               	movlw	255
  2368  00024C  1633               	andwf	___ftadd@f2+1,f,c
  2369  00024E  0E00               	movlw	0
  2370  000250  1634               	andwf	___ftadd@f2+2,f,c
  2371                           
  2372                           ; BSR set to: 0
  2373  000252  0100               	movlb	0	; () banked
  2374  000254  5161               	movf	___ftadd@exp2& (0+255),w,b
  2375  000256  0100               	movlb	0	; () banked
  2376  000258  5D62               	subwf	___ftadd@exp1& (0+255),w,b
  2377  00025A  B0D8               	btfsc	status,0,c
  2378  00025C  D021               	goto	l1789
  2379  00025E                     l1779:
  2380                           
  2381                           ; BSR set to: 0
  2382  00025E  90D8               	bcf	status,0,c
  2383  000260  3632               	rlcf	___ftadd@f2,f,c
  2384  000262  3633               	rlcf	___ftadd@f2+1,f,c
  2385  000264  3634               	rlcf	___ftadd@f2+2,f,c
  2386  000266  0100               	movlb	0	; () banked
  2387  000268  0761               	decf	___ftadd@exp2& (0+255),f,b
  2388                           
  2389                           ; BSR set to: 0
  2390  00026A  0100               	movlb	0	; () banked
  2391  00026C  5161               	movf	___ftadd@exp2& (0+255),w,b
  2392  00026E  0100               	movlb	0	; () banked
  2393  000270  1962               	xorwf	___ftadd@exp1& (0+255),w,b
  2394  000272  B4D8               	btfsc	status,2,c
  2395  000274  D00F               	goto	l1787
  2396                           
  2397                           ; BSR set to: 0
  2398  000276  0100               	movlb	0	; () banked
  2399  000278  0760               	decf	___ftadd@sign& (0+255),f,b
  2400  00027A  C060  F035         	movff	___ftadd@sign,??___ftadd
  2401  00027E  0E07               	movlw	7
  2402  000280  1635               	andwf	??___ftadd,f,c
  2403  000282  B4D8               	btfsc	status,2,c
  2404  000284  D007               	goto	l1787
  2405  000286  D7EB               	goto	l1779
  2406  000288                     l1785:
  2407                           
  2408                           ; BSR set to: 0
  2409  000288  90D8               	bcf	status,0,c
  2410  00028A  3231               	rrcf	___ftadd@f1+2,f,c
  2411  00028C  3230               	rrcf	___ftadd@f1+1,f,c
  2412  00028E  322F               	rrcf	___ftadd@f1,f,c
  2413  000290  0100               	movlb	0	; () banked
  2414  000292  2B62               	incf	___ftadd@exp1& (0+255),f,b
  2415  000294                     l1787:
  2416                           
  2417                           ; BSR set to: 0
  2418  000294  0100               	movlb	0	; () banked
  2419  000296  5161               	movf	___ftadd@exp2& (0+255),w,b
  2420  000298  0100               	movlb	0	; () banked
  2421  00029A  6362               	cpfseq	___ftadd@exp1& (0+255),b
  2422  00029C  D7F5               	goto	l1785
  2423  00029E  D026               	goto	l562
  2424  0002A0                     l1789:
  2425                           
  2426                           ; BSR set to: 0
  2427  0002A0  0100               	movlb	0	; () banked
  2428  0002A2  5162               	movf	___ftadd@exp1& (0+255),w,b
  2429  0002A4  0100               	movlb	0	; () banked
  2430  0002A6  5D61               	subwf	___ftadd@exp2& (0+255),w,b
  2431  0002A8  B0D8               	btfsc	status,0,c
  2432  0002AA  D020               	goto	l562
  2433  0002AC                     l1791:
  2434                           
  2435                           ; BSR set to: 0
  2436  0002AC  90D8               	bcf	status,0,c
  2437  0002AE  362F               	rlcf	___ftadd@f1,f,c
  2438  0002B0  3630               	rlcf	___ftadd@f1+1,f,c
  2439  0002B2  3631               	rlcf	___ftadd@f1+2,f,c
  2440  0002B4  0100               	movlb	0	; () banked
  2441  0002B6  0762               	decf	___ftadd@exp1& (0+255),f,b
  2442                           
  2443                           ; BSR set to: 0
  2444  0002B8  0100               	movlb	0	; () banked
  2445  0002BA  5161               	movf	___ftadd@exp2& (0+255),w,b
  2446  0002BC  0100               	movlb	0	; () banked
  2447  0002BE  1962               	xorwf	___ftadd@exp1& (0+255),w,b
  2448  0002C0  B4D8               	btfsc	status,2,c
  2449  0002C2  D00F               	goto	l1799
  2450                           
  2451                           ; BSR set to: 0
  2452  0002C4  0100               	movlb	0	; () banked
  2453  0002C6  0760               	decf	___ftadd@sign& (0+255),f,b
  2454  0002C8  C060  F035         	movff	___ftadd@sign,??___ftadd
  2455  0002CC  0E07               	movlw	7
  2456  0002CE  1635               	andwf	??___ftadd,f,c
  2457  0002D0  B4D8               	btfsc	status,2,c
  2458  0002D2  D007               	goto	l1799
  2459  0002D4  D7EB               	goto	l1791
  2460  0002D6                     l1797:
  2461                           
  2462                           ; BSR set to: 0
  2463  0002D6  90D8               	bcf	status,0,c
  2464  0002D8  3234               	rrcf	___ftadd@f2+2,f,c
  2465  0002DA  3233               	rrcf	___ftadd@f2+1,f,c
  2466  0002DC  3232               	rrcf	___ftadd@f2,f,c
  2467  0002DE  0100               	movlb	0	; () banked
  2468  0002E0  2B61               	incf	___ftadd@exp2& (0+255),f,b
  2469  0002E2                     l1799:
  2470                           
  2471                           ; BSR set to: 0
  2472  0002E2  0100               	movlb	0	; () banked
  2473  0002E4  5161               	movf	___ftadd@exp2& (0+255),w,b
  2474  0002E6  0100               	movlb	0	; () banked
  2475  0002E8  6362               	cpfseq	___ftadd@exp1& (0+255),b
  2476  0002EA  D7F5               	goto	l1797
  2477  0002EC                     l562:
  2478                           
  2479                           ; BSR set to: 0
  2480  0002EC  0100               	movlb	0	; () banked
  2481  0002EE  AF60               	btfss	___ftadd@sign& (0+255),7,b
  2482  0002F0  D00C               	goto	l571
  2483                           
  2484                           ; BSR set to: 0
  2485  0002F2  0EFF               	movlw	255
  2486  0002F4  1A2F               	xorwf	___ftadd@f1,f,c
  2487  0002F6  0EFF               	movlw	255
  2488  0002F8  1A30               	xorwf	___ftadd@f1+1,f,c
  2489  0002FA  0EFF               	movlw	255
  2490  0002FC  1A31               	xorwf	___ftadd@f1+2,f,c
  2491  0002FE  0E01               	movlw	1
  2492  000300  262F               	addwf	___ftadd@f1,f,c
  2493  000302  0E00               	movlw	0
  2494  000304  2230               	addwfc	___ftadd@f1+1,f,c
  2495  000306  0E00               	movlw	0
  2496  000308  2231               	addwfc	___ftadd@f1+2,f,c
  2497  00030A                     l571:
  2498                           
  2499                           ; BSR set to: 0
  2500  00030A  0100               	movlb	0	; () banked
  2501  00030C  AD60               	btfss	___ftadd@sign& (0+255),6,b
  2502  00030E  D00C               	goto	l1805
  2503                           
  2504                           ; BSR set to: 0
  2505  000310  0EFF               	movlw	255
  2506  000312  1A32               	xorwf	___ftadd@f2,f,c
  2507  000314  0EFF               	movlw	255
  2508  000316  1A33               	xorwf	___ftadd@f2+1,f,c
  2509  000318  0EFF               	movlw	255
  2510  00031A  1A34               	xorwf	___ftadd@f2+2,f,c
  2511  00031C  0E01               	movlw	1
  2512  00031E  2632               	addwf	___ftadd@f2,f,c
  2513  000320  0E00               	movlw	0
  2514  000322  2233               	addwfc	___ftadd@f2+1,f,c
  2515  000324  0E00               	movlw	0
  2516  000326  2234               	addwfc	___ftadd@f2+2,f,c
  2517  000328                     l1805:
  2518                           
  2519                           ; BSR set to: 0
  2520  000328  0E00               	movlw	0
  2521  00032A  0100               	movlb	0	; () banked
  2522  00032C  6F60               	movwf	___ftadd@sign& (0+255),b
  2523                           
  2524                           ; BSR set to: 0
  2525  00032E  502F               	movf	___ftadd@f1,w,c
  2526  000330  2632               	addwf	___ftadd@f2,f,c
  2527  000332  5030               	movf	___ftadd@f1+1,w,c
  2528  000334  2233               	addwfc	___ftadd@f2+1,f,c
  2529  000336  5031               	movf	___ftadd@f1+2,w,c
  2530  000338  2234               	addwfc	___ftadd@f2+2,f,c
  2531                           
  2532                           ; BSR set to: 0
  2533  00033A  AE34               	btfss	___ftadd@f2+2,7,c
  2534  00033C  D00F               	goto	l1815
  2535                           
  2536                           ; BSR set to: 0
  2537  00033E  0EFF               	movlw	255
  2538  000340  1A32               	xorwf	___ftadd@f2,f,c
  2539  000342  0EFF               	movlw	255
  2540  000344  1A33               	xorwf	___ftadd@f2+1,f,c
  2541  000346  0EFF               	movlw	255
  2542  000348  1A34               	xorwf	___ftadd@f2+2,f,c
  2543  00034A  0E01               	movlw	1
  2544  00034C  2632               	addwf	___ftadd@f2,f,c
  2545  00034E  0E00               	movlw	0
  2546  000350  2233               	addwfc	___ftadd@f2+1,f,c
  2547  000352  0E00               	movlw	0
  2548  000354  2234               	addwfc	___ftadd@f2+2,f,c
  2549                           
  2550                           ; BSR set to: 0
  2551  000356  0E01               	movlw	1
  2552  000358  0100               	movlb	0	; () banked
  2553  00035A  6F60               	movwf	___ftadd@sign& (0+255),b
  2554  00035C                     l1815:
  2555                           
  2556                           ; BSR set to: 0
  2557  00035C  C032  F014         	movff	___ftadd@f2,___ftpack@arg
  2558  000360  C033  F015         	movff	___ftadd@f2+1,___ftpack@arg+1
  2559  000364  C034  F016         	movff	___ftadd@f2+2,___ftpack@arg+2
  2560  000368  C062  F017         	movff	___ftadd@exp1,___ftpack@exp
  2561  00036C  C060  F018         	movff	___ftadd@sign,___ftpack@sign
  2562  000370  EC86  F004         	call	___ftpack	;wreg free
  2563  000374  C014  F02F         	movff	?___ftpack,?___ftadd
  2564  000378  C015  F030         	movff	?___ftpack+1,?___ftadd+1
  2565  00037C  C016  F031         	movff	?___ftpack+2,?___ftadd+2
  2566  000380                     l548:
  2567  000380  0012               	return	
  2568  000382                     __end_of___ftadd:
  2569                           	opt stack 0
  2570                           tblptru	equ	0xFF8
  2571                           tblptrh	equ	0xFF7
  2572                           tblptrl	equ	0xFF6
  2573                           tablat	equ	0xFF5
  2574                           prodh	equ	0xFF4
  2575                           prodl	equ	0xFF3
  2576                           intcon	equ	0xFF2
  2577                           postinc0	equ	0xFEE
  2578                           wreg	equ	0xFE8
  2579                           status	equ	0xFD8
  2580                           
  2581 ;; *************** function ___awtoft *****************
  2582 ;; Defined at:
  2583 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  c               2   27[COMRAM] int 
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;  sign            1   30[COMRAM] unsigned char 
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  3   27[COMRAM] float 
  2590 ;; Registers used:
  2591 ;;		wreg, status,2, status,0, prodl, cstack
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2597 ;;      Params:         3       0       0       0
  2598 ;;      Locals:         1       0       0       0
  2599 ;;      Temps:          0       0       0       0
  2600 ;;      Totals:         4       0       0       0
  2601 ;;Total ram usage:        4 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; Hardware stack levels required when called:    2
  2604 ;; This function calls:
  2605 ;;		___ftpack
  2606 ;; This function is called by:
  2607 ;;		_main
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           	psect	text14
  2612  000AA6                     __ptext14:
  2613                           	opt stack 0
  2614  000AA6                     ___awtoft:
  2615                           	opt stack 28
  2616                           
  2617                           ;incstack = 0
  2618  000AA6  0E00               	movlw	0
  2619  000AA8  6E1F               	movwf	___awtoft@sign,c
  2620  000AAA  501D               	movf	___awtoft@c+1,w,c
  2621  000AAC  0A80               	xorlw	128
  2622  000AAE  6EF3               	movwf	prodl,c
  2623  000AB0  0E80               	movlw	128
  2624  000AB2  5CF3               	subwf	prodl,w,c
  2625  000AB4  0E00               	movlw	0
  2626  000AB6  B4D8               	btfsc	status,2,c
  2627  000AB8  5C1C               	subwf	___awtoft@c,w,c
  2628  000ABA  B0D8               	btfsc	status,0,c
  2629  000ABC  D006               	goto	l1875
  2630  000ABE  6C1C               	negf	___awtoft@c,c
  2631  000AC0  1E1D               	comf	___awtoft@c+1,f,c
  2632  000AC2  B0D8               	btfsc	status,0,c
  2633  000AC4  2A1D               	incf	___awtoft@c+1,f,c
  2634  000AC6  0E01               	movlw	1
  2635  000AC8  6E1F               	movwf	___awtoft@sign,c
  2636  000ACA                     l1875:
  2637  000ACA  C01C  F014         	movff	___awtoft@c,___ftpack@arg
  2638  000ACE  C01D  F015         	movff	___awtoft@c+1,___ftpack@arg+1
  2639  000AD2  6A16               	clrf	___ftpack@arg+2,c
  2640  000AD4  0E8E               	movlw	142
  2641  000AD6  6E17               	movwf	___ftpack@exp,c
  2642  000AD8  C01F  F018         	movff	___awtoft@sign,___ftpack@sign
  2643  000ADC  EC86  F004         	call	___ftpack	;wreg free
  2644  000AE0  C014  F01C         	movff	?___ftpack,?___awtoft
  2645  000AE4  C015  F01D         	movff	?___ftpack+1,?___awtoft+1
  2646  000AE8  C016  F01E         	movff	?___ftpack+2,?___awtoft+2
  2647  000AEC  0012               	return	
  2648  000AEE                     __end_of___awtoft:
  2649                           	opt stack 0
  2650                           tblptru	equ	0xFF8
  2651                           tblptrh	equ	0xFF7
  2652                           tblptrl	equ	0xFF6
  2653                           tablat	equ	0xFF5
  2654                           prodh	equ	0xFF4
  2655                           prodl	equ	0xFF3
  2656                           intcon	equ	0xFF2
  2657                           postinc0	equ	0xFEE
  2658                           wreg	equ	0xFE8
  2659                           status	equ	0xFD8
  2660                           
  2661 ;; *************** function ___ftpack *****************
  2662 ;; Defined at:
  2663 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;  arg             3   19[COMRAM] unsigned um
  2666 ;;  exp             1   22[COMRAM] unsigned char 
  2667 ;;  sign            1   23[COMRAM] unsigned char 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;		None
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  3   19[COMRAM] float 
  2672 ;; Registers used:
  2673 ;;		wreg, status,2, status,0
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2679 ;;      Params:         5       0       0       0
  2680 ;;      Locals:         0       0       0       0
  2681 ;;      Temps:          3       0       0       0
  2682 ;;      Totals:         8       0       0       0
  2683 ;;Total ram usage:        8 bytes
  2684 ;; Hardware stack levels used:    1
  2685 ;; Hardware stack levels required when called:    1
  2686 ;; This function calls:
  2687 ;;		Nothing
  2688 ;; This function is called by:
  2689 ;;		___awtoft
  2690 ;;		___ftadd
  2691 ;;		___ftmul
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text15
  2696  00090C                     __ptext15:
  2697                           	opt stack 0
  2698  00090C                     ___ftpack:
  2699                           	opt stack 28
  2700                           
  2701                           ;incstack = 0
  2702  00090C  5017               	movf	___ftpack@exp,w,c
  2703  00090E  B4D8               	btfsc	status,2,c
  2704  000910  D005               	goto	l1719
  2705  000912  5014               	movf	___ftpack@arg,w,c
  2706  000914  1015               	iorwf	___ftpack@arg+1,w,c
  2707  000916  1016               	iorwf	___ftpack@arg+2,w,c
  2708  000918  A4D8               	btfss	status,2,c
  2709  00091A  D00C               	goto	l1725
  2710  00091C                     l1719:
  2711  00091C  0E00               	movlw	0
  2712  00091E  6E14               	movwf	?___ftpack,c
  2713  000920  0E00               	movlw	0
  2714  000922  6E15               	movwf	?___ftpack+1,c
  2715  000924  0E00               	movlw	0
  2716  000926  6E16               	movwf	?___ftpack+2,c
  2717  000928  D044               	goto	l510
  2718  00092A                     l1723:
  2719  00092A  2A17               	incf	___ftpack@exp,f,c
  2720  00092C  90D8               	bcf	status,0,c
  2721  00092E  3216               	rrcf	___ftpack@arg+2,f,c
  2722  000930  3215               	rrcf	___ftpack@arg+1,f,c
  2723  000932  3214               	rrcf	___ftpack@arg,f,c
  2724  000934                     l1725:
  2725  000934  0E00               	movlw	0
  2726  000936  1414               	andwf	___ftpack@arg,w,c
  2727  000938  6E19               	movwf	??___ftpack& (0+255),c
  2728  00093A  0E00               	movlw	0
  2729  00093C  1415               	andwf	___ftpack@arg+1,w,c
  2730  00093E  6E1A               	movwf	(??___ftpack+1)& (0+255),c
  2731  000940  0EFE               	movlw	254
  2732  000942  1416               	andwf	___ftpack@arg+2,w,c
  2733  000944  6E1B               	movwf	(??___ftpack+2)& (0+255),c
  2734  000946  5019               	movf	??___ftpack,w,c
  2735  000948  101A               	iorwf	??___ftpack+1,w,c
  2736  00094A  101B               	iorwf	??___ftpack+2,w,c
  2737  00094C  B4D8               	btfsc	status,2,c
  2738  00094E  D00C               	goto	l1731
  2739  000950  D7EC               	goto	l1723
  2740  000952                     l1727:
  2741  000952  2A17               	incf	___ftpack@exp,f,c
  2742  000954  0E01               	movlw	1
  2743  000956  2614               	addwf	___ftpack@arg,f,c
  2744  000958  0E00               	movlw	0
  2745  00095A  2215               	addwfc	___ftpack@arg+1,f,c
  2746  00095C  0E00               	movlw	0
  2747  00095E  2216               	addwfc	___ftpack@arg+2,f,c
  2748  000960  90D8               	bcf	status,0,c
  2749  000962  3216               	rrcf	___ftpack@arg+2,f,c
  2750  000964  3215               	rrcf	___ftpack@arg+1,f,c
  2751  000966  3214               	rrcf	___ftpack@arg,f,c
  2752  000968                     l1731:
  2753  000968  0E00               	movlw	0
  2754  00096A  1414               	andwf	___ftpack@arg,w,c
  2755  00096C  6E19               	movwf	??___ftpack& (0+255),c
  2756  00096E  0E00               	movlw	0
  2757  000970  1415               	andwf	___ftpack@arg+1,w,c
  2758  000972  6E1A               	movwf	(??___ftpack+1)& (0+255),c
  2759  000974  0EFF               	movlw	255
  2760  000976  1416               	andwf	___ftpack@arg+2,w,c
  2761  000978  6E1B               	movwf	(??___ftpack+2)& (0+255),c
  2762  00097A  5019               	movf	??___ftpack,w,c
  2763  00097C  101A               	iorwf	??___ftpack+1,w,c
  2764  00097E  101B               	iorwf	??___ftpack+2,w,c
  2765  000980  B4D8               	btfsc	status,2,c
  2766  000982  D006               	goto	l1735
  2767  000984  D7E6               	goto	l1727
  2768  000986                     l1733:
  2769  000986  0617               	decf	___ftpack@exp,f,c
  2770  000988  90D8               	bcf	status,0,c
  2771  00098A  3614               	rlcf	___ftpack@arg,f,c
  2772  00098C  3615               	rlcf	___ftpack@arg+1,f,c
  2773  00098E  3616               	rlcf	___ftpack@arg+2,f,c
  2774  000990                     l1735:
  2775  000990  AE15               	btfss	___ftpack@arg+1,7,c
  2776  000992  D7F9               	goto	l1733
  2777  000994  A017               	btfss	___ftpack@exp,0,c
  2778  000996  9E15               	bcf	___ftpack@arg+1,7,c
  2779  000998  90D8               	bcf	status,0,c
  2780  00099A  3217               	rrcf	___ftpack@exp,f,c
  2781  00099C  5017               	movf	___ftpack@exp,w,c
  2782  00099E  1216               	iorwf	___ftpack@arg+2,f,c
  2783  0009A0  5018               	movf	___ftpack@sign,w,c
  2784  0009A2  A4D8               	btfss	status,2,c
  2785  0009A4  8E16               	bsf	___ftpack@arg+2,7,c
  2786  0009A6  C014  F014         	movff	___ftpack@arg,?___ftpack
  2787  0009AA  C015  F015         	movff	___ftpack@arg+1,?___ftpack+1
  2788  0009AE  C016  F016         	movff	___ftpack@arg+2,?___ftpack+2
  2789  0009B2                     l510:
  2790  0009B2  0012               	return	
  2791  0009B4                     __end_of___ftpack:
  2792                           	opt stack 0
  2793                           tblptru	equ	0xFF8
  2794                           tblptrh	equ	0xFF7
  2795                           tblptrl	equ	0xFF6
  2796                           tablat	equ	0xFF5
  2797                           prodh	equ	0xFF4
  2798                           prodl	equ	0xFF3
  2799                           intcon	equ	0xFF2
  2800                           postinc0	equ	0xFEE
  2801                           wreg	equ	0xFE8
  2802                           status	equ	0xFD8
  2803                           
  2804 ;; *************** function _isr *****************
  2805 ;; Defined at:
  2806 ;;		line 90 in file "slave2code.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;		None
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;  c               1   17[COMRAM] unsigned char 
  2811 ;;  temp            1   18[COMRAM] unsigned char 
  2812 ;;  address         1   16[COMRAM] unsigned char 
  2813 ;;  data            1    0        unsigned char 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;		None               void
  2816 ;; Registers used:
  2817 ;;		wreg, status,2, status,0
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2823 ;;      Params:         0       0       0       0
  2824 ;;      Locals:         3       0       0       0
  2825 ;;      Temps:         16       0       0       0
  2826 ;;      Totals:        19       0       0       0
  2827 ;;Total ram usage:       19 bytes
  2828 ;; Hardware stack levels used:    1
  2829 ;; This function calls:
  2830 ;;		Nothing
  2831 ;; This function is called by:
  2832 ;;		Interrupt level 2
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           	psect	intcode
  2837  000008                     __pintcode:
  2838                           	opt stack 0
  2839  000008                     _isr:
  2840                           	opt stack 28
  2841                           
  2842                           ;incstack = 0
  2843  000008  CFFA F003          	movff	pclath,??_isr+2
  2844  00000C  CFFB F004          	movff	pclatu,??_isr+3
  2845  000010  CFE9 F005          	movff	fsr0l,??_isr+4
  2846  000014  CFEA F006          	movff	fsr0h,??_isr+5
  2847  000018  CFE1 F007          	movff	fsr1l,??_isr+6
  2848  00001C  CFE2 F008          	movff	fsr1h,??_isr+7
  2849  000020  CFD9 F009          	movff	fsr2l,??_isr+8
  2850  000024  CFDA F00A          	movff	fsr2h,??_isr+9
  2851  000028  CFF3 F00B          	movff	prodl,??_isr+10
  2852  00002C  CFF4 F00C          	movff	prodh,??_isr+11
  2853  000030  CFF6 F00D          	movff	tblptrl,??_isr+12
  2854  000034  CFF7 F00E          	movff	tblptrh,??_isr+13
  2855  000038  CFF8 F00F          	movff	tblptru,??_isr+14
  2856  00003C  CFF5 F010          	movff	tablat,??_isr+15
  2857                           
  2858                           ;slave2code.c: 92: if(PIR1bits.SSPIF==1)
  2859  000040  A69E               	btfss	3998,3,c	;volatile
  2860  000042  D052               	goto	i2l145
  2861                           
  2862                           ;slave2code.c: 93: {
  2863                           ;slave2code.c: 94: unsigned char temp;
  2864                           ;slave2code.c: 95: char address,data;
  2865                           ;slave2code.c: 96: temp = SSPSTAT & 0x2D;
  2866  000044  50C7               	movf	4039,w,c	;volatile
  2867  000046  0B2D               	andlw	45
  2868  000048  6E13               	movwf	isr@temp,c
  2869                           
  2870                           ;slave2code.c: 97: if((temp ^ 0x09) == 0x00)
  2871  00004A  5013               	movf	isr@temp,w,c
  2872  00004C  6E01               	movwf	??_isr& (0+255),c
  2873  00004E  6A02               	clrf	(??_isr+1)& (0+255),c
  2874  000050  0E09               	movlw	9
  2875  000052  1A01               	xorwf	??_isr,f,c
  2876  000054  0E00               	movlw	0
  2877  000056  1A02               	xorwf	??_isr+1,f,c
  2878  000058  5002               	movf	??_isr+1,w,c
  2879  00005A  1001               	iorwf	??_isr,w,c
  2880  00005C  A4D8               	btfss	status,2,c
  2881  00005E  D003               	goto	i2l1621
  2882                           
  2883                           ;slave2code.c: 98: address = SSPBUF;
  2884  000060  CFC9 F011          	movff	4041,isr@address	;volatile
  2885  000064  D03F               	goto	i2l147
  2886  000066                     i2l1621:
  2887                           
  2888                           ;slave2code.c: 100: else if((temp ^ 0x29) == 0x00)
  2889  000066  5013               	movf	isr@temp,w,c
  2890  000068  6E01               	movwf	??_isr& (0+255),c
  2891  00006A  6A02               	clrf	(??_isr+1)& (0+255),c
  2892  00006C  0E29               	movlw	41
  2893  00006E  1A01               	xorwf	??_isr,f,c
  2894  000070  0E00               	movlw	0
  2895  000072  1A02               	xorwf	??_isr+1,f,c
  2896  000074  5002               	movf	??_isr+1,w,c
  2897  000076  1001               	iorwf	??_isr,w,c
  2898  000078  A4D8               	btfss	status,2,c
  2899  00007A  D01D               	goto	i2l1633
  2900                           
  2901                           ;slave2code.c: 101: {
  2902                           ;slave2code.c: 103: rec_vel = SSPBUF;
  2903  00007C  CFC9 F046          	movff	4041,_rec_vel	;volatile
  2904                           
  2905                           ;slave2code.c: 105: char c= rec_vel & 0x80;
  2906  000080  5046               	movf	_rec_vel,w,c
  2907  000082  0B80               	andlw	128
  2908  000084  6E12               	movwf	isr@c,c
  2909                           
  2910                           ;slave2code.c: 106: des_vel=rec_vel;
  2911  000086  0100               	movlb	0	; () banked
  2912  000088  C046  F08C         	movff	_rec_vel,_des_vel
  2913  00008C  0100               	movlb	0	; () banked
  2914  00008E  6B8D               	clrf	(_des_vel+1)& (0+255),b
  2915                           
  2916                           ;slave2code.c: 107: if (c==0x80)
  2917  000090  5012               	movf	isr@c,w,c
  2918  000092  0A80               	xorlw	128
  2919  000094  A4D8               	btfss	status,2,c
  2920  000096  D008               	goto	i2l1631
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;slave2code.c: 108: des_vel|=0xFF00;
  2924  000098  0100               	movlb	0	; () banked
  2925  00009A  0E00               	movlw	0
  2926  00009C  0100               	movlb	0	; () banked
  2927  00009E  138C               	iorwf	_des_vel& (0+255),f,b
  2928  0000A0  0EFF               	movlw	255
  2929  0000A2  0100               	movlb	0	; () banked
  2930  0000A4  138D               	iorwf	(_des_vel+1)& (0+255),f,b
  2931  0000A6  D01E               	goto	i2l147
  2932  0000A8                     i2l1631:
  2933                           
  2934                           ; BSR set to: 0
  2935                           ;slave2code.c: 109: else
  2936                           ;slave2code.c: 110: des_vel&=0x00FF;
  2937  0000A8  0EFF               	movlw	255
  2938  0000AA  0100               	movlb	0	; () banked
  2939  0000AC  178C               	andwf	_des_vel& (0+255),f,b
  2940  0000AE  0E00               	movlw	0
  2941  0000B0  0100               	movlb	0	; () banked
  2942  0000B2  178D               	andwf	(_des_vel+1)& (0+255),f,b
  2943  0000B4  D017               	goto	i2l147
  2944  0000B6                     i2l1633:
  2945                           
  2946                           ;slave2code.c: 112: else if((temp ^ 0x0C) == 0x00)
  2947  0000B6  5013               	movf	isr@temp,w,c
  2948  0000B8  6E01               	movwf	??_isr& (0+255),c
  2949  0000BA  6A02               	clrf	(??_isr+1)& (0+255),c
  2950  0000BC  0E0C               	movlw	12
  2951  0000BE  1A01               	xorwf	??_isr,f,c
  2952  0000C0  0E00               	movlw	0
  2953  0000C2  1A02               	xorwf	??_isr+1,f,c
  2954  0000C4  5002               	movf	??_isr+1,w,c
  2955  0000C6  1001               	iorwf	??_isr,w,c
  2956  0000C8  B4D8               	btfsc	status,2,c
  2957  0000CA  D00A               	goto	i2u133_40
  2958                           
  2959                           ;slave2code.c: 115: else if ((temp ^ 0x2C) == 0x00)
  2960                           
  2961                           ;slave2code.c: 113: SSPBUF=act_vel;
  2962  0000CC  5013               	movf	isr@temp,w,c
  2963  0000CE  6E01               	movwf	??_isr& (0+255),c
  2964  0000D0  6A02               	clrf	(??_isr+1)& (0+255),c
  2965  0000D2  0E2C               	movlw	44
  2966  0000D4  1A01               	xorwf	??_isr,f,c
  2967  0000D6  0E00               	movlw	0
  2968  0000D8  1A02               	xorwf	??_isr+1,f,c
  2969  0000DA  5002               	movf	??_isr+1,w,c
  2970  0000DC  1001               	iorwf	??_isr,w,c
  2971  0000DE  B4D8               	btfsc	status,2,c
  2972  0000E0                     i2u133_40:
  2973                           
  2974                           ;slave2code.c: 116: SSPBUF=act_vel;
  2975  0000E0  C049  FFC9         	movff	_act_vel,4041	;volatile
  2976  0000E4                     i2l147:
  2977                           
  2978                           ;slave2code.c: 120: PIR1bits.SSPIF=0;
  2979  0000E4  969E               	bcf	3998,3,c	;volatile
  2980                           
  2981                           ;slave2code.c: 121: SSPCON1bits.CKP=1;
  2982  0000E6  88C6               	bsf	4038,4,c	;volatile
  2983  0000E8                     i2l145:
  2984                           
  2985                           ;slave2code.c: 122: }
  2986                           ;slave2code.c: 124: if(PIR3bits.IC2QEIF==1)
  2987  0000E8  A4A4               	btfss	4004,2,c	;volatile
  2988  0000EA  D009               	goto	i2l1649
  2989                           
  2990                           ;slave2code.c: 125: {
  2991                           ;slave2code.c: 127: if(QEICONbits.UP_DOWN==1)
  2992  0000EC  AAB6               	btfss	4022,5,c	;volatile
  2993  0000EE  D003               	goto	i2l1645
  2994                           
  2995                           ;slave2code.c: 128: poscnt_rolovr++;
  2996  0000F0  4A3E               	infsnz	_poscnt_rolovr,f,c
  2997  0000F2  2A3F               	incf	_poscnt_rolovr+1,f,c
  2998  0000F4  D003               	goto	i2l1647
  2999  0000F6                     i2l1645:
  3000                           
  3001                           ;slave2code.c: 129: else
  3002                           ;slave2code.c: 130: poscnt_rolovr--;
  3003  0000F6  063E               	decf	_poscnt_rolovr,f,c
  3004  0000F8  A0D8               	btfss	status,0,c
  3005  0000FA  063F               	decf	_poscnt_rolovr+1,f,c
  3006  0000FC                     i2l1647:
  3007                           
  3008                           ;slave2code.c: 131: PIR3bits.IC2QEIF=0;
  3009  0000FC  94A4               	bcf	4004,2,c	;volatile
  3010  0000FE                     i2l1649:
  3011                           
  3012                           ;slave2code.c: 132: }
  3013                           ;slave2code.c: 134: if(PIR1bits.TMR1IF==1)
  3014  0000FE  A09E               	btfss	3998,0,c	;volatile
  3015  000100  D024               	goto	i2l160
  3016                           
  3017                           ;slave2code.c: 135: {
  3018                           ;slave2code.c: 137: a_err+=err_vel;
  3019  000102  5047               	movf	_err_vel,w,c
  3020  000104  0100               	movlb	0	; () banked
  3021  000106  2786               	addwf	_a_err& (0+255),f,b
  3022  000108  5048               	movf	_err_vel+1,w,c
  3023  00010A  0100               	movlb	0	; () banked
  3024  00010C  2387               	addwfc	(_a_err+1)& (0+255),f,b
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;slave2code.c: 138: count++;
  3028  00010E  4A4B               	infsnz	_count,f,c
  3029  000110  2A4C               	incf	_count+1,f,c
  3030                           
  3031                           ; BSR set to: 0
  3032                           ;slave2code.c: 139: if(count==4)
  3033  000112  504B               	movf	_count,w,c
  3034  000114  0A04               	xorlw	4
  3035  000116  104C               	iorwf	_count+1,w,c
  3036  000118  A4D8               	btfss	status,2,c
  3037  00011A  D012               	goto	i2l1661
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;slave2code.c: 140: {
  3041                           ;slave2code.c: 141: d_err=err_vel-p_err;
  3042  00011C  C03C  F001         	movff	_p_err,??_isr
  3043  000120  C03D  F002         	movff	_p_err+1,??_isr+1
  3044  000124  1E01               	comf	??_isr,f,c
  3045  000126  1E02               	comf	??_isr+1,f,c
  3046  000128  4A01               	infsnz	??_isr,f,c
  3047  00012A  2A02               	incf	??_isr+1,f,c
  3048  00012C  5047               	movf	_err_vel,w,c
  3049  00012E  2401               	addwf	??_isr,w,c
  3050  000130  6E3A               	movwf	_d_err,c
  3051  000132  5048               	movf	_err_vel+1,w,c
  3052  000134  2002               	addwfc	??_isr+1,w,c
  3053  000136  6E3B               	movwf	_d_err+1,c
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;slave2code.c: 142: count=1;
  3057  000138  0E00               	movlw	0
  3058  00013A  6E4C               	movwf	_count+1,c
  3059  00013C  0E01               	movlw	1
  3060  00013E  6E4B               	movwf	_count,c
  3061  000140                     i2l1661:
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;slave2code.c: 143: }
  3065                           ;slave2code.c: 144: TMR1=0xEC78;
  3066  000140  0EEC               	movlw	236
  3067  000142  6ECF               	movwf	4047,c	;volatile
  3068  000144  0E78               	movlw	120
  3069  000146  6ECE               	movwf	4046,c	;volatile
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;slave2code.c: 146: PIR1bits.TMR1IF=0;
  3073  000148  909E               	bcf	3998,0,c	;volatile
  3074  00014A                     i2l160:
  3075  00014A  C010  FFF5         	movff	??_isr+15,tablat
  3076  00014E  C00F  FFF8         	movff	??_isr+14,tblptru
  3077  000152  C00E  FFF7         	movff	??_isr+13,tblptrh
  3078  000156  C00D  FFF6         	movff	??_isr+12,tblptrl
  3079  00015A  C00C  FFF4         	movff	??_isr+11,prodh
  3080  00015E  C00B  FFF3         	movff	??_isr+10,prodl
  3081  000162  C00A  FFDA         	movff	??_isr+9,fsr2h
  3082  000166  C009  FFD9         	movff	??_isr+8,fsr2l
  3083  00016A  C008  FFE2         	movff	??_isr+7,fsr1h
  3084  00016E  C007  FFE1         	movff	??_isr+6,fsr1l
  3085  000172  C006  FFEA         	movff	??_isr+5,fsr0h
  3086  000176  C005  FFE9         	movff	??_isr+4,fsr0l
  3087  00017A  C004  FFFB         	movff	??_isr+3,pclatu
  3088  00017E  C003  FFFA         	movff	??_isr+2,pclath
  3089  000182  0011               	retfie		f
  3090  000184                     __end_of_isr:
  3091                           	opt stack 0
  3092  0000                     pclatu	equ	0xFFB
  3093                           pclath	equ	0xFFA
  3094                           tblptru	equ	0xFF8
  3095                           tblptrh	equ	0xFF7
  3096                           tblptrl	equ	0xFF6
  3097                           tablat	equ	0xFF5
  3098                           prodh	equ	0xFF4
  3099                           prodl	equ	0xFF3
  3100                           intcon	equ	0xFF2
  3101                           postinc0	equ	0xFEE
  3102                           fsr0h	equ	0xFEA
  3103                           fsr0l	equ	0xFE9
  3104                           wreg	equ	0xFE8
  3105                           fsr1h	equ	0xFE2
  3106                           fsr1l	equ	0xFE1
  3107                           fsr2h	equ	0xFDA
  3108                           fsr2l	equ	0xFD9
  3109                           status	equ	0xFD8
  3110                           pclatu	equ	0xFFB
  3111                           pclath	equ	0xFFA
  3112                           tblptru	equ	0xFF8
  3113                           tblptrh	equ	0xFF7
  3114                           tblptrl	equ	0xFF6
  3115                           tablat	equ	0xFF5
  3116                           prodh	equ	0xFF4
  3117                           prodl	equ	0xFF3
  3118                           intcon	equ	0xFF2
  3119                           postinc0	equ	0xFEE
  3120                           fsr0h	equ	0xFEA
  3121                           fsr0l	equ	0xFE9
  3122                           wreg	equ	0xFE8
  3123                           fsr1h	equ	0xFE2
  3124                           fsr1l	equ	0xFE1
  3125                           fsr2h	equ	0xFDA
  3126                           fsr2l	equ	0xFD9
  3127                           status	equ	0xFD8
  3128                           
  3129                           	psect	rparam
  3130  0000                     pclatu	equ	0xFFB
  3131                           pclath	equ	0xFFA
  3132                           tblptru	equ	0xFF8
  3133                           tblptrh	equ	0xFF7
  3134                           tblptrl	equ	0xFF6
  3135                           tablat	equ	0xFF5
  3136                           prodh	equ	0xFF4
  3137                           prodl	equ	0xFF3
  3138                           intcon	equ	0xFF2
  3139                           postinc0	equ	0xFEE
  3140                           fsr0h	equ	0xFEA
  3141                           fsr0l	equ	0xFE9
  3142                           wreg	equ	0xFE8
  3143                           fsr1h	equ	0xFE2
  3144                           fsr1l	equ	0xFE1
  3145                           fsr2h	equ	0xFDA
  3146                           fsr2l	equ	0xFD9
  3147                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         35
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     55      76
    BANK0           160     26      46
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___ftadd
    _vel_read->___aldiv
    _vel_read->___awdiv
    ___awdiv->___wmul
    ___fttol->___ftadd
    ___ftmul->___awtoft
    ___ftadd->___ftmul
    ___awtoft->___ftpack

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___fttol
    ___fttol->___ftadd

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   13484
                                             18 BANK0      8     8      0
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             ___wmul
                           _init_I2C
                           _init_QEI
                           _init_pwm
                     _init_time_base
                   _interrupt_enable
                      _pwm_generator
                           _vel_read
 ---------------------------------------------------------------------------------
 (1) _vel_read                                            14    14      0    1747
                                             33 COMRAM    14    14      0
                            ___aldiv
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     543
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     684
                                             25 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     428
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _pwm_generator                                        7     5      2     154
                                             19 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _interrupt_enable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_time_base                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pwm                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_QEI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     448
                                              3 BANK0     15    11      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3129
                                             31 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    3980
                                             46 COMRAM     9     3      6
                                              0 BANK0      3     3      0
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2660
                                             27 COMRAM     4     1      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2373
                                             19 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                 20    20      0     113
                                              0 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___awtoft
     ___ftpack
     ___wmul (ARG)
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftpack (ARG)
     ___wmul (ARG)
   ___wmul
   _init_I2C
   _init_QEI
   _init_pwm
   _init_time_base
   _interrupt_enable
   _pwm_generator
   _vel_read
     ___aldiv
     ___awdiv
       ___wmul (ARG)
     ___wmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1A      2E       5       28.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     37      4C       1       80.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7A       3        0.0%
DATA                 0      0      7A      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Jun 16 03:00:18 2015

            _pwm_generator 0AEE               ___awdiv@sign 001F        ___wmul@multiplicand 0016  
             __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000  
             __CFG_CP3$OFF 000000                __CFG_OSC$HS 000000               ___ftadd@exp1 0062  
             ___ftadd@exp2 0061               ___ftadd@sign 0060                        l510 09B2  
                      l614 0672                        l551 0212                        l553 0236  
                      l562 02EC                        l571 030A                        l547 01DC  
                      l548 0380                        l594 0852               __CFG_CPB$OFF 000000  
             __CFG_CPD$OFF 000000                        u805 0690                        u815 06C0  
                      _isr 0008                        wreg 000FE8               __CFG_IESO$ON 000000  
         ??_init_time_base 0014               __CFG_LVP$OFF 000000                       l1321 0706  
                     l1313 06D8                       l1331 073A                       l1323 070A  
                     l1307 06A8                       l1319 06FA                       l1335 0748  
                     l1351 09D8                       l1339 075E                       l1363 0A0E  
                     l1365 0A16                       l1357 09F8                       l1383 0A4E  
                     l1375 0A36                       l1367 0A1A                       l1731 0968  
                     l1723 092A                       l1379 0A40                       l1733 0986  
                     l1725 0934                       l1805 0328                       l1735 0990  
                     l1727 0952                       l1719 091C                       l1815 035C  
                     l1831 07B0                       l1903 05E0                       l1825 078A  
                     l1921 0662                       l1913 061E                       l1763 0220  
                     l1915 0636                       l1907 05FC                       l1757 01EA  
                     l1845 07E2                       l1917 063C                       l1791 02AC  
                     l1855 080A                       l1951 03B4                       l1943 03A2  
                     l1785 0288                       l1769 022E                       l1849 07F2  
                     l1961 049C                       l1875 0ACA                       l1787 0294  
                     l1779 025E                       l1859 081A                       l1971 0514  
                     l1963 04D4                       l1797 02D6                       l1789 02A0  
                     l1885 0552                       l1799 02E2                       l1967 04F2  
                     ?_isr 0001                       u1501 0198                       u1511 01AE  
                     u1711 0780                       u1800 057E                       u1731 079A  
                     u1740 07A2                       u1805 0574                       u1830 0604  
                     u1781 0542                       _TMR1 000FCE                       _TMR5 000F87  
            __CFG_FCMEN$ON 000000                       _main 0382               ___ftpack@arg 0014  
             ___ftpack@exp 0017                       fsr0h 000FEA                       fsr1h 000FE2  
                     fsr0l 000FE9                       fsr2h 000FDA                       fsr1l 000FE1  
                     fsr2l 000FD9                       isr@c 0012                       pclat 000FFA  
                     prodh 000FF4                       prodl 000FF3                       start 0184  
            __CFG_MCLRE$ON 000000             ?_pwm_generator 0014               ___ftmul@cntr 002D  
             ___ftmul@sign 002E               ___fttol@exp1 0071               ___fttol@lval 006D  
                    ??_isr 0001   __end_of_interrupt_enable 0BD2            __end_of___aldiv 0770  
                    ?_main 0001            __end_of___awdiv 0A58            __end_of___ftadd 0382  
          __end_of___ftmul 0854                      _T0CON 000FD5            ___awdiv@divisor 001C  
                    _T1CON 000FCD            __end_of___fttol 0674                      _PDC0H 000F78  
                    _PDC0L 000F79                      _DTCON 000F6D                      _T5CON 000FB7  
                    i2l160 014A                      i2l145 00E8                      i2l147 00E4  
          ___awdiv@counter 001E                      _TMR0H 000FD7                      _TMR0L 000FD6  
                    _VELRH 000F69                      _VELRL 000F68                      _PTMRH 000F7C  
                    _PTMRL 000F7D                      _TRISB 000F93                      _TRISC 000F94  
            __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000  
            __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000             __CFG_EBTR1$OFF 000000  
           __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000  
            __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000                      _a_err 0086  
                    _d_err 003A             __CFG_EBTRB$OFF 000000              ___awtoft@sign 001F  
          pwm_generator@DC 0014                      _count 004B                      _p_err 003C  
            ___ftpack@sign 0018                      _velrh 0088                      _velrl 008A  
                    main@u 0076             __CFG_BOREN$OFF 000000                      tablat 000FF5  
                    status 000FD8            __initialization 0A58             __CFG_HPOL$HIGH 000000  
             __end_of_main 052A             __CFG_LPOL$HIGH 000000                     ??_main 0072  
            ___fttol@sign1 006C              __activetblptr 000000           ___awdiv@dividend 001A  
                   _ANSEL0 000FB8           __end_of___awtoft 0AEE           __end_of___ftpack 09B4  
                   i2l1621 0066                     i2l1631 00A8                     i2l1633 00B6  
                   i2l1661 0140                     i2l1645 00F6             __CFG_WDTEN$OFF 000000  
                   i2l1647 00FC                     i2l1649 00FE                     _QEICON 000FB6  
                   _PTCON0 000F7F                     _PTCON1 000F7E             __CFG_WINEN$OFF 000000  
                   _PTPERH 000F7A                     _PTPERL 000F7B                     _SSPADD 000FC8  
                   _SSPCON 000FC6                     _SSPBUF 000FC9            ??_pwm_generator 0016  
                ??___aldiv 001C                     ___wmul 0B7A                  ??___awdiv 001E  
                ??___ftadd 0035             __CFG_STVREN$ON 000000                  ??___ftmul 0026  
                ??___fttol 0067           __end_of_init_I2C 0BB6           __end_of_init_QEI 0B7A  
         __end_of_init_pwm 0B52                     clear_0 0A5E                     clear_1 0A6A  
         ___awdiv@quotient 0020                     main@DC 0078      ___ftmul@f3_as_product 002A  
             __pdataCOMRAM 004B           __end_of_vel_read 090C                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                 __accesstop 0060  
  __end_of__initialization 0AA0                 ___ftadd@f1 002F                 ___ftadd@f2 0032  
               ___awtoft@c 001C            __CFG_T1OSCMX$ON 000000                 ___ftmul@f1 0020  
               ___ftmul@f2 0023                 ___fttol@f1 0063             __pcstackCOMRAM 0001  
             __pidataBANK0 0BD4        vel_read@pulse_count 0026                 __pbssBANK0 007A  
               __pnvCOMRAM 0049                 _actual_pos 0038                    ?___wmul 0014  
          __CFG_WDPS$32768 000000          ?_interrupt_enable 0001                  ?___awtoft 001C  
                ?___ftpack 0014                    _DFLTCON 000F60         ??_interrupt_enable 0014  
                  _MAXCNTH 000F65                    _MAXCNTL 000F64                    _POSCNTH 000F67  
                  _POSCNTL 000F66                    _PWMCON0 000F6F                    _PWMCON1 000F6E  
                  _SSPSTAT 000FC7            __CFG_PWMPIN$OFF 000000                  ?_init_I2C 0001  
                ?_init_QEI 0001                  ?_init_pwm 0001            __CFG_PWRTEN$OFF 000000  
                  __Hparam 0000                    __Lparam 0000                  ?_vel_read 0001  
                  ___aldiv 0674                    ___awdiv 09B4                    ___ftadd 0188  
          __size_of___wmul 0026                    ___ftmul 0770                    ___fttol 052A  
                  _act_vel 0049                    __pcinit 0A58                 ??___awtoft 001F  
               ??___ftpack 0019                    __ramtop 0300                    _des_vel 008C  
                  __ptext0 0382                    __ptext1 0854                    __ptext2 0B7A  
                  __ptext3 09B4                    __ptext4 0674                    __ptext5 0AEE  
                  __ptext6 0BC8                    __ptext7 0BB6                    __ptext8 0B28  
                  __ptext9 0B52                  _T0CONbits 000FD5                    _err_vel 0047  
             __size_of_isr 017C                    _rec_vel 0046                    _old_pos 007E  
                  _new_pos 007A           ___aldiv@dividend 0014                    _poscnth 0040  
                  _poscntl 0042                    _velr_vh 0082       end_of_initialization 0AA0  
               ??_init_I2C 0014                 ??_init_QEI 0014                    isr@temp 0013  
               ??_init_pwm 0014    __size_of_init_time_base 0012       pwm_generator@on_time 0019  
               ??_vel_read 0022           ___aldiv@quotient 001E                    postinc0 000FEE  
                _PORTAbits 000F80                  _TRISAbits 000F92                  _TRISBbits 000F93  
              _CAP1CONbits 000F63      __end_of_pwm_generator 0B28                ___ftmul@exp 0029  
           __end_of___wmul 0BA0              __pidataCOMRAM 0BD2        start_initialization 0A58  
              __end_of_isr 0184                 isr@address 0011                   ??___wmul 0018  
              __pdataBANK0 008C          __size_of___awtoft 0048          __size_of___ftpack 00A8  
              __pbssCOMRAM 0038              __pcstackBANK0 0060  __size_of_interrupt_enable 000A  
           _init_time_base 0BB6          __size_of_init_I2C 0016          __size_of_init_QEI 0028  
        __size_of_init_pwm 002A                  __pintcode 0008                   ?___aldiv 0014  
                 ?___awdiv 001A                   ?___ftadd 002F                   ?___ftmul 0020  
                 ?___fttol 0063          __size_of_vel_read 00B8     __end_of_init_time_base 0BC8  
          ___aldiv@divisor 0018            ___aldiv@counter 001C             ___wmul@product 0018  
                 _PIE1bits 000F9D                   _PIE3bits 000FA3                   i2u133_40 00E0  
                 _PIR1bits 000F9E                   _PIR3bits 000FA4                 _ADCON0bits 000FC2  
        ___wmul@multiplier 0014            ?_init_time_base 0001              _vel_read$1375 002E  
                 __Hrparam 0000                   __Lrparam 0000           __size_of___aldiv 00FC  
         __size_of___awdiv 00A4           __size_of___ftadd 01FA           __size_of___ftmul 00E4  
         __size_of___fttol 014A                   ___awtoft 0AA6                   ___ftpack 090C  
                 __ptext10 0BA0                   __ptext11 052A                   __ptext12 0770  
                 __ptext13 0188                   __ptext14 0AA6                   __ptext15 090C  
         _interrupt_enable 0BC8                   _init_I2C 0BA0                   _init_QEI 0B52  
            __size_of_main 01A8                   _init_pwm 0B28                   _vel_read 0854  
               _INTCONbits 000FF2                 _QEICONbits 000FB6     __size_of_pwm_generator 003A  
                 intlevel2 0000                _tmr5_rolovr 0044              _poscnt_rolovr 003E  
             vel_read@freq 002C               vel_read@temp 002A               ___aldiv@sign 001D  
              _SSPCON1bits 000FC6  
